2019-06-13  Kelly (KT) Thompson  <kgt@lanl.gov>

	*  Overview

	Draco has been updated to version 7_2_0 and is tied to the release
	of Jayenne-8_1_0 and Capsaicin-1_1_0.  This release was completed
	on the following platforms/toolsets:

	* Platforms:
	  CTS-1              Intel 18.0.2    OpenMPI-2.1.2
	  (SN/GR/FI/IC/CY)   Intel 17.0.4    OpenMPI-2.1.2
	                     GCC 7.4.0       OpenMPI-2.1.2
	  ATS-1              Intel 18.0.2    Cray_MPICH2-7.7.4
	  (TT/TR)            Intel 17.0.4    Cray_MPICH2-7.7.4
	  TH/CP              -               -
	  ATS-2              GCC 7.3.1       Spectrum MPI
	                     XL 2019.04      Spectrum MPI

	* Information:

	Draco-7_2_20190613, build date 2019/06/13;build type: Debug;DBC: 7;
	DRACO_DIAGNOSTICS: 0

	CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, Ryan T. Wollaeger,
	Alex R. Long, James S. Warsa, Matt A. Cleveland, Kendra P. Long,
	Tim Kelley, Jae H. Chang, Andrew T. Till, and David A. Dixon.

	Prior Contributers: Gabriel M. Rockefeller, Allan B. Wollaber, Rob B. Lowrie,
	Paul W. Talbot, Katherine J. Wang, Peter Ahrens, Daniel Holladay,
	Jeff D. Densmore, Massimiliano Rosa, Todd J. Urbatsch, Jeff Furnish,
	John McGhee, Kris C. Garrett, Mike Buksas, Nick Myers, Paul Henning,
	Randy Roberts, Seth Johnson, Todd Adams, Tom Evans, and Lori Pritchett-Sheats.

	Copyright (C) 2016-2019 Triad National Security, LLC. (C19028, LA-CC-16-016),
	Released under a 3-Clause BSD License.

	* Summary of changes:

	- 192 files changed, added or removed in 121 commits.
	- Github #590 Begin supporting rzansel and sierra (ATS-2) machines
	              (power9 + volta).
	- Gitlab #616, #623 Better support for some Darwin nodes (x86+volta,
	              power9+volta, arm).
	- Github #577 New Open Source License, Copyright record C19028
	- Github #586 Add analytic electron-ion coupling coefficient support to
	              CDI.
	- Github #589, #604 Update device package and build system code to
	              support newer CUDA (v9, v10).
	- Github #592 Begin providing support for atomics.
	- Github #620 Fix a "C++ static initialization fiasco" bug to fix broken
	              static builds.
	- Github #633 Enable 1D and 3D: mesh construction and X3D parsing
	- Github #634 Provide a function to query env vars and provide access to
	              SLURM info.

	* Corrected Defects

	- Github #585, #622 Update the IPCRESS reader for python3.
	- Github #606 Don't force DBS settings on clients
	- Github #618 Provide an implementation for Processor_Group when
	              C4=SCALAR.
	- Bug #1151 Occasional mpirun errors on snow
	- Bug #1242 Support machines where mpiexec is at /usr/bin
	- Bug #1268 memory: needs more tests
	- Bug #1399 tt-fey: fix sync_repository module errors
	- Bug #1405 trinitite: new issues
	- Bug #1409 Building cuda test/library fails due to pthread flag
	- Bug #1418 Darwin: ARM regression fails to build draco
	- Bug #1424 Regressions: switch to gcc/7.4.0 for nightly (new production
	            compiler)
	- Bug #1436 Unregistered dependency
	- Bug #1441 Archive (gitlab) darwin & rzansel spack configs
	- Bug #1442 Fix build warnings for darwin volta-x86 nodes
	- Bug #1447 Create asc_packages recipes for TRT codes.
	- Bug #1448 xlf2008_r issues weird warnings about incorrect arguments
	- Bug #1505 cdi_ipcress_tIpcress_Interpreter_twomats_ipcress is failing
	            for Win32-Release builds
	- Bug #1513 numdiff syntax error on Win32
	- Bug #1516 trinitite: Random123 issues after recent DST

	* New Features

	- Github #579 Begin using CMake @include_guard@ and
 	              @cmake_host_system_information@
	- Github #580 Introduce build system variable @SITENAME_FAMILY@ while
	              improving perfbench regressions. Create a nightly regression
	              that uses intel/19.0.1 and openmpi/3.1.2.
	- Github #581 Update compiler flags used by IBM XL.
	- Github #582 Update regression system for Darwin's volta-x86 nodes.
	- Github #600 Add graphic dump reset time, to refine overwrite behavior
	- Github #607 Begin supporting mpich.
	- Github #612 Remove use of deprecated FindPythonInterp
	- Github #619 Rename nGray_Analytic_MultigroupOpacity to
	              Compound_Analytic_MultigroupOpacity
	- Github #624 Provide a newer Docker container for CI testing
	- Feature #1351 Regressions: activate newtools regression
	- Feature #1410 update GPU_device to use modern cuda, print compute capability
	- Feature #1420 Provide Electron-Ion coupling models through CDI
	- Feature #1451 Specialize add_component_library macro to set separable
	                compilation for CUDA files
	- Task #1062 Prepare Darwin as sierra-proxy machine
	- Task #1083 Darwin: demo power9+volta nodes
	- Task #1149 setupMPI.cmake: use 'cmake_host_system_information'
	- Task #1168 Demonstrate device singleton for GPUs on Darwin
	- Task #1229 Port codes to ARM processors
	- Task #1233 Attempt TPL build on power9 with xlc
	- Task #1272 Work with FCI to obtain CC# for Draco-7 == Draco-6_25_0
	- Task #1379 Add Draco and Branson spackages to spack
	- Task #1411 Create nightly regression on Darwin
	- Task #1419 LLNL: Provide needed TPLs at ucontrib
	- Task #1503 Draco_Mesh constructor using face indexing
	- Task #1534 Provide a slurm_info class

	* Known Defects

	- Bug #1514 cuda+mpi issues on darwin power9 and arm
	- Bug #1459 Demo cce/9 on capulin
	- Bug #1446 DBS: If exe/lib has cu files --> force static link
	- Bug #1444 Attempt to use clang on ATS-2 machines
	- Bug #1443 CDash integration with GitHub
	- Bug #1266 cdi_analytic: Code coverage improvements
	- Bug #1265 Quadrature:  Needs more unit tests
	- Bug #1227 VS2017: tstSuperlu-dist not running?
	- Bug #1148 perfbench time variation on snow
	- Bug #59 cdi_eospac design flaw

2019-02-22  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-7_1_0":https://rtt.lanl.gov/redmine/versions/65.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-8_0_0":https://rtt.lanl.gov/redmine/versions/44
	  - "Capsaicin-4_16_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  SN/GR/FI/IC/CY     Intel 18.0.2    OpenMPI-2.1.2
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     GCC 6.4.0       OpenMPI-2.1.2
	  TT/TR              Intel 18.0.2    Cray_MPICH2-7.7.3
	                     Intel 17.0.4    Cray_MPICH2-7.7.3

	* Summary of changes:
	- 1040 files changed, added or removed in 35 commits.
	- Jayenne was unable to release when Draco-7_0_0 was released
	  because an updated ds++/FMA.hh file was required.

 	* Corrected Defects:
	- Github #572 Eliminate 8 build warnings (Visual Studio)
	- Github #571 Re-enable compilation with CUDA.
	- Github #570 Fix RelWithDebInfo builds.
	- Github #561 Win32: Fix CAFS issues wrt CMake-3.13+
	- Github #558 Enable xthi and ythi unit tests for win32.
	- Github #557 Fix a module load error
	- Bug #1378 Help Capsaicin stand up regressions for core, trt, npt
	- Bug #1354 Possible cyclic dependencies in Scalar/Parallel Unit Test implementation
	- Bug #1246 Cannot delete branches from forked EAP repo
	- Bug #1090 Regressions on trinitite occasionally fail with "address in use" errors

	* New Features:

	- Github #574 Move LaTeX related files to the dracodoc repository
	- Github #573 Simplify some function signatures in CDI calls
	- Github #569 Updates for win32 regressions
	- Github #568 Update the version of our LaTeX macro.
	- Github #567 Another tweak to FMA.hh
	- Github #566 Simplifying and extending analytic opacity models
	- Github #565 Updates to the regression system to support TRT and NPT
	- Github #564 Experimental simplified class parser templates.
	- Github #563 Upgrade Require to Insist to avoid unused variable warning
	- Github #562 Setup for trt regressions
	- Github #560 Update Copyright notifications
	- Github #559 Merge Draco-7_0_0 back to develop
	- Github #556 Enable cdi_eospac and memory packages for Win32 builds.
	- Github #555 Modify/Upgrade how the FMA CPP macro works.
	- Github #554 Fix fortran compiler config issues on mac
	- Github #549 Add boilerplate base for Class_Parse_Table
	- Github #548 Enable xthi and ythi builds/tests for Visual Studio.

	- Feature #227  refactor cdi_analytic opacities
	- Support #1350 ccs-net: add numpy to python@3.6.5 installation
	- Task #1355 Demo spack chain on snow
	- Task #1283 Demonstrate hierarchical modules on snow
	- Task #1248 Review xthi, ythi and alternate implementations that are less Linux-specific.

	* Known Defects:

	- Bug #1399 tt-fey: fix sync_repository module errors
	- Bug #1370 Get Shane Coffing's supernova problem running.
	- Bug #1268 memory: needs more tests
	- Bug #1266 cdi_analytic: Code coverage improvements
	- Bug #1265 Quadrature:  Needs more unit tests
	- Bug #1242 Support machines where mpiexec is at /usr/bin
	- Bug #1227 VS2017: tstSuperlu-dist not running?
	- Bug #1151 Occasional mpirun errors on snow
	- Bug #1148 perfbench time variation on snow
	- Bug #59 cdi_eospac design flaw

	* Statistics

Contributers
------------

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, Ryan T. Wollaeger,
     James S. Warsa, Alex R. Long, Kendra P. Keady, Jae H. Chang,
     Matt A. Cleveland, Andrew T. Till, and Tim Kelley.

Prior Contributers: Gabriel M. Rockefeller, Allan B. Wollaber,
     Lori A. Pritchett-Sheats, Rob B. Lowrie, Paul W. Talbot,
     Katherine J. Wang, Peter Ahrens, Daniel Holladay, Jeff D. Densmore,
     Massimiliano Rosa, Todd J. Urbatsch, Jeff Furnish, John McGhee,
     Kris C. Garrett, Mike Buksas, Nick Myers, Paul Henning, Randy Roberts,
     Seth Johnson, Todd Adams, and Tom Evans.

Copyright (C) 2016-2019 Triad National Security, LLC. (LA-CC-16-016)

Code Coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
FortranChecks/                         1 /     1 = 100%       7 /    14 =  50%
RTT_Format_Reader/                   323 /   323 = 100%     377 /   434 =  86%
cdi/                                  48 /    48 = 100%      82 /    96 =  85%
cdi_eospac/                           52 /    52 = 100%      65 /   127 =  51%
cdi_ipcress/                         106 /   106 = 100%     210 /   238 =  88%
compton/                              16 /    16 = 100%       4 /     6 =  66%
ds++/                                336 /   336 = 100%     493 /   553 =  89%
fit/                                   1 /     1 = 100%      15 /    16 =  93%
lapack_wrap/                          12 /    12 = 100%       0 /     0
linear/                               16 /    16 = 100%     335 /   392 =  85%
mesh/                                 56 /    56 = 100%      77 /    82 =  93%
meshReaders/                          15 /    15 = 100%     122 /   162 =  75%
mesh_element/                         23 /    23 = 100%     154 /   197 =  78%
min/                                   9 /     9 = 100%     137 /   154 =  88%
norms/                                27 /    27 = 100%      23 /    36 =  63%
ode/                                   5 /     5 = 100%      29 /    32 =  90%
rng/                                  57 /    57 = 100%      23 /    24 =  95%
roots/                                 8 /     8 = 100%     258 /   310 =  83%
special_functions/                    31 /    31 = 100%     193 /   216 =  89%
timestep/                             62 /    62 = 100%     104 /   178 =  58%
units/                                82 /    82 = 100%      58 /    58 = 100%
viz/                                  32 /    32 = 100%     138 /   178 =  77%
c4/                                  181 /   182 =  99%     442 /   504 =  87%
quadrature/                          224 /   226 =  99%     603 /   732 =  82%
parser/                              321 /   330 =  97%    1260 /  1611 =  78%
cdi_analytic/                        146 /   158 =  92%     173 /   226 =  76%
diagnostics/                          16 /    21 =  76%      37 /    55 =  67%
memory/                                4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2210 /  2241 =  98%    5419 /  6633 =  81%

Lines of Code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             439          12982          22648          53990
C/C++ Header                    353           7384          21695          17732
Lisp                             19           2038           2973          13118
CMake                           126           2253           6133           9388
Bourne Shell                     34            708           1511           3458
Bourne Again Shell               12            302            592           1609
Python                           16            447            766           1475
CSS                               1            261             75           1260
Fortran 90                        8            114            217            381
C                                 4             59            129            288
C Shell                           2             32             36            163
CUDA                              4             46             89            132
DOS Batch                         4             59             92            109
HTML                              2              3             47             68
YAML                              3             22            140             66
make                              2             22             13             39
--------------------------------------------------------------------------------
SUM:                           1029          26732          57156         103276
--------------------------------------------------------------------------------

2018-12-18  Kelly (KT) Thompson  <kgt@lanl.gov>

 	* "Release draco-7_0_0":https://rtt.lanl.gov/redmine/versions/63.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Capsaicin-4_15_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  SN/GR/FI/IC/CY     Intel 18.0.2    OpenMPI-2.1.2
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     GCC 6.4.0       OpenMPI-2.1.2
	  TT/TR              Intel 18.0.2    Cray_MPICH2-7.7.3
	                     Intel 17.0.4    Cray_MPICH2-7.7.3
	  Thunder/Astra      NA
	  Toolbox            NA
	  Sierra/RZAnsel     NA
	  Darwin Power9      NA
	  Darwin ARM         NA

	* Summary of changes:
	- 378 files changed, added or removed in 58 commits.
	- Extend draco_mesh and X3D parser capability
	- Cleaned up the autodoc build target.
	- Enable Compton and xthi/ythi tests under Visual Studio

 	* Corrected Defects:
	- Github #508 A couple of tweaks to fix build/run on Darwin ARM nodes.
	- Github #515 Fix DbC bug in Draco_Mesh and update X3D parser.
	- Github #516 Fix a few typos in the release scripts.
	- Github #518 A few more tweaks to the release scripts for draco-6_25_0
	- Github #519 Fixes to target autodoc
	- Github #520 Minor cleanup for environments and regressions
	- Github #533 Fix a cmake logic error related to XCode.
	- Github #539 Fix a bug related to setting version numbers.
	- Github #541 Update regression environment to fix script-update.
	- Github #544 Compton bugfix
	- Github #547 Misc updates to prepare for next release
	- Github #552 Added missing header.
	- Bug #1250 Add git-commit-precomit-hook for f90
	- Bug #1291 Review doxygen build errors
	- Bug #1292 Track CMake + nvcc issue related to pthreads
	- Bug #1304 doxygen not generating expected collaboration diagrams
	- Bug #1308 Published autodoc has wrong stylesheet
	- Bug #1330 Published autodoc: selecting Draco class from other project links to wrong page
	- Bug #1335 'update_regression_scripts.sh' broken
	- Bug #1339 CSK update to 0.4.0 broke ccs-net regression
	- Bug #1353 Provide csk/0.4.1 on ccs-net machines
	- Bug #1354 Possible cyclic dependencies in Scalar/Parallel Unit Test implementation

	* New Features:

	- Github #509 Teach the PR regression system to also build autodoc.
	- Github #510 Core autodoc
	- Github #511 Merge Draco-6_25_0 release back to develop
	- Github #513 Make minor modifications following further usage of Draco_Mesh.
	- Github #514 Add delete with size to complement unsized delete.
	- Github #517 Update regression system to support new Capsaicin projects.
	- Github #521 Cleanup Units/PhysicalConstants and add some comments.
	- Github #522 General code cleanup
	- Github #523 Add single-call test functions to Draco.
	- Github #527 Fix warnings and errors generated when running doxygen.
	- Github #528 Travis autodoc
	- Github #530 Compton with average energy deposition
	- Github #531 Provide new git commit hooks that test f90 code style.
	- Github #534 Add F90 style and line-length checks to check_style.sh
	- Github #536 More cleanup
	- Github #540 Enhance autodoc features.
	- Github #542 Add compton to VS2017 regressions.
	- Github #543 Updates to the LANL HPC release scripts.
	- Github #545 Corrected the release script for cts machines.
	- Github #546 Remove csk-0.4.0 version specification from regression scripts so 0.4.1 can be loaded
	- Github #548 Enable xthi and ythi builds/tests for Visual Studio.
	- Github #549 Add boilerplate base for Class_Parse_Table
	- Github #550 Order nodes counterclockwise for each face in `Draco_Mesh::Layout`.
	- Feature #1284 Extend checkpr.sh to build/install generated autodoc.
	- Support #1350 ccs-net: add numpy to python@3.6.5 installation
	- Task #1301 Move the environment bash functions to common.sh
	- Task #1303 Update spack for doxygen@1.8.14 + shared_ptr patch

	* Known Defects:

	- Bug #1306 Possible to have gitlab CI use cl.exe?
	- Bug #1289 Move docker containers to gitlab?
	- Bug #1282 Add support for newer superlu-dist
	- Bug #1269 Demo CDash running in a docker container
	- Bug #1268 memory: needs more tests
	- Bug #1266 cdi_analytic: Code coverage improvements
	- Bug #1265 Quadrature: Needs more unit tests
	- Bug #1246 Cannot delete branches from forked EAP repo
	- Bug #1242 Support machines where mpiexec is at /usr/bin
	- Bug #1227 VS2017: tstSuperlu-dist not running?
	- Bug #1207 Appveyor: enable more tests
	- Bug #1152 Visualization: consider VTK or Silo
	- Bug #1151 Occasional mpirun errors on snow
	- Bug #1149 setupMPI.cmake: use 'cmake_host_system_information'
	- Bug #1148 perfbench time variation on snow
	- Bug #1133 Move code from c4 that doesn't wrap MPI
	- Bug #1090 Regressions on trinitite occasionally fail with "address in use" errors
	- Bug #1083 Darwin: demo power9+volta nodes
	- Bug #1062 Prepare Darwin as sierra-proxy machine
	- Bug #1049 Visit install not working on ccs-net machines
	- Bug #1025 Add common build options to "Enabled features" list in build summary
	- Bug #59 cdi_eospac design flaw

	* Metrics:

Contributers (updated Release.cc and README.md with this ordering).

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, Ryan T. Wollaeger, James S. Warsa,
      Alex R. Long, Kendra P. Keady, Jae H. Chang, Matt A. Cleveland, Andrew T. Till,
      Tim Kelley and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Gabriel M. Rockefeller,
     Allan B. Wollaber, Rob B. Lowrie, Lori A. Pritchett-Sheats,
     Paul W. Talbot, and Katherine J. Wang.

Code Coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  82 /    82 = 100%      58 /    58 = 100%
../source/src/quadrature/fctest/       1 /     1 = 100%       0 /     0
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/mesh/                   56 /    56 = 100%      77 /    82 =  93%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/special_functions/      31 /    31 = 100%     193 /   216 =  89%
../source/src/ds++/                  336 /   336 = 100%     493 /   553 =  89%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/cdi_ipcress/           106 /   106 = 100%     210 /   238 =  88%
../source/src/RTT_Format_Reader/     323 /   323 = 100%     377 /   434 =  86%
../source/src/linear/                 16 /    16 = 100%     335 /   392 =  85%
../source/src/c4/bin/                  4 /     4 = 100%      17 /    20 =  85%
../source/src/cdi/                    46 /    46 = 100%      73 /    86 =  84%
../source/src/roots/                   8 /     8 = 100%     258 /   310 =  83%
../source/src/mesh_element/           23 /    23 = 100%     154 /   197 =  78%
../source/src/viz/                    32 /    32 = 100%     138 /   178 =  77%
../source/src/meshReaders/            15 /    15 = 100%     122 /   162 =  75%
../source/src/compton/                16 /    16 = 100%       4 /     6 =  66%
../source/src/norms/                  27 /    27 = 100%      23 /    36 =  63%
../source/src/timestep/               62 /    62 = 100%     104 /   178 =  58%
../source/src/cdi_eospac/             52 /    52 = 100%      65 /   127 =  51%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/c4/                    181 /   182 =  99%     440 /   504 =  87%
../source/src/quadrature/            224 /   226 =  99%     603 /   732 =  82%
../source/src/parser/                321 /   330 =  97%    1260 /  1611 =  78%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/diagnostics/            16 /    21 =  76%      37 /    55 =  67%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
../source/src/diagnostics/qt/          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2208 /  2246 =  98%    5407 /  6621 =  81%


Lines of Code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             439          12982          22648          53990
C/C++ Header                    353           7384          21695          17732
Lisp                             19           2038           2973          13118
CMake                           126           2253           6133           9388
Bourne Shell                     34            708           1511           3458
Bourne Again Shell               12            302            592           1609
Python                           16            447            766           1475
CSS                               1            261             75           1260
Fortran 90                        8            114            217            381
C                                 4             59            129            288
C Shell                           2             32             36            163
CUDA                              4             46             89            132
DOS Batch                         4             59             92            109
HTML                              2              3             47             68
YAML                              3             22            140             66
make                              2             22             13             39
--------------------------------------------------------------------------------
SUM:                           1029          26732          57156         103276
--------------------------------------------------------------------------------

	* LOC no-tests: Ratio: 71259/37325 = 1.91
	- 0.9 lines of tests per line of code
	- 1.07 lines of comments per line of code.

2018-10-23  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-6_25_0":https://rtt.lanl.gov/redmine/versions/62.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-7_18_0":https://rtt.lanl.gov/redmine/versions/61
	  - "Capsaicin-4_14_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/WF              Intel 18.0.2    OpenMPI-2.1.2
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     GCC 6.4.0       OpenMPI-2.1.2
	  SN/BA/GR/FI/IC     Intel 18.0.2    OpenMPI-2.1.2
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     GCC 6.4.0       OpenMPI-2.1.2
	  TT/TR              Intel 18.0.2    Cray_MPICH2-7.7.1
	                     Intel 17.0.4    Cray_MPICH2-7.7.1

	* Summary of changes:
	- 594 files changed, added or removed in 211 commits.
	- Python is now a required component for Draco.
	- Added support for f90cache
	- Added a runtime_check function to rtt_c4
	- Added a parallel output stream.
	- Added "ythi", which is like xthi except uses std::thread instead of OpenMP.
	- Force DbC failures to print a stacktrace (when DRACO_DIAGNOSTICS & 2).
	- Added an Appveyor (win32) build to the CI.
	- Complete preliminary Draco_Mesh builder, using RTT mesh parser.
	- Added a X3D Draco_Mesh parser.
	- Begin using Docker images for Travis CI
	- Begin supporting 64-bit builds under Visual Studio
	- Begin requiring cmake-3.11+
	- Provide a basic Prefetch capability.
	- Fix a compatibility issue related to Python3
	- Update developer environment for Darwin.
	- Add unstructured cell type option to Ensight translator.

	Corrected defects:

	- Github #379 Fix an MPI detection issue.
	- Github #391 Fix bug in operator precedence in Expression parser.
	- Github #396 Fix OpenMPI detection when using clang++/clang/gfortran combination.
	- Github #401 Fix a bad entry in valgrind_suppress.txt.
	- Github #403 Fix a bug in sync_repository.sh that prevented PRs from running.
	- Github #407 Fix bug in Timer::printline_mean
	- Github #409 Fix bug in compilerEnv.cmake wrt MSVC builds.
	- Github #410 Fix broken Jayenne-win32 builds (CMakeAddFortranSubdirectory failures)
	- Github #431 Alternate solution for Processor_Group definition/instantiation conflict.
	- Github #429 Ensure that Processor_Group.t.hh is installed in the include/c4 directory.
	- Github #433 Minor patch to fix a bug related to Win32 builds.
	- Github #435 Fix a bug in .bashrc; update sample dotfiles.
	- Github #458 Fix ambiguous type conversion issue when compiling on a MAC
	- Github #480 Fix some issues in ofpstream that were causing McGrid to fail.
	- Github #482 Fix broken draco_info tool.
	- Github #483 Fix GSL discovery.
	- Github #485 Avoid compiling for AVX2 instructions on older hardware.
	- Github #502 Fix warnings/errors reported in Visual Studio regressions.
	- Github #503 Remove extraneous paren in .bash_slurm
	- Bug #1048 Capsaicin builds broken for clang
	- Bug #1115 Travis runner for Github is broken
	- Bug #1116 trinitite: cmake/3.10.2 breaks MPI detection
	- Bug #1117 Snow: Draco dev environment broken after 'newgrp'
	- Bug #1119 ccs-net: update modulefiles to LMOD
	- Bug #1120 Add clang/4.0.1 build to standard PR checks on ccscs2
	- Bug #1121 Visual Studio: header files not listed under project sources
	- Bug #1128 Review constants
	- Bug #1130 Draco configure should fail if python is not found
	- Bug #1131 checkpr.sh did not start after sync_repository found an update for capsaicin
	- Bug #1154 Github Travis builds currently broken
	- Bug #1167 Cray: Build system fails if CXX doesn't point to cray compile wrapper
	- Bug #1172 modulefile for eospac/6.3.X missing from fire/ice
	- Bug #1177 Move some regression testing from ccscs2 to ccscs3
	- Bug #1178 CDash mismatch between email and online report
	- Bug #1181 Create updated vendors.tar.gz to be used with gitlab runners
	- Bug #1198 Win32 builds crash after PR #425
	- Bug #1203 Trinitite: Run test to verify OOM killer messages are printed.
	- Bug #1226 Regressions/Builds finding wrong 'mpiexec' on Cray machines
	- Bug #1228 Cap Gitlab - use docker image for tests.
	- Bug #1237 Create PR for CMake with Cray fixes for C++14
	- Bug #1270 1-sided RMA messaging is broken on Trinitite/Trinity

	New Features:

	- Github #380 Add more valgrind suppression rules.
	- Github #381 Cleanup to support newer win32 test environment.
	- Github #382 Clean up some files that haven't been touched in a while.
	- Github #383 Minor tweaks to the draco developer environment.
	- Github #384 Ensure draco's bash functions are available in a subshell.
	- Github #385 Promote python requirement to 'always required'
	- Github #386 Allow multiple values for extra_params in the regression system. (allows knl + vtest)
	- Github #388 Ensure that the lapack CMake target points to a blas installation.
	- Github #392 Improve FindEOSPAC.cmake
	- Github #393 Eliminate a Draco bashrc error from printing.
	- Github #394 Add support for f90cache.
	- Github #395 Provide small changes to better support newer versions of CMake.
	- Github #399 CCS-NET: Update developer environment to use newer tools.
	- Github #375 Use features of cmake-3.9 to set project version, related to #231
	- Github #378 Add a runtime_check function to rtt_c4
	- Github #400 Load modules 1-by-1 in bash_functions2 version of dracoenv.
	- Github #402 Patch logic used to identify the Fortran compiler flavor.
	- Github #404 Cleanup some code to eliminate build/run warnings.
	- Github #405 Provide basic support for the flang (LLVM) compiler.
	- Github #406 More GitHub badges
	- Github #408 Improve robustness of compiler and MPI detection
	- Github #411 Fixes for gitlab style runner
	- Github #412 Add a parallel output stream.
	- Github #413 Unstructured mesh prototype needs-work
	- Github #414 Added "ythi", which is like xthi except uses std::thread instead of O…
	- Github #415 Provide a unit test for ythi.
	- Github #416 Update environments and regression scripts.
	- Github #417 Force DbC failures to print a stacktrace (DRACO_DIAGNOSTICS & 2).
	- Github #418 Minor tweaks to enable new package 'mesh' to build under VS2017.
	- Github #419 Dbgopt
	- Github #420 Disable Travis config/build/test builds.
	- Github #421 Minor tweaks to the configure process.
	- Github #422 Add an Appveyor (win32) build to the CI.
	- Github #423 Safe a call to sqrt by wrapping its argument in fabs.
	- Github #424 1st Draco_Mesh ghost cell implementation
	- Github #425 Try to Re-enable a baseline (no MPI) Travis build.
	- Github #426 Tweak indentation when printing valid keywords.
	- Github #427 Cleanup C4 to allow DRACO_C4=SCALAR on Win32.
	- Github #432 Enable more tests in the CI systems.
	- Github #434 Complete preliminary Draco_Mesh builder, using RTT mesh parser.
	- Github #436 Update clang-format rules for version 6.0
	- Github #437 Add preliminary X3D Draco_Mesh parser.
	- Github #438 Add ability to read X3D boundary files.
	- Github #439 Fix url in pull request template.
	- Github #440 Attempt to use Docker for Travis CI checks.
	- Github #441 Tweaks to eliminate build warnings for 64-bit builds under VS2017.
	- Github #442 Move default to Intel 18
	- Github #443 More extensions to support 64-bit builds under VS 2017.
	- Github #444 Include lapack_wrap for Linux+LLVM and Windows builds (if lapack is found)
	- Github #445 More build system tweaks implemented while porting to VS2017 Win64.
	- Github #446 More tweaks for Win32...
	- Github #447 WIP: Begin requiring cmake-3.11+.
	- Github #449 Add binary capability to Kent's parallel output file writer
	- Github #451 Update mesh and X3D parser in src/mesh/ directory.
	- Github #452 Add support for 5 static analysis tools.
	- Github #453 Improve the use of implicit type conversion.
	- Github #455 Update ds++/config.h to provide draco_isKNL.
	- Github #456 Small tweaks and fixes.
	- Github #457 Prefetch
	- Github #461 Clean up build warnings reported by VS and fix some regression scripts
	- Github #462 A few misc. updates.
	- Github #463 Provide helper scripts for checking code style.
	- Github #464 Fix a compatibility issue related to Python3
	- Github #466 Improve ds++ code coverage by adding tests or removing features
	- Github #467 Improve c4 code coverage by adding tests or removing features
	- Github #468 Improve mesh_element and norms code coverage
	- Github #469 Improve units, special_functions and viz code coverage
	- Github #473 Improve quadrature coverage by adding tests or removing features.
	- Github #474 Attempt to fix missing codecov reports.
	- Github #476 Add support for Grizzly.
	- Github #477 Restore the prune function to Ordinate_Space.
	- Github #478 Extend rtt_viz::Ensight_Translator's ensight_dump function.
	- Github #486 Improve coverage in cdi_ipcress (and other cleanup)
	- Github #488 WIP: Clean up CAFS portion of build system to support x86 and x64.
	- Github #489 Improve code coverage of cdi_ipcress by extending tests.
	- Github #490 Ensure csk and ndi are loaded by default on trinity/trinitite.
	- Github #491 Generalize X3D boundary condition specification.
	- Github #492 Update developer environment for Darwin.
	- Github #493 Fix build failure on Mac's associated with parse_number_impl
	- Github #494 Move to cmake/3.12.1 on HPC machines.
	- Github #495 Improve unit test coverage for quadrature/Level_Symmetric.cc
	- Github #496 Enable warning level 4 for Visual Studio
	- Github #497 Add a file include capability to Token_Streams.
	- Github #498 Add unstructured cell type option to Ensight translator.
	- Github #499 Formalize unstructured cell specification for Ensight.
	- Github #505 Add more pragmas to suppress warnings found in R123 headers.
	- Github #506 Minor patch to CMakeAddFortranSubdirectory to support Jayenne.
	- Github #507 Minor code cleanup to eliminate build warnings from Visual Studio
	- Github #509 Teach the PR regression system to also build autodoc.
	- Feature #546 C++11 features to consider
	- Feature #547 Begin using std::chrono
	- Feature #648 CMake: Replace DLL_PUBLIC macros with WINDOWS_EXPORT_ALL_SYMBOLS
	- Feature #1027 Test libquo@1.3 on ccs-net
	- Feature #1245 DBS needs a way to identify KNL
	- Support #1247 Evaulate vim bindings for clang-format
	- Task #640 Demonstrate ParMetis build on Win32
	- Task #1142 Update regression system to allow multiple values for option '-e'
	- Task #1147 ccs-net: Provide newer tools for user_contrib
	- Task #1153 tEospac fails when linked to EOSPAC 6.3.1
	- Task #1158 Update scripts that mirror github/gitlab and push them
	- Task #1159 Move dracodoc repository to gitlab
	- Task #1160 User_contrib: build out tools for intel/18.0.2
	- Task #1161 user_contrib: Provide modulefile for eospac/6.3.1
	- Task #1195 Release Draco-6_24_0 with intel/18.0.2
	- Task #1209 Test performance of intel/18 for 'fp-model'
	- Task #1210 Move default dev environment/regressions to intel/18.0.2 on CTS and ATS
	- Task #1218 Move windows regressions to new machine
	- Task #1219 Update CMakeAddFortranSubdirectory
	- Task #1234 Move default dev environment to cmake/3.12.1

	Known Defects:

	- Bug #1292 Track CMake + nvcc issue related to pthreads
	- Bug #1291 Review doxygen build errors
	- Bug #1289 Move docker containers to gitlab?
	- Bug #1282 Add support for newer superlu-dist
	- Bug #1269 Demo CDash running in a docker container
	- Bug #1268 memory: needs more tests
	- Bug #1266 cdi_analytic: Code coverage improvements
	- Bug #1265 Quadrature: Needs more unit tests
	- Bug #1250 Add git-commit-precomit-hook for f90
	- Bug #1246 Cannot delete branches from forked EAP repo
	- Bug #1242 Support machines where mpiexec is at /usr/bin
	- Bug #1227 VS2017: tstSuperlu-dist not running?
	- Bug #1207 Appveyor: enable more tests
	- Bug #1152 Visualization: consider VTK or Silo
	- Bug #1151 Occasional mpirun errors on snow
	- Bug #1149 setupMPI.cmake: use 'cmake_host_system_information'
	- Bug #1148 perfbench time variation on snow
	- Bug #1133 Move code from c4 that doesn't wrap MPI
	- Bug #1090 Regressions on trinitite occasionally fail with "address in use" errors
	- Bug #1083 Darwin: demo power9+volta nodes
	- Bug #1062 Prepare Darwin as sierra-proxy machine
	- Bug #1049 Visit install not working on ccs-net machines
	- Bug #1025 Add common build options to "Enabled features" list in build summary
	- Bug #59 cdi_eospac design flaw

	* Statistics

Contributers (updated Release.cc and README.md with this ordering).

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, Ryan T. Wollaeger, James S. Warsa,
      Alex R. Long, Kendra P. Keady, Jae H. Chang, Matt A. Cleveland, Andrew T. Till,
      Tim Kelley and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Gabriel M. Rockefeller,
     Allan B. Wollaber, Rob B. Lowrie, Lori A. Pritchett-Sheats,
     Paul W. Talbot, and Katherine J. Wang.

Lines of Code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             438          13056          22744          53868
C/C++ Header                    348           7263          21164          17309
Lisp                             18           2033           2927          13081
CMake                           124           2182           5727           8982
Bourne Shell                     33            706           1527           3164
Python                           16            447            768           1474
Bourne Again Shell               13            267            566           1460
CSS                               1            113             37            395
Fortran 90                        8            113            216            380
C                                 4             59            129            288
C Shell                           2             32             36            163
DOS Batch                         4             59             92            109
YAML                              3             22            140             65
HTML                              2              6             47             65
CUDA                              3             19             59             40
make                              2             22             13             39
--------------------------------------------------------------------------------
SUM:                           1019          26399          56192         100882
--------------------------------------------------------------------------------

Code Coverage
-------------

Directory               Function Coverage           C/D Coverage
---------------------  ---------------------  ---------------------
units/                  82 /    82 = 100%      58 /    58 = 100%
quadrature/fctest/       1 /     1 = 100%       0 /     0
lapack_wrap/            12 /    12 = 100%       0 /     0
rng/                    57 /    57 = 100%      23 /    24 =  95%
fit/                     1 /     1 = 100%      15 /    16 =  93%
mesh/                   53 /    53 = 100%      75 /    80 =  93%
ode/                     5 /     5 = 100%      29 /    32 =  90%
ds++/                  333 /   333 = 100%     490 /   548 =  89%
special_functions/      31 /    31 = 100%     193 /   216 =  89%
min/                     9 /     9 = 100%     137 /   154 =  88%
cdi_ipcress/           106 /   106 = 100%     210 /   238 =  88%
RTT_Format_Reader/     323 /   323 = 100%     377 /   434 =  86%
linear/                 16 /    16 = 100%     335 /   392 =  85%
cdi/                    46 /    46 = 100%      73 /    86 =  84%
roots/                   8 /     8 = 100%     258 /   310 =  83%
c4/bin/                  5 /     5 = 100%      23 /    28 =  82%
mesh_element/           23 /    23 = 100%     154 /   197 =  78%
viz/                    32 /    32 = 100%     138 /   178 =  77%
meshReaders/            15 /    15 = 100%     122 /   162 =  75%
norms/                  27 /    27 = 100%      23 /    36 =  63%
cdi_eospac/             52 /    52 = 100%      65 /   127 =  51%
compton/                10 /    10 = 100%       2 /     4 =  50%
FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
c4/                    181 /   182 =  99%     445 /   511 =  87%
quadrature/            224 /   226 =  99%     603 /   732 =  82%
timestep/               62 /    63 =  98%     104 /   178 =  58%
parser/                318 /   327 =  97%    1261 /  1609 =  78%
cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
diagnostics/            16 /    21 =  76%      36 /    51 =  70%
memory/                  4 /     6 =  66%       0 /     2 =   0%
diagnostics/qt/          0 /     5 =   0%       0 /     0
-------------------  ---------------------  ---------------------
Total                 2193 /  2232 =  98%    5405 /  6613 =  81%

2018-03-19  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-6_24_0":https://rtt.lanl.gov/redmine/versions/60.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-7_17_0":https://rtt.lanl.gov/redmine/versions/59
	  - "Capsaicin-4_13_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/WF              Intel 17.0.4    OpenMPI-2.1.2
	                     (GCC 6.4.0)     (OpenMPI-2.1.2)
	  SN/BA/FI/IC        Intel 17.0.4    OpenMPI-2.1.2
	                     (GCC 6.4.0)     (OpenMPI-2.1.2)
	  TT/TR              Intel 17.0.4    Cray_MPICH2-7.7.0

	* Summary of changes:

	- 921 files changed, added or removed in 72 commits.
	- Copyright dates updated for 2018.
	- Improve ipcress plot, "PR343":https://github.com/lanl/Draco/pull/343

	* Developer Environment:
	- No longer support Moonlight or Luna (machines
	  retired). Regressions moved to Snow.
	- Begin supporting Badger and Darwin (x86_64, knl, power8+,
	  power9).
	- Add slurm function to print total cpu-hr
	  usage. "PR374":https://github.com/lanl/Draco/pull/374
	- Move special Xcode/VS code into
	  add_component_library. "PR369":https://github.com/lanl/Draco/pull/369
	- Start requiring C++14 and C-11 language
	  standards. "PR344":https://github.com/lanl/Draco/pull/344,
	  "PR345":https://github.com/lanl/Draco/pull/345

	* Test Envirotnment:
	- Add a check_all function to the UnitTest class
	  tree. "PR373":https://github.com/lanl/Draco/pull/373
	- Improve error diagnostics for
	  @Parse_Table@. "PR370":https://github.com/lanl/Draco/pull/370
	- Extend Debug_Options for
	  Parser. "PR366":https://github.com/lanl/Draco/pull/366
	- Minor cleanup for the fpe-trap
	  feature. "PR361":https://github.com/lanl/Draco/pull/361
	- Tweaks to fix broken builds for
	  C4_SCALAR. "PR359":https://github.com/lanl/Draco/pull/359
	- Split RUN_VERIFICATION_TESTS away from Release regressions.
	  "PR346":https://github.com/lanl/Draco/pull/346

	* Performance:
	- Tweak some code related to @shared_ptr@ for
	  efficiency. "PR371"https://github.com/lanl/Draco/pull/371
	- Build System:
	- Update environments to support Darwin KNL and Power8
	  nodes. "PR368":https://github.com/lanl/Draco/pull/368
	- Fix MPI logic for CAFS (Visual Studio +
	  gfortran). "PR365":https://github.com/lanl/Draco/pull/365
	- Rework include directive mechanism for all of
	  Draco. "PR362":https://github.com/lanl/Draco/pull/362
	- Make cpu warm-up function static void to avoid gcc6.4
	  warning. "PR354":https://github.com/lanl/Draco/pull/354
	- Minor tweak to support new Capsaicin perfbench
	  regression. "PR348":https://github.com/lanl/Draco/pull/348

	Corrected defects:

	- Bug #1010 Review, reset file permissions
	- Bug #1038 Valgrind CDash reports fail to post
	- Bug #1045 cassio run_job_old_version failing on moonlight
	- Bug #1052 Make verification regressions separate from Release
	- Bug #1053 ccscs1: checkpr.sh not working
	- Bug #1056 Move trinitite compiles to back-end
	- Bug #1061 Provide development environment on Badger
	- Bug #1064 Update copyright header/banners for 2018
	- Bug #1067 After machine upgrade, tests fail on ccscs7
	- Bug #1069 vtest regressions run all tests instead of only 'vtest' marked tests
	- Bug #1076 Darwin: Create /usr/projects/user_contrib
	- Bug #1077 Darwin: Propose directories for modules and TPL installs
	- Bug #1079 Are PR checks running automatically?
	- Bug #1091 Darwin: Demo code build, test for knl nodes
	- Bug #1095 After pr362, cannot configure on trinitite
	- Bug #1096 After pr362, scalar builds are broken
	- Bug #1104 Win32 builds broken by latest Symantec software

	New Features:

	- Feature #393 Explore option for GUI driver code
	- Feature #1046 Consider adopting C++14, C-11 standards as minimum required
	- Feature #1093 CMake: Move code block that adds sources to headers for Xcode
	- Task #1054 Update 'newtools' regression to use intel/18.0.1
	- Task #1065 Remove references to moonlight and luna

	Known Defects:

	- Bug #1048 Capsaicin builds broken for clang
	- Bug #1049 Visit install not working on ccs-net machines
	- Bug #1062 Prepare Darwin as sierra-proxy machine
	- Bug #1083 Darwin: demo power9+volta nodes
	- Bug #1090 Regressions on trinitite occasionally fail with "address in use" errors

	* Statistics:

Contributers (updated Release.cc and README.md with this ordering).

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, James S. Warsa,
     Alex R. Long, Kendra P. Keady, Jae H. Chang, Matt A. Cleveland,
     Ryan T. Wollaeger, Andrew T. Till, Daniel Holladay,  Massimiliano Rosa,
     and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Gabriel M. Rockefeller,
     Allan B. Wollaber, Rob B. Lowrie, Lori A. Pritchett-Sheats,
     Paul W. Talbot, and Katherine J. Wang.

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             421          12622          21845          52061
C/C++ Header                    335           6930          20764          16598
Lisp                             17           2027           2898          13062
CMake                           121           2086           5473           8470
Bourne Shell                     32            667           1489           3076
Python                           14            402            681           1374
Bourne Again Shell               13            245            537           1347
CSS                               1            113             37            395
Fortran 90                        8            113            218            380
C                                 4             51            116            261
C Shell                           2             32             36            163
DOS Batch                         4             55             83             95
YAML                              2             18             94             76
HTML                              2              6             47             65
CUDA                              3             19             59             40
make                              2             22             13             39
--------------------------------------------------------------------------------
SUM:                            981          25408          54390          97502
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
FortranChecks/                        1 /     1 = 100%       7 /    14 =  50%
RTT_Format_Reader/                  323 /   323 = 100%     373 /   434 =  85%
c4/                                 167 /   176 =  94%     404 /   467 =  86%
c4/bin/                               2 /     2 = 100%       8 /    10 =  80%
cdi/                                 46 /    46 = 100%      73 /    86 =  84%
cdi_analytic/                       146 /   165 =  88%     172 /   224 =  76%
cdi_eospac/                          52 /    52 = 100%      65 /   127 =  51%
cdi_ipcress/                        106 /   106 = 100%     188 /   247 =  76%
compton/                             10 /    10 = 100%       2 /     4 =  50%
diagnostics/                         15 /    20 =  75%      28 /    42 =  66%
ds++/                               328 /   332 =  98%     481 /   552 =  87%
fit/                                  1 /     1 = 100%      15 /    16 =  93%
lapack_wrap/                         12 /    12 = 100%       0 /     0
linear/                              16 /    16 = 100%     335 /   392 =  85%
memory/                               4 /     6 =  66%       0 /     2 =   0%
meshReaders/                         15 /    15 = 100%     127 /   172 =  73%
mesh_element/                        23 /    24 =  95%     154 /   201 =  76%
min/                                  9 /     9 = 100%     137 /   154 =  88%
norms/                               27 /    28 =  96%      23 /    36 =  63%
ode/                                  5 /     5 = 100%      29 /    32 =  90%
parser/                             302 /   308 =  98%    1222 /  1561 =  78%
quadrature/                         222 /   228 =  97%     577 /   738 =  78%
rng/                                 57 /    57 = 100%      23 /    24 =  95%
roots/                                8 /     8 = 100%     258 /   310 =  83%
special_functions/                   30 /    33 =  90%     192 /   218 =  88%
timestep/                            62 /    63 =  98%     104 /   178 =  58%
units/                               81 /    82 =  98%      58 /    58 = 100%
viz/                                 32 /    32 = 100%     131 /   174 =  75%
--------------------------------  ---------------------  ---------------------
Total                               2100 /  2158 =  97%    5178 /  6463 =  80%

* C/D Coverage is condition/decision coverage
  http://www.bullseye.com/coverage.html#basic_conditionDecision

2017-10-16  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-6_23_0":https://rtt.lanl.gov/redmine/versions/55.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-7_16_0":https://rtt.lanl.gov/redmine/versions/56
	  - "Capsaicin-4_12_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/LU           Intel 17.0.1    OpenMPI-1.10.5
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     (GCC 6.4.0)     (OpenMPI-2.1.2)
	  SN/FI/IC           Intel 17.0.1    OpenMPI-1.10.5
	                     Intel 17.0.4    OpenMPI-2.1.2
	                     (GCC 6.4.0)     (OpenMPI-2.1.2)
	  TT/TR              Intel 17.0.1    Cray_MPICH2-7.5.2
	                     Intel 17.0.4    Cray_MPICH2-7.6.2

	* Summary of changes:
	- 314 files changed, added or removed in 111 commits.
	- Eliminate direct comparison of floating point types, #251, #252,
	  #253, #254.
	- Begin requiring CMake 3.9.0 or later, #272.
	- Added more MPI functions to c4 including, #280
	  . Added non-blocking sends and receives with custom MPI datatypes
	  . Added no-blocking allreduce call with the standard of send_is test
	    now includes example of a custom MPI datatype and a send/receive with
	    that type.
	- Provide prefix sum for arrays, #320.
	- Provide a thread_wrapper, #327.

	* Developer Environment:
	- Improved bash function `selectscratchdir`, #250.
	- Provide some bash functions that provide information about slurm,
	  #324.  Try `slurmhelp`.
	- Begin using newer tools, vendors on HPC machines, #324.
	  . Intel/17.0.4, openmpi/2.1.2.
	  . superlu-dist/5.1.3, trilinos/12.10.1, etc.

	* Build system
	- Fix inconsistent use of case for the special string RELWITHDEBINFO,
	  #250.
	- On Cray systems, test registration fixed to use correct srun options,
	  #257.
	- Begin requiring CMake 3.9.0 or later, #272.
	- Allow tstSuperludist.cc to link to superlu-dist-5+, #278.
	- Upgrade how the Compton TPL is discovered, presented and used. #292.
	- Fix compilation against MKL when using GNU compilers, #330
	- Cray regressions now run from /ccs/codes/ccsrad to eliminate 'bus
	  error' issues seen when running from lustre.

	* c4:
	- Global_Timer was updated to be more useful for parallel runs. The new
	  implementation provides mean time plus deviations per rank, #256.
	- Provide a C++ version of the xthi tool.  This tool shows thread
	  assignments to hardware, #269.
	- Added more MPI functions to c4 including, #280
	  . Added non-blocking sends and receives with custom MPI datatypes
	  . Added no-blocking allreduce call with the standard of send_is test
	    now includes example of a custom MPI datatype and a send/receive with
	    that type.
	- Restore ability to compile Draco when DRACO_C4=SCALAR, #315.
	- Provide prefix sum for arrays, #320.

	* compton:
	- Updated Compton test to use input files found in the source
	  directory, #246.
	- Upgrade how the Compton TPL is discovered, presented and used. #292
	- Compton interface updates for v0.3,  #296
	- Begin testing CSK via draco on LANL HPC, #313.

	* ds++
	- Begin using `std::enable_if` to simplify the definition of
	  `soft_equiv`.  It is no longer defined for integral types, #255.
	- Provide new CPP macros for unit tests: `FAIL_IF(c)` and
	  `FAIL_IF_NOT(c)`, #271.
	- Provide common string functions in a single file, #285:
	  New functions:
	  . trim         - remove whitespace (or any specified characters) from
 	                   beginning and end of a string.
	  . prune        - remove specified characters from a string.
	  . parse_number - Convert a string into a floating-point or integral
	                   type (int, long, unsigned, float, double, etc.)
	  . string_to_numvec - Convert a string into a vector where T is a
	                   numeric type. String entries are separated by
	                   specified delimiter. Optional beginning and ending
	                   range symbols may also be provided. For example,
	                   string = "{ 1.3, 2.3 }" --> vector<float> = {1,3,
	                   2.3};
	  Relocated functions:

	  . to_string    - convert a number into a string preserving
	                   precision. Previously found at ds++/to_string.hh
	  . tokenize     - convert a string into a vector based on the
	                   specified delimiter. Previously found at
	                   UnitTest.hh.
	  . get_word_count - convert a stringstream or fstream into a
	                   map<string,unsigned> where the number of occurrences
	                   of each word is reported. Previously found at
	                   UnitTest.hh. Often used to check text output from
	                   unit tests.
	- Provide a thread_wrapper, #327.

	* norms:
	- Provide code to compute the norm of the difference of two vectors,
	  #262.

	* parser:
	- Improve efficiency of Parallel_File_Token_Stream's open function,
	  #290
	- Tweak the parser package, #291, #299
	  . Remove unneeded global_barrier from
	    Parallel_File_Token_Stream::fill_character_buffer_. Processors
	    should be synchronized by the preceding broadcast, with intervening
	    code such that there should be no danger of processors getting out
	    of synch.
	  . Replace use of NULL with nullptr in Parse_Table.cc. This is the
	    more modern syntax.
	  . Add a move-aware version of the basic constructor for
	    String_Token_Stream, since calling this constructor with a c-string
	    (implicitly converted to std::string rvalue) is a common practice.
	  . Strengthen DBC checks in Text_Token_Stream.cc
	  . Clean up Parse_Table by spelling out null pointer comparisons and
	    using auto judiciously.
	  . Remove difficult to test branches through use of check_syntax and
	    check_semantics in place of if-tests.
	- Tighten up the parser code, #326.

	* plot2d:
	- Fixed plot2d tests that were failing on snow, #247.

	* quadrature:
	- Provided azimuthal order accessor for Chebyshev-Legendre quadrature,
	  #284.
	- Only add starting-directions when required, #286.

	* units:
	- Added the classical electron radius to the PhysicalConstants file,
	  #268.

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	Corrected defects:

	* Bug #906 All gitlab pipelines are failing
	* Bug #954 plot2D test are failing on snow
	* Bug #956 snow: Not finding MKL as suitable provider of LAPACK
	* Bug #959 Force rebuild of serrano when running 'make' from test
	           directory
	* Bug #960 Add ccscs2 Release CI build for every PR.
	* Bug #961 Trinitite CIs are not running
	* Bug #964 metrics_report.sh should not report package
	           sub-sub-directories
	* Bug #966 Totalview and DDT encounter 'pipe error'
	* Bug #972 ApplicationUnitTest is missing options for srun
	* Bug #1005 Make TPL compton a full vendor
	* Bug #1011 clang-format no longer works
	* Bug #1012 Build out new vendors
	* Bug #1018 Nightly regressions not running correctly on ccscs7
	* Bug #1024 Fix gcc-6.4.0 + mkl builds on snow

	New Features:
	* None

	Known Defects:
	* Bug #1010 Review, reset file permissions
	* Bug #1025 Add common build options to "Enabled features" list in
	  build summary

	* Statistics:

Contributers (updated Release.cc and README.md with this ordering).

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, James S. Warsa,
     Alex R. Long, Rob B. Lowrie, Kendra P. Keady, Jae H. Chang,
     Matt A. Cleveland,  Ryan T. Wollaeger, Andrew T. Till, Daniel Holladay,
     Massimiliano Rosa and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Gabriel M. Rockefeller,
     Allan B. Wollaber, Lori A. Pritchett-Sheats,  Paul W. Talbot,
     and Katherine J. Wang.

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             423          12364          22105          51054
C/C++ Header                    331           6695          20707          16176
Lisp                             17           2027           2897          13059
CMake                           120           2153           5705           9005
Bourne Shell                     33            663           1507           2945
Bourne Again Shell               14            282            553           1543
Python                           13            387            654           1315
CSS                               1            113             37            395
Fortran 90                        8            113            218            380
C                                 4             48            114            244
C Shell                           2             32             36            167
DOS Batch                         4             53             71             93
YAML                              2             18             98             77
HTML                              2              6             47             65
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            979          24993          54824          96597
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
FortranChecks/                        1 /     1 = 100%       7 /    14 =  50%
RTT_Format_Reader/                  323 /   323 = 100%     373 /   434 =  85%
c4/                                 157 /   166 =  94%     380 /   429 =  88%
cdi/                                 46 /    46 = 100%      63 /    76 =  82%
cdi_analytic/                       146 /   165 =  88%     172 /   224 =  76%
cdi_eospac/                          52 /    52 = 100%      65 /   127 =  51%
cdi_ipcress/                        106 /   106 = 100%     188 /   247 =  76%
compton/                             10 /    10 = 100%       0 /     0
diagnostics/                         15 /    20 =  75%      28 /    42 =  66%
ds++/                               317 /   321 =  98%     457 /   522 =  87%
fit/                                  1 /     1 = 100%      15 /    16 =  93%
lapack_wrap/                         12 /    12 = 100%       0 /     0
linear/                              16 /    16 = 100%     334 /   392 =  85%
memory/                               4 /     6 =  66%       0 /     2 =   0%
meshReaders/                         15 /    15 = 100%     127 /   172 =  73%
mesh_element/                        23 /    24 =  95%     154 /   201 =  76%
min/                                  9 /     9 = 100%     137 /   154 =  88%
norms/                               25 /    26 =  96%      21 /    34 =  61%
ode/                                  5 /     5 = 100%      29 /    32 =  90%
parser/                             293 /   298 =  98%    1184 /  1512 =  78%
quadrature/                         221 /   227 =  97%     580 /   738 =  78%
rng/                                 57 /    57 = 100%      23 /    24 =  95%
roots/                                8 /     8 = 100%     259 /   312 =  83%
special_functions/                   30 /    32 =  93%     192 /   216 =  88%
timestep/                            62 /    63 =  98%     104 /   178 =  58%
units/                               80 /    80 = 100%      58 /    58 = 100%
viz/                                 32 /    32 = 100%     131 /   174 =  75%
--------------------------------  ---------------------  ---------------------
Total                               2066 /  2121 =  97%    5081 /  6330 =  80%

2017-07-03  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-6_22_0":https://rtt.lanl.gov/redmine/versions/52.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-7_14_0":https://rtt.lanl.gov/redmine/versions/54
	  - "Capsaicin-4_11_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/LU           Intel 17.0.1    OpenMPI-1.10.5
	  SN/FI/IC           Intel 17.0.1    OpenMPI-1.10.5
	  TT/TR              Intel 17.0.1    Cray_MPICH2-7.5.2

	* Summary of changes:
	- 141 files changed, added or removed in 88 commits.
	- Begin using Lmod heirarchical modulefiles on ccs-net machines.
	- Switch to slurm on all LANL HPC machines (Redmine #903, PR #203).
	- Added MPI operations for Bool variables (PR #240)
	- Enable builds with Python 3 (PR #239)
	- Add prefix sums for unsigned longs (PR #205 #208)
	- Change Invert_Comm_Map to eliminate n_proc length arrays (#914)

	* Developer Environment:

	* Build system:

	- Make setup of lmod modulefiles run faster for setup scripts.
	- Automate selection of scratch directory.
	- Improve robustness of CI scripting.
	- New CI environment targets Snow + Intel-17.0.2 + OpenMPI-2.0.2.
	- Preliminary enviornment files for the machine 'toolbox' were
	  added.
	- Deprecate support for Visual Studio 2013. Begin support for Visual
	  Studio 2017.
	- vim formatting to set a warning line at 80 columns
	- Retire some rarely used aliases (.bashrc):
          + dmesg, ldmesg
          + free, hosts
          + print, cd.., sdl, hpss
          + mapache, tscp, trsync
	- Add some module related aliases (I have trouble typing 'moduel').
	  + ma='module avail'
	  + mls='module list'
          + mld='module load'
	- Add some slurm related aliases (from hpcfaq.lanl.gov/faqs/view/58)
          + showq-like functions: sqrun, sqpend, pend, sqother, sq, sqall, showme
          + checkjob-like functions: chk
          + drmgroups, etc: suser, sshare_acct, drmgroups, sreason, showuser
	- For non-interactive shells, ensure that DRACO_ENV_DIR is set.

	* Build system:

	- Improve how python unit tester captures stderr.
	- Allow command line options for setting compiler flags (#896)
	  1. `C_FLAGS="-Wfoo" CXX_FLAGS="-Wbar" cmake <path/to/draco>`, or
	  2. `export C_FLAGS="-Wfoo"; cmake ...; make`, or
	  3. `cmake -DC_FLAGS="-Wfoo" <path/to/draco>`
	- `RelWithDebInfo` builds now defualt to `DRACO_DBC_LEVEL=15`.
	- Require that C++11 features be available.
	- Make it easier to run valgrind checks. `ctest -D ExperimentalMemCheck
	  [-j 12 -R c4]` (#216)
	- Turn on GCC Warning `Wundef`
	- Update scripts to allow them to work with Python 3.

	* c4:

	- Added prefix sum function.
          + The MPI scan function calculates a prefix sum (often used in
	    determining offsets in parallel problems) without forming a n_proc
	    length array on every node.
	  + Rename MPI_THREAD_SINGLE to DRACO_MPI_THREAD_SINGLE to clarify that
	    we are modifying this value in the case of a no MPI build.
	+ Remove num_procs array for Invert_Comm_Map; add any_source capability.
	+ Add `bool` to the list of supported MPI data types.

	* ds++

	- Add a NOEXCEPT macro that flags a function as throwing no exceptions
	  ONLY if DBC is fully turned off. This allows us to test preconditions
	  and postconditions while allowing production code to gain the
	  performance advantages of having suitable functions flagged as never
	  throwing exceptions.
	- Add Tim's move semantics example. This example shows how to use move
	  semantics in object construction to avoid deep copies.

	* compton

	- Add routines to interpolate the group-avg frequency ratio
	- Rename the original interpolation function to interpolate_csk
	- Pass a default parameter to the constructor to use the full number of
	  angular evals in the library file

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	Corrected defects:
	* Bug #428 Qt5.3 fails to render correctly for X11 via PuTTy
	* Bug #877 Some tests fail for RelWithDebInfo builds
	* Bug #885 CI system on trinitite can break
	* Bug #893 Stand up CI for gcc/6.1 intel/17.0.2, openmpi/2.0.2
	* Bug #907 Moonlight and Snow regressions are not running
	* Bug #908 cyclic dependency in capsaicin
	* Bug #920 Coverage builds appear to be broken
	* Bug #957 Can't view git repo from Redmine

	New Features:
	* Feature #548 C++11: Replace copy with move symantics
	* Feature #888 New tools/regression
	* Feature #896 Allow users set set extra compile flags, link libraries from command line
	* Feature #909 Update sync_repository.sh to use checkpr.sh
	* Feature #913 On ccs-net machines switch to lmod
	* Feature #914 Change Invert_Comm_Map to eliminate n_proc length arrays
	* Feature #936 Add MPI_ANY_SOURCE support to C4
	* Task #903 Begin migrating from MOAB to SLURM
	* Task #955 Provide libquo built against openmpi@1.10.5 and gcc@6.3.0 on ccs-net machines

	Known Defects:
	* Bug #954 plot2D test are failing on snow
	* Bug #906 All gitlab pipelines are failing
	* Bug #956 snow: Not finding MKL as suitable provider of LAPACK

	* Statistics:

Contributers (updated Release.cc and README.md with this ordering).
------------

CCS-2 Draco Team: Kelly G. Thompson, Kent G. Budge, James S. Warsa,
     Alex R. Long, Rob B. Lowrie, Kendra P. Keady, Jae H. Chang,
     Matt A. Cleveland, Andrew T. Till, Daniel Holladay, Ryan T. Wollaeger,
     Massimiliano Rosa and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Gabriel M. Rockefeller,
     Allan B. Wollaber, Lori A. Pritchett-Sheats,  Paul W. Talbot,
     and Katherine J. Wang.

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             423          12363          22080          51057
C/C++ Header                    331           6695          20707          16176
Lisp                             17           2027           2897          13059
CMake                           120           2144           5635           8960
Bourne Shell                     35            712           1597           3346
Bourne Again Shell               15            288            564           1562
Python                           13            387            654           1315
CSS                               1            113             37            395
Fortran 90                        8            113            218            380
C                                 4             48            114            244
C Shell                           2             32             36            167
DOS Batch                         4             53             71             93
YAML                              2             18             98             77
HTML                              2              6             47             65
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            982          25038          54830          96975
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
units/                               80 /    80 = 100%      58 /    58 = 100%
quadrature/                           1 /     1 = 100%       0 /     0
lapack_wrap/                         12 /    12 = 100%       0 /     0
compton/                             10 /    10 = 100%       0 /     0
rng/                                 57 /    57 = 100%      23 /    24 =  95%
fit/                                  1 /     1 = 100%      15 /    16 =  93%
ode/                                  5 /     5 = 100%      29 /    32 =  90%
min/                                  9 /     9 = 100%     137 /   154 =  88%
RTT_Format_Reader/                  323 /   323 = 100%     373 /   434 =  85%
linear/                              16 /    16 = 100%     334 /   392 =  85%
roots/                                8 /     8 = 100%     259 /   312 =  83%
cdi/                                 46 /    46 = 100%      63 /    76 =  82%
cdi_ipcress/                        106 /   106 = 100%     188 /   247 =  76%
viz/                                 32 /    32 = 100%     131 /   174 =  75%
meshReaders/                         15 /    15 = 100%     127 /   172 =  73%
cdi_eospac/                          52 /    52 = 100%      65 /   127 =  51%
FortranChecks/                        1 /     1 = 100%       7 /    14 =  50%
ds++/                               317 /   321 =  98%     457 /   522 =  87%
timestep/                            62 /    63 =  98%     104 /   178 =  58%
parser/                             293 /   298 =  98%    1184 /  1512 =  78%
quadrature/                         221 /   227 =  97%     580 /   738 =  78%
norms/                               25 /    26 =  96%      21 /    34 =  61%
mesh_element/                        23 /    24 =  95%     154 /   201 =  76%
c4/                                 157 /   166 =  94%     378 /   429 =  88%
special_functions/                   30 /    32 =  93%     192 /   216 =  88%
cdi_analytic/                       146 /   165 =  88%     172 /   224 =  76%
diagnostics/                         15 /    20 =  75%      28 /    42 =  66%
memory/                               4 /     6 =  66%       0 /     2 =   0%
diagnostics/                          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2066 /  2121 =  97%    5079 /  6330 =  80%


2017-03-29  Kelly (KT) Thompson  <kgt@lanl.gov>

	* "Release draco-6_21_0":https://rtt.lanl.gov/redmine/versions/48.
	  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - "Jayenne-7_13_0":https://rtt.lanl.gov/redmine/versions/50
	  - "Capsaicin-4_10_0":https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/LU           Intel 17.0.1    OpenMPI-1.10.5
	  SN/FI/IC           Intel 17.0.1    OpenMPI-1.10.5
	  TT/TR              Intel 17.0.1    Cray_MPICH2-7.5.2

	* Summary of changes:
	- 836 files changed, added or removed in 174 commits.
	- Full support for new Toss3 machines: Snow, Fire, Ice.
	- Mustang and Conejo decommissioned. No longer support these
	  machines.
	- Discontinue support/regressions for GPU kernels on Moonlight due
	  to conflicts between the version of cudatoolkit and Intel compilers.
	- Initial commit of Invert_Comm_Map, using RMA.
	- New minimum requirement for MPI is OpenMPI-1.10 to support one
	  sided messaging.
	- Teach the build system about using GNU on CRAY machines.
	- Retire the SP smart pointer template by making SP an alias for
	  std::shared_ptr.
	- Retire ArrayWrap, use std::array<T> instead.
	- New package 'Compton'
	- Add C4 interface for MPI_Sendrecv function.
	- Improved CI support.
	- First attempt to capture and report FMA behavior.
	- Add parent masking to the Debug_Option parser
	- Add optional context argument to parse_class template
	  function.

	* Developer Environment:

	- Provide regression scripts for snow (#826)
	- Update regression scripts on trinitite to support a KNL-based
	  regression (#824)
	- Improved behavior, including stability, for CI system (#815)
	- Provide script that sets up a git pre-commit hook for clang-format.
	- On HPC machines, add clang-format to the default Draco environment.
	- Modify scripts to find capsaicin on gitlab instead of subversion (#834)
	- Use builtin cmake_parse_arguments instead of our own macro (#658)
	- Add new 'pause' command line option for ParallelUnitTest. Any
	  unit test that is based on c4's ParallelUnitTest can now be
	  given the command line argument '-p'.  This option will pause
	  the program after MPI_Init to allow the developer to attach a
	  debugger to the process before the program continues. This can
	  be useful when debugging code on platforms that do not have a
	  MPI-aware debugger.
	- Add a new bash function, qrm (quick remove).  On Lustre scratch
	  filesystems, use this function to move directories to a 'trash'
	  folder instead of 'rm -rf'.  The recursive remove operation is
	  very slow on Lustre, the new function is very fast and let's the
	  system's garbage collection system complete the remove
	  operation.
	- Significant update to regression scripts. The initial goal of
	  this work was to prevent two simultaneous CI instances ofthe
	  same PR.  However, after working through several potential
	  solutions it has resulted in a bigger set of changes as detailed
	  in #841.

	* Build System:

	- Begin looking for newer versions of lapack.
	- Extend copyright dates to 2017.
	- Add support for ccache. Currently, we recommend the following
	  content for ~/.ccache/ccache.conf:
	    max_size = 30.0G
	    cache_dir = /scratch/ccache
	    umask = 0002

	* c4

	- Initial commit of Invert_Comm_Map, using RMA.
	- Retire unused TigsTrace class and tests (#799).
	- Add C4 interface for MPI_Sendrecv function.
	- Extend c4::Processor_Group::sum to operate on any random access
	  container.
          The random access container must conform to the C++11
	  conventions for such a containter. In particular, the value_type
	  must be defined and &x[0] must return a pointer to T pointing to
	  the beginning of the raw storage underlying the container.
	  This is needed to support use of Teuchos::ArrayView and
	  Teuchos::ArrayRCP in the Capsaicin project.

	* dsxx

	- Rework test harness for fpe_trap tests so they use
	  applicationUnitTest.
	- Tweak fpe_trap and tests for KNL (#835).
	- Retire the SP smart pointer template by making SP an alias for
	  std::shared_ptr. This has three consequences:
          1. std::shared_ptr has no comparison operations with raw
	     pointers, unlike the old SP template.
          2. std::shared_ptr does not have an Insist check for a null
	     pointer with the arrow operator.
          3. The conversion to bool is explicit for std::shared_ptr. If
	     tests and operator! are equivalent to explicit casts to bool
	     under C++11, but an explicit cast is required in other
	     contexts. This bites us mostly for functions like
	     UnitTest::check() that expect a bool argument, but I have
	     eased this by adding a template version of check() that
	     accepts std::shared_ptr in place of bool. I have also done
	     the same for Token_Stream::check_semantics().
	- Retire ArrayWrap, use std::array<T> instead.
	- Provide FMA macro to simulate more accurate math on older
	  machines (#872). Includes a platform check to determine if the
	  hardware provides FMA.
	- Change Packing_Utils to use 64-bit integers to prevent overflow.
	- Add option to UnitTest to suppress messages for successful tests
	  in UnitTest::check.

	* fit

	- No longer generate a library for this package.  Convert the
	  package to a header-only implementation.

	* parser

	- Add parent masking to the Debug_Option parser. The
	  parse_debug_options function now takes an optional parent mask
	  argument. The debug options parsed by the function set
	  additional bits in this mask, or turn off set bits of the debug
	  option keyword is preceded by a '!'. This allows an object being
	  parsed to "inherit" debug options from a higher leverl of the
	  parse tree and optionally modify them.
	- Add optional context argument to parse_class template
	  function. A second signature of the parse_class template
	  function has been added that takes a second argument of type
	  Class_Parse_Table::Context_Type const &. This allows a context
	  object of class-dependent type to be passed to the parser which
	  may provide context to change its behavior. In a similar
	  fashion, a second version of the parse_class_from_table
	  template function has been added that takes a second
	  Class_Parse_Table::Context_Type & argument and passes it as an
	  argument to the Class_Parse_Table constructor.
	- Extend the Abstract_Class_Parser class to allow parsing with
	  context.
	  The original Abstract_Class_Parser assumed the parse functions
	  for parsing particular child classes were all raw functions with
	  the signature SP<Abstract_Class>
	  parse_function(Token_Stream&). To optionally parse with context,
	  the class needed to accomodate parse functions with the
	  signature SP<Abstract_Class> parse_function(Token_Stream &,
	  Context const &) where Context is the context object type.
	  To accomplish this, the class was modified to take an additional
	  parse functor type parameter. This allows the parse functors to
	  be any type with an operator(Token_Stream &) defined.
	  The old case is accomodated by adding a registration function
	  that converts a raw function pointer to a std::fun_ptr object
	  and making std::fun_ptr with suitable typing the default
	  template parameter value for the parse functor type.
	  The new case is accomodated by adding a new helper class,
	  Contextual_Parse_Functor, which is a closure class that binds a
	  call to a get_context() template parameter function to the
	  second argument of a parse function with the desired signature
	  SP<Abstract_Class> parse_function(Token_Stream &, Context
	  const&). Contextual_Parse_Functor with suitable typing then
	  becomes the parse functor type.
          The new test, tstAbstract_Class_Contexual_Parser.cc, illustrates
	  how all this works in practice for an abstract parent class with
	  two child classes with context.
	- Ensure timely deallocation of parser resources. Ensure that
	  destructor of Class_Parse_Table<Quadrature> releases the parsed
	  quadrature in a timely manner. Previously the parsed quadrature
	  would not be released until general end of execution cleanups or
	  until another quadrature was parsed.
	  Provide a way to free the global pointer to the internal unit
	  system. I'm not sure why this is implemented as a raw pointer
	  rather than a shared_ptr, but the ability to free this storage
	  manually is useful even if it were implemented as a shared_ptr.
	- Add capability to extend debug options set. New functions added
	  to allow applications to add highly application-specific options
	  to the debug mask.

	* quadrature

	- Adding parser check to ensure even azimuthal order. Quadratures
	  with an odd number of azimuthal angles should cause a parser
	  error. Previously, error only occured in DBC check, which is
	  often turned off in release.

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	Corrected defects:
	* Bug #835 test_fpe_trap is failing on KNL
	* Bug #839 Cassio Understand/Fix MKL RPATH issues
	* Bug #840 User_contrib: update wiki with spack instructions.
	* Bug #841 Prevent CI scripts from starting regression tests for
	           same PR from running simultaneously.
	* Bug #852 User_contrib: at least one machine is reported as
	           'unknown'
	* Bug #855 CI on gitlab is failing
	* Bug #856 valgrind regressions broken by PR#142
	* Bug #881 Capsaicin: Valgrind results not posting to CDash
	* Bug #890 gitlab.lanl.gov not sending email
	* Bug #899 Cray: Change environment and modules to use
	           cray-mpich/7.5.2

	New Features:
	* Feature #814 CMake - update the build system to use features
	               available in ver. 3.7
	* Feature #815 Develop a crontab to automatically test PR
	* Feature #829 Migrate dev env to Intel/17 on Toss2/Toss3/Cray
	* Feature #834 Migrate capsaicin to gitlab
	* Feature #837 User_contrib: Use new header/footer for HPC module
	               system
	* Feature #843 user_contrib: provide fftw3
	* Feature #844 Compare MPI flags to those used by EAP
	* Feature #847 On HPC machines provide vendors and releases for
	               gcc@5.3.0
	* Feature #857 User_contrib: provide vendor stack on snow for
	               intel-mpi
	* Feature #862 Retire rtt_dsxx::SP
	* Feature #871 Retire rtt_dsxx::ArrayWrap
	* Feature #882 Use std::expm1 for more accurate exponents
	* Feature #883 Followup from Intel/Cray bootcamp
	* Feature #898 Add support for ccache
	* Task    #658 CMake35 - Update build system to take advantage of
	               CMake-3.5.0 features

	Known Defects:
	* Bug #885 CI system on trinitite can break
	* Bug #877 Some tests fail for RelWithDebInfo builds
	* Bug #893 Stand up CI for gcc/6.1 intel/17.0.2, openmpi/2.0.2

	* Statistics:

Contributers (updated Release.cc with this ordering).
------------
CCS-2 Draco Team: Kelly G. Thompson, James S. Warsa, Kent G. Budge,
     Alex R. Long, Kendra P. Keady, Jae H. Chang, Rob B. Lowrie,
     Matt A. Cleveland, Massimiliano Rosa, Daniel Holladay, Ryan T. Wollaeger,
     Andrew T. Till, and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Allan B. Wollaber,
     Lori A. Pritchett-Sheats, Peter Ahrens, Katherine J. Wang,
     Gabriel M. Rockefeller, and Paul W. Talbot.

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             421          12264          21949          50595
C/C++ Header                    330           6684          20713          16085
Lisp                             17           2027           2897          13059
CMake                           120           2136           5583           8930
Bourne Shell                     28            625           1362           3068
Bourne Again Shell               14            259            539           1447
Python                           13            388            657           1316
CSS                               1            113             37            395
Fortran 90                        8            113            218            380
C                                 4             47            114            244
C Shell                           2             32             36            167
DOS Batch                         4             56             65            122
YAML                              2             18             98             74
HTML                              2              6             47             65
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            971          24807          54390          96026
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
units/                               80 /    80 = 100%      58 /    58 = 100%
lapack_wrap/                         12 /    12 = 100%       0 /     0
compton/                             16 /    16 = 100%       0 /     0
rng/                                 57 /    57 = 100%      23 /    24 =  95%
fit/                                  1 /     1 = 100%      15 /    16 =  93%
ode/                                  5 /     5 = 100%      29 /    32 =  90%
min/                                  9 /     9 = 100%     137 /   154 =  88%
RTT_Format_Reader/                  323 /   323 = 100%     373 /   434 =  85%
linear/                              16 /    16 = 100%     334 /   392 =  85%
roots/                                8 /     8 = 100%     259 /   312 =  83%
cdi/                                 46 /    46 = 100%      63 /    76 =  82%
cdi_ipcress/                        106 /   106 = 100%     188 /   247 =  76%
viz/                                 32 /    32 = 100%     131 /   174 =  75%
meshReaders/                         15 /    15 = 100%     127 /   172 =  73%
diagnostics/                         15 /    15 = 100%      28 /    42 =  66%
cdi_eospac/                          52 /    52 = 100%      65 /   127 =  51%
FortranChecks/                        1 /     1 = 100%       7 /    14 =  50%
ds++/                               317 /   321 =  98%     457 /   522 =  87%
timestep/                            62 /    63 =  98%     104 /   178 =  58%
parser/                             293 /   298 =  98%    1184 /  1512 =  78%
quadrature/                         220 /   226 =  97%     580 /   738 =  78%
norms/                               25 /    26 =  96%      21 /    34 =  61%
mesh_element/                        23 /    24 =  95%     154 /   201 =  76%
c4/                                 153 /   162 =  94%     373 /   421 =  88%
special_functions/                   30 /    32 =  93%     192 /   216 =  88%
cdi_analytic/                       146 /   165 =  88%     172 /   224 =  76%
memory/                               4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2067 /  2117 =  97%    5074 /  6322 =  80%


2016-11-16  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_20_1. This is a patch release.
	  https://rtt.lanl.gov/redmine/versions/49

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_12_0,  https://rtt.lanl.gov/redmine/versions/47
	  - Capsaicin-4_9_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/LU           Intel 16.0.3    OpenMPI-1.10.3
	  SN/FI/IC           Intel 16.0.3    OpenMPI-1.10.3
	  TT/TR              Intel 16.0.3    Cray_MPICH2-7.4.2
	  SQ                 GCC 5.3.0       MPICH2-1.5.0

	* Summary of changes:

	- 33 files changed, added or removed in 32 commits.
	- Provide initial support for snow/fire/ice. #826
	- Initial commit of Invert_Comm_Map, using RMA.
	- Discontinue support/regressions for GPU kernels on Moonlight.
	- Provide regressions for Trinitite/KNL. #824
	- No longer generate a library for package 'fit'
	- Move defaults to cmake/3.6.2 and trilinos/12.8.1 (tt only).

2016-11-02  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_20_0. This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/45

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_12_0,  https://rtt.lanl.gov/redmine/versions/47
	  - Capsaicin-4_9_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/LU           Intel 16.0.3    OpenMPI-1.10.3
	  TT/TR              Intel 16.0.3    Cray_MPICH2-7.4.2

	* Summary of changes:

	- 837 files changed, added or removed in 297 commits.
	- Added support for Trinity/Trinitite, including KNL.
	- Added support for Snow.
	- No longer supporting Cielito/Cielo/Mapache.
	- No longer supporting KNC-MIC architecture.
	- No longer supporting XLC-12 compilers on Sequoia.
	- No longer supporting PGI due to poor/lack of C++11 support.
	- Begin allowing all C++11 features.
	- Main repository is now hosted at github.com/losalamos/Draco.git
	- Eliminate “static initialization order" bug.
	- Adding a Fortran interface and F90 test for Quadrature_Interface.hh.

	* Developer Environment:

	- Begin loading gsl/2.1 and lapack/3.5.0 as part of the standard
	  darwin vendor set.
	- Begin using HPC provided grace on Toss2 machines.
	- Adding support for a gcc-6.1.0 nightly regression on CCS-LAN
	  servers.
	- On CCS machines, ensure that we are loading modulefile
	  superlu-dist instead of SuperLU_DIST.
	- Begin using GitHub (stand up formatting, wiki, CI, etc.)
	- By default add $VENDOR_DIR/bin to the $PATH.
	- On Darwin, update the regression system to use the new slurm
	  'contraints' features.
	- Emacs: Set an autofill column for Draco's python-mode.
	- Update regression and other misc scripts to work with github
	  repository (#752)
	- Update the build system to allow configuration on CrayPE w/o
	  special options. No longer require
	  CMakeCache-Cray.txt. Automatically set CXX, CC, FC to Cray
	  compile wrappers (#658)
	- Allow regression scripts to run from a user's directory.
	- Begin defaulting to Intel/16.0.3 and OpenMPI/1.10.3 on ICN
	  machines.
	- Regression system will only build the autodoc target if given
	  option '-a'. Previously, any 'Release' regression on ccscs7
	  would generate the autodoc target (generating all of the doxygen
	  related files). This doesn't play nice with regression testing
	  of pull requests.  This commit introduces a new option for
	  'regression-master.sh' (-a) that enables the autodoc
	  target. Without the option, the autodoc target will no longer be
	  called. refs #768.
	- Added a simple .vimrc file to conform to style guide.
	- Adopt clang-format LLVM-style as a style requirement. Reformat
	  existing code. Provide optional pre-commit-hook to run
	  clang-format automatically.
	- Begin using trilinos/12.8.1 and MKL on ICN machines.

	* Build System:

	- Update FindGrace.cmake so that it attempts to find the include
	  and library directories for Grace if they are not provided in
	  the user environment as GRACE_INC_DIR and GRACE_LIB_DIR.  In the
	  new mode, if xmgrace is found in PATH, these two environment
	  variables are set to include and lib directories that exist
	  parallel to xmgrace's bin directory.
	- Provide new unit tests that ensure that discovered metis,
	  parmetis and superlu-dist libraries are valid (#730).
	- Begin using Use the CMake target property
	  INTERPROCEDURAL_OPTIMIZATION (#647).
	- Do not use compiler flag '-xHost' on Cray machines.
	- Add support for OpenBLAS to satisfy optional LAPACK
	  requirement.
	- Begin using MAPN features on Cray systems. This allows multiple
	  tests to run simultaneously on a single node (#597).
	- Provide a new python-based system for ApplicationUnitTest.
	- Enable the use of C++11 in Random123.

	* cdi_ipcress:

	- Change the python IPCRESS parsing and plotting to be more
	  library-like so it can be called from non-draco python scripts.

	* c4:

	- Retire accumulatev.hh and replace it with existing global_sum
	  calls (#784, #799).

	* parser:

	- Add a set of standardized debug options to the parser package.
	- Eliminate “static initialization order" bug. This issue was
	  causing binaries created with the Cray compiler to crash before
	  the code started. The issue and fix is described at
	  https://isocpp.org/wiki/faq/ctors#static-init-order. (#767)

	* quadrature:

	- Account for "starting directions" in
	  Ordinate_Set_Mapper. "Starting directions" in the ordinate set
	  do not have any associated weight, so weights in the ordinate
	  being mapped into the set should not be distributed into the
	  starting directions, should they exist.
	- Adding a Fortran interface and F90 test for
	  Quadrature_Interface.hh.
	  . This is in the file quadrature_interfaces.f90
	  . A new test and subdirectory (ftest) exercises the interface
	  . This will ensure that any changes to Quadrature_Interface.hh
	    are immediately incorporated into quadrature_interfaces.f90.
	- Changing default axis ordering for 2D Cartesian. Now mu and eta
	  are x and y (like in 3D) and xi points in z. For tri cl, square
	  cl, and product cl quadratures, this change means the polar
	  angle moves alignment from y to z. Updated tests with the new
	  ordering

	* RTT_Format_Reader

	- Implementation of polyhedron meshes through RTT mesh format. The
	  "polyhedron" element types assume an 3D AMR mesh based on a
	  hexahedron with zero or more of its 6 faces being a "refined"
	  face. A refined face is one with 4 additional nodes on the
	  centers of the 4 edges of the face and one more additional node
	  in the center of the face. This is the (already extant) QUAD_9
	  element. There is an example mesh that has been added that
	  exercises this new element type, along with the QUAD_9 and
	  QUAD_5 elements that the polyhedron element comprises. More work
	  will be done to support additional types of faces that may
	  appear in an AMR mesh cell, but this initial implementation and
	  test is the first step in the sense that the exmaple mesh is a
	  single cube with one refined face.
	- Adding QUAD_6 and QUAD_6o mesh elements and a correspoding RTT
	  format test with a QUAD_6 element. The QUAD_6 (quad6 or quad6a
	  in RTT format) has two midpoint nodes on adjacent sides of a
	  quad. The QUAD_6o element as the two midpoint nodes located on
	  opposite sides.

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	Corrected defects:
	* Bug #684 Intel1602: tstBlock_Vector_Operator segmentation fault
	* Bug #724 Refresh github repository with Draco-6_19_0.
	* Bug #728 Darwin regressions broken
	* Bug #729 For Toss2 machines, re-release Capsaicin vendors as static libraries
	* Bug #764 Recent releases omit rpath for MKL
	* Bug #767 Eliminate “static initialization order" bug
	* Bug #768 Regression: don't build autodoc when testing PRs.
	* Bug #791 Allow commits to draco/dracodoc svn repository
	* Bug #819 cray: reserve correct memory per core (when knl)
	* Bug #820 Update vendor installs on Luna

	New features:
	* Feature #544 Investigate Intel/16
	* Feature #570 Trinitite: Provide support for Craypat
	* Feature #595 Trinitite cce: Tune compiler flags
	* Feature #713 Migrate Draco to github
	* Feature #714 Remove load balance limiter for nightly regressions on HPC
	* Feature #730 Provide simple checks for Metis, Parmetis, SuperLU vendors
	* Feature #752 github: Update regressions scripts to pull from github
	* Feature #753 github: Update push/pull repository scripts
	* Feature #754 github: Document and demonstrate new workflow
	* Feature #769 github: finalize transition
	* Feature #795 Env/Regressions on Darwin/Haswell must be updated to intel/16
	* Feature #802 Provide static versions of all capsaicin vendors
	* Feature #803 Investigate replacement of AppUnitTest CMake function
	* Feature #811 provide trilinos-12.8.1 build with pr539 (belos mods)
	* Feature #812 update_regression_scripts are failing on ccs machines
	* Feature #813 ensure bounds-checking regressions are working as expected.
	* Feature #823 Test 'belosmods' flavor of capsaicin regression on ccscs7
	* Task #597 Cray: Help ctest reserve the correct number of processors for each unit test
	* Task #647 CMake: Consider use of INTERPROCEDURAL_OPTIMIZATION target property
	* Task #667 Demonstrate build and tests on trinity (open science testing)
	* Task #748 Provide metis%gcc@4.8.2 on ML/LU
	* Task #766 Release codes on Trinitite and Trinity
	* Task #809 Provide libquo recipe to spack
	* Task #810 Spack: update subversion recipe for expat
	* Task #816 Spack: Cray updates
	* Task #821 Update cshrc file

	Known Defects:
	* Bug #428 Qt5.3 fails to render correctly for X11 via PuTTy
	* Bug #59  cdi_eospac design flaw

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
CCS-2 Draco Team: Kelly G. Thompson, James S. Warsa, Kent G. Budge,
     Jae H. Chang, Alex R. Long, Rob B. Lowrie, Matt A. Cleveland,
     Massimiliano Rosa, Kendra P. Keady, Andrew T. Till, Ryan T. Wollaeger,
     and Kris C. Garrett.
Prior Contributers: Jeff D. Densmore, Allan B. Wollaber,
     Lori A. Pritchett-Sheats, Katherine J. Wang, Gabriel M. Rockefeller,
     and Paul W. Talbot.
Copyright (C) 2016-2018 Los Alamos National Security, LLC. (LA-CC-16-016)

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             419          12147          22132          50127
C/C++ Header                    331           6822          21172          16380
Lisp                             17           2029           2911          13059
CMake                           118           2092           5376           8821
Bourne Shell                     26            531           1220           2520
Python                           11            370            565           1252
Bourne Again Shell               13            229            454           1238
CSS                               1            113             37            395
Fortran 90                        8            113            218            380
C                                 4             47            114            244
C Shell                           2             33             28            174
DOS Batch                         4             56             65            122
YAML                              2             18            104             83
HTML                              2              6             47             65
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            963          24645          54518          94939
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
units/                               80 /    80 = 100%      58 /    58 = 100%
lapack_wrap/                         12 /    12 = 100%       0 /     0
rng/                                 57 /    57 = 100%      23 /    24 =  95%
fit/                                  1 /     1 = 100%      15 /    16 =  93%
ode/                                  5 /     5 = 100%      29 /    32 =  90%
min/                                  9 /     9 = 100%     137 /   154 =  88%
RTT_Format_Reader/                  323 /   323 = 100%     373 /   434 =  85%
linear/                              16 /    16 = 100%     334 /   392 =  85%
roots/                                8 /     8 = 100%     259 /   312 =  83%
cdi/                                 46 /    46 = 100%      63 /    76 =  82%
cdi_ipcress/                        106 /   106 = 100%     188 /   247 =  76%
viz/                                 32 /    32 = 100%     131 /   174 =  75%
meshReaders/                         15 /    15 = 100%     127 /   172 =  73%
diagnostics/                         15 /    15 = 100%      34 /    50 =  68%
cdi_eospac/                          52 /    52 = 100%      65 /   127 =  51%
FortranChecks/                        1 /     1 = 100%       7 /    14 =  50%
timestep/                            62 /    63 =  98%     104 /   178 =  58%
ds++/                               341 /   347 =  98%     465 /   536 =  86%
parser/                             283 /   289 =  97%    1143 /  1465 =  78%
quadrature/                         219 /   225 =  97%     580 /   738 =  78%
norms/                               25 /    26 =  96%      21 /    34 =  61%
mesh_element/                        23 /    24 =  95%     154 /   201 =  76%
c4/                                 160 /   169 =  94%     512 /   562 =  91%
special_functions/                   30 /    32 =  93%     192 /   216 =  88%
cdi_analytic/                       146 /   165 =  88%     172 /   224 =  76%
memory/                               4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2071 /  2124 =  97%    5186 /  6438 =  80%

2016-06-27  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_19_1. This is patch release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_11_1
	  - Capsaicin-4_8_2

	* Platforms:
	  TT/TR     Intel 15.0.5    Cray-MPICH2-7.3.3

	* Summary of changes:
	- 102 files changed, added or removed in 67 commits.
	- Draco source repository moved to github.com/losalamos/Draco
	  Many changes to scripts, environments.
	- Fixed static initialization order bug, #767.
	- IPO settings consolidated into one place in the build system.
	- Allow regression scripts to run from developer's checkout.
	- Update build system to work on CrayPE w/o special config or
	  cache files.
	- New fortran interfaces and tests in quadrature.
	- Begin supporting gcc-6.1.0 on Linux64.

2016-04-28  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_19_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/43.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_11_0,  https://rtt.lanl.gov/redmine/versions/42
	  - Capsaicin-4_8_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU     Intel 15.0.5    OpenMPI-1.6.5
	  CT/CI              Intel 15.0.5    Cray_MPICH2-7.0.1
	  TT/TR              Intel 15.0.5    Cray_MPICH2-7.2.5
	  SQ                 XLC   12.1      MPICH2-1.4
	                     GCC   4.8       MPICH2-1.4

	* Summary of changes:
	- 887 files changed, added or removed in 89 commits.
	- Various maintenance related changes (scratch space location,
	  updated vendors and vendor locations, etc.)
	- Begin using [[spack]] for vendor maintenance.
	- New interfaces in quadrature provided to support Jayenne-7_11_0.
	- Draco open source license approved, LA-CC-16-016,
	  https://github.com/losalamos/Draco
	- Added preliminary support for Trinity (completed during the open
	  science campaign).
	- Stand up nightly regressions with clang-3.8.
	- Update Copyright, README and LICENSE files to allow release
	  of Draco under open source BSD license. refs #617.

	* Details per package:

	Developer Environment:
	- For Cray systems load the gcc compiler under the PrgEnv-intel
	  environment. This allows Intel to use gcc headers that support
	  C++11. refs #621
	- For the standard Draco developer environment, add
	  /var/tmp/vendors/bin to the PATH.
	- Begin supporting doxygen 1.8 (better autodoc at
	  https://rtt.lanl.gov/autodoc/draco).

	Build System:
	- Changing the build system to correctly distribute tests on Cray
	  machines w/o oversubscribing core 0 on each node. refs #597
	  - When registering tests, ensure that the the whole node is
	    registered as 'in use' by ctest. This means that even scalar
	    tests will register 32 cores on trinitite. Cover various cases
	    (user provided label, etc.)
	  - For aprun, use the options
	    '-cc none -b -d ${MPI_CORES_PER_CPU} -n <N>'.
	    o Use the variable MPIEXEC_POSTFLAGS to capture "-cc none -b -q".
	  - Cray machines: Trinitite, Cielo and Cielito.
	  - In ApplicationUnitTest.cmake, make a REGEX REPLACE operation
	    safer by appropriate use of quotes.
	  - Add the following variables to the published
	    draco-config.cmake so they are available from the Capsaicin
	    build system w/o calling Draco's setupMPI.cmake:
	    SITENAME
	    MPIEXEC
	    MPI_CORES_PER_CPU
	    MPI_PHYSICAL_CORES
	    MPIEXEC_MAX_NUMPROCS
	  - On Cray machines, always run numdiff from the login node
	    instead of the backend.
	  - Consolidate setting aprun's depth (-d) option into a
	    cmake-function that can be used by ApplicationUnitTest.cmake.
	  - When on Cray machines, ensure that gdiff and pgdiff are called
	    with the appropriate aprun options.
	  - Instruct regressions and release script systems to use 8 nodes
	    for Cray machines (8 concurrent tests will be allowed to run).
	- Do not include '-bind-to socket --may-by ppr:N:socket' options
	  to mpirun when the OS is APPLE. fixes #691

	cdi:
	- Added a function to integrate and return the rosseland spectrum
	  over all energy groups (without returning the plance)

	ds++:
	- Assert.hh/cc: Modify various assertion macros to make a call to
	  a check function rather than performing the check
	  themselves. This greatly reduces the number of untaken branches
	  that are detected by BullseyeCoverage when doing coverage
	  analysis of the test suite.

	mesh_element:
	- Add heptagon and octagon to types, to fill out the AMR element zoo.

	parser:
	- Add an access function to retrieve the text of the
	  String_Token_Stream.

	quadrature:
	- Adding a capability to map a delta-function angular direction and
	  associated weight into an Ordinate Set Refs #607.
	- Adding a factory class to build an Ordinate_Set from quadrature_data
	- Adding a check function to ensure quadrature_data entries are
	  valid before using them.
	- Adding a requirement that all the pointers in quadrature_data
	  not be NULL in 2D and 3D

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	Corrected defects:
	* Bug #712 Vendor or regression bug wrt suite-sparse linked into trilinos
	* Bug #710 Provide updated Capsaicin vendor stack on HPC
	* Bug #701 Update valgrind suppression filter
	* Bug #700 autodoc is not being published nightly
	* Bug #698 Restore nightly regressions on ccscs7
	* Bug #697 Install all vendor code at /scratch/vendors
	* Bug #691 OSX: flags given to openmpi/1.10 result in fatal error
	* Bug #690 Possible performance issue related to Boost and OpenMPI/1.10
	* Bug #686 Turn DbC off for the nightly regression that tests code coverage
	* Bug #674 Debug testing is much slower after Feb 11
	* Bug #627 Release scripts attempt to set permissions before install is done
	* Bug #621 Intel/15.0.5 on Cray does not provide full C++11 support
	* Bug #602 Darwin knc-mic builds are broken

	New features:
	* Feature #703 Provide '-bc' versions of metis, parmetis, superlu-dist and trilinos
	* Feature #696 Stand up new vendors directory for RHEL72 machines
	* Task #699 new cmake install is missing cmake-gui and https support (curl)
	* Task #675 Package Management: learn about spack for managing vendors
	* Task #668 Demonstrate build and test on RHEL72 (ccscs4)
	* Task #619 Change Yellow HPC regressions so they use /net/scratch1
	* Task #617 Obtain LACC for Draco-6-X

	Known Defects:
	* Bug #684 Intel1602: tstBlock_Vector_Operator segmentation fault
	* Bug #428 Qt5.3 fails to render correctly for X11 via PuTTy
	* Bug #59  cdi_eospac design flaw

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
79650: kellyt
46033: kgbudge
9778: tme
5899: bta
4760: lowrie
3954: mcghee
3622: mwbuksas
3448: gaber
2306: wollaber
2188: warsa
832: sethrj
629: rsqrd
545: jhchang
434: talbotp
206: kwang
179: furnish
169: clevelam
132: keadyk
130: bergen
94: regress
92: pahrens
90: phenning
47: batcho
41: jdd
30: tmonster
24: swmosher
8: tkelley
2: wawiesel

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             411          12182          21838          64476
C/C++ Header                    332           7169          21333          19230
Lisp                             17           2031           2939          13034
CMake                           117           2089           5452           8777
Bourne Shell                     19            400            945           1934
Bourne Again Shell               17            268            538           1480
Python                            6            286            376            921
CSS                               1            113             37            395
Fortran 90                        6             88            158            290
C                                 4             46            113            238
C Shell                           2             31             30            177
DOS Batch                         3             47             37            100
HTML                              2              6             47             65
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            942          24795          53918         111196
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi/                    46 /    46 = 100%      63 /    76 =  82%
../source/src/cdi_ipcress/           106 /   106 = 100%     188 /   247 =  76%
../source/src/viz/                    32 /    32 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/            15 /    15 = 100%      34 /    50 =  68%
../source/src/cdi_eospac/             52 /    52 = 100%      65 /   127 =  51%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/ds++/                  340 /   346 =  98%     458 /   530 =  86%
../source/src/parser/                281 /   287 =  97%    1114 /  1431 =  77%
../source/src/quadrature/            219 /   225 =  97%     569 /   728 =  78%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/c4/                    163 /   172 =  94%     523 /   576 =  90%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2068 /  2123 =  97%    5061 /  6342 =  79%

2015-12-01  Kelly (KT) Thompson  <kgt@lanl.gov>

 	* Release draco-6_18_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/41.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_10_0,   https://rtt.lanl.gov/redmine/versions/40
	  - Capsaicin-4_7_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 15.0.5    OpenMPI-1.6.5
	  CT/CI              Intel 15.0.5    Cray_MPICH2-7.0.1
	  CT/CI/TT           Intel 15.0.5    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4
	                     GCC   4.8       MPICH2-1.4

	* Summary of changes:
	- 132 files changed, added or removed in 108 commits.
	- Begin supporting Intel 15.0.5
	- Begin supporting shared-library builds on Cray machines.
	- Move to newer compilers and vendor versions (see details below).
	- Provide initial support for Allinea MAP.

	* Details per package:

	Developer Environment:
	- Begin supporting Intel 15.0.5.  Vendors built and installed with
	  this compiler.
	- Begin supporting shared-library builds on Cray
	  machines. Starting with this release, the recommended configure
	  command on the Cray machines should include
	  '-C /path/to/draco/config/CrayConfig.cmake'.  This addresses
	  issues where CMake complains about the C compiler not working.
	- Change the default developer environment to use cmake/3.4,
	  SuperLU_DIST/4.1, trilinos/12.0.1 and eospac/6.2.4 (#600).
	- On CCS machines, change default environment to gcc/5.2 and
	  openmpi/1.10.0. (#601)
	- Begin support for rzuseq.
	- Update config files for code beautifiers.  These (clang-format,
	  emacs-batch-script) won't make your code 100% conformant to the
	  Draco code standard, but they move code in the right direction.
	  These tools are being evaluated by the Jayenne team to help
	  improve standardization of code style.

	Build System:
	- Update the cmake-based ApplicationUnitTest framework so that the
	  build system strings PROJECT_BINARY_DIR and PROJECT_SOURCE_DIR
	  are available from the unit test script.
	- Provide build system updates to support Allinea MAP (#586).
	  See build variables USE_ALLINEA_MAP and USE_ALLIENA_DMALLOC.
	- Provide build system support and demonstrate configure and build
	  with CrayCC 8.4.  Many tests still produce SEGV. Cray is working
	  on this issue. Earlier versions of the Cray compiler do not
	  support C++11.
	- When registering tests, define CPP defines for each build target
	  instead of adding compile flags for all targets in the directory
	  (and subdirectories).  This addresses a weakness in the build
	  system design that Matt Cleveland stumbled upon where deep test
	  directories had conflicting definitions for PROJECT_SOURCE_DIR.
	- Assign a maximum machine load to limit the number of concurrent
	  tests. (#603)
	- For Multi-config build tools, change the way the environment
	  variable DBSCFGDIR works in the build system.  Now that
	  CMake-3.4.0 supports generator expressions for installation
	  commands, replace the manually manipulated \${BUILD_TYPE} with
	  the generator expression \$<CONFIG>. This also eliminates the
	  need to update draco-config.cmake after installation. Eliminate
	  the build target 'update_draco_config' that ran for every build
	  (when using a multi-config tool like MSVC or XCode). (#603)

	cdi_ipcress:
	- Clean up unit tests so that they work on IBM BGQ.

	ds++:
	- Clean up XGetopt features (#573)

	FortranCheck:
	- Rework FortranChecks so that it tests complex
	  CMakeAddFortranSubdirectory modes (#560).

	parser:
	- Clean up unit tests so that they work on IBM BGQ.
	- Add an option to the token streams to force all keywords to
	  consist of a single identifier, disallowing keywords consisting
	  of a sequence of identifiers separated by whitespace.

	quadrature:
	- Change moment expansion order argument for construction of
	  Ordinate_Space to int; a negative value flags that the moment
	  space is not actually needed and should not be calculated.

	viz:
	- Clean up unit tests so that they work on IBM BGQ.

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	Bug #469 CMake: FindMPI.cmake can choose wrong libraries
	Bug #552 trinitite: mkdir has issues
	Bug #585 Replace SuperLU_DIST with version 4.1
	Bug #615 Cassio regression is failing on Darwin: cannot find Wedgehog_Interfaces.f90
	Bug #616 Regressions on Darwin are broken

	* New features:
	Feature #518 CMake 3.3
	Feature #545 Investigate gcc/4.8.4 on Vulcan
	Feature #553 Support trinitite
	Feature #558 Move builds to Intel/15.0.3 on Toss 2.2 machines
	Feature #560 Rework FortranChecks so that it tests complex CMakeAddFortranSubdirectory modes
	Feature #565 Trinitite: track recommendations given to consult.
	Feature #566 SQ: Test current code base on SQ before release cycle starts
	Feature #571 Trinitite: Support PrgEnv-Cray toolset
	Feature #581 Change install directory name to match modulefiles pattern
	Feature #598 Detect/support double-digit version numbers in OpenMPI
	Feature #601 Provide vendor stack for gcc/5.2 on CCS machines
	Feature #612 Provide vendor stack built with Intel-15.0.5
	Feature #573 XGetopt: Review K. Wang's work and update as needed
	Feature #586 Revisit how builds work under the Cray Environments
	Feature #600 Release current codes on Darwin
	Feature #603 Update build system to take advantage of new features in cmake-3.4

	* Known Defects:
	Bug #602 Darwin knc-mic builds are broken

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
76554: kellyt
45591: kgbudge
9798: tme
5897: bta
4760: lowrie
3954: mcghee
3632: mwbuksas
3448: gaber
2188: warsa
832: sethrj
799: wollaber
672: kgt
629: rsqrd
565: jhchang
434: talbotp
311: 107638
208: kwang
183: furnish
169: clevelam
130: bergen
104: phenning
102: regress
92: pahrens
47: batcho
41: jdd
30: tmonster
24: swmosher
8: tkelley
2: wawiesel

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             408          11911          21477          63472
C/C++ Header                    330           7104          21218          19101
Lisp                             17           2031           2939          13034
Perl                              2           1351           1072           9265
CMake                           112           1998           5048           8224
Bourne Shell                     19            398            935           1922
Bourne Again Shell               17            263            525           1446
Python                            7            280            361            856
CSS                               1            113             37            395
Fortran 90                        6             88            158            290
C                                 4             46            113            238
C Shell                           2             30             29            168
DOS Batch                         3             47             37            100
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            935          25707          54039         118638
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    45 /    45 = 100%      60 /    72 =  83%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     188 /   247 =  76%
../source/src/viz/                    32 /    32 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/            15 /    15 = 100%      34 /    50 =  68%
../source/src/cdi_eospac/             52 /    52 = 100%      65 /   127 =  51%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/ds++/                  339 /   343 =  98%     460 /   532 =  86%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/parser/                280 /   286 =  97%    1145 /  1489 =  76%
../source/src/quadrature/            203 /   208 =  97%     527 /   677 =  77%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/c4/                    163 /   172 =  94%     517 /   562 =  91%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2071 /  2124 =  97%    5089 /  6407 =  79%

2015-08-24  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_17_0.  This is a minor Draco release.
	https://rtt.lanl.gov/redmine/versions/39.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_9_0,   https://rtt.lanl.gov/redmine/versions/38
	  - Capsaicin-4_6_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 14.0.4    OpenMPI-1.6.5
	                     Intel 15.0.3    OpenMPI-1.6.5
	  CT/CI              Intel 14.0.4    Cray_MPICH2-7.0.1
	  CT/CI/TT           Intel 15.0.3    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	- 209 files changed, added or removed in 98 commits.
	- Begin supporting Intel 15.0.3
	- Begin supporting trinitite.
	- c4's ApplicationUnitTest replaced with a CMake-based scripting system.
	- For MSVS, build all executable objects at
	  CMAKE_RUNTIME_OUTPUT_DIRECTORY.

	* Details per package:

	Developer Environment:
	- Modify draco developer environment and the regression environment so
	  that modulefiles for ParMetis, SuperLU_DIST and trilinos are expected
	  to be found in user_contrib instead of $VENDOR_DIR/Modules/<machine>.
	- Provide developer environment for trinitite.

	Build System:
	- Rework build system to support build tools that use multi-configuration
	  selection (Xcode, MSVS). For multi-config-installs, a post-build script
	  is run to update the contents of draco-config.cmake. (#536)
	- Rework Win32/MSVS builds so that all runtime objects are built at
	  CMAKE_RUNTIME_OUTPUT_DIRECTORY. The eliminates the need to copy all dll
	  to the current test directory (reducing build times and build directory
	  footprint). (#537)
	- Begin supporting trinitite (#549)
	- Move querying and setting of many MPI and C4 variables from
	  c4/CMakeLists.txt to config/setupMPI.cmake.  This consolidates most of
	  the cmake code that sets MPI values into one file and makes these
	  values more readily accessible from config/ApplicationUnitTest.cmake
	  (#551).
	- Provide a new build system macro: add_component_executable. This macro
	  is an analog to add_component_library, but it creates an executable
	  binary instead of library.  The macro standardizes properties across
	  the project including executable names and project folder names (IDE
	  only). The macro also automates the process of export the executable
	  and all of its dependencies to draco-config.cmake.  This allows
	  dependent projects to access this information easily (#559).
	- Ensure that CMAKE_INSTALL_RPATH is set and saved to the CACHE.  This
	  should fix an issue that prevented the correct RPATH from being saved
	  in installed executables (#574).
	- Removed deprecated file config/rerun_failed.cmake.  ctest now provides
	  equivalent functionality via the --rerun-failed option.
	- Disable calling find_package(GSL) if the target GSL::gsl is already
	  defined.

	c4:
	- Added guard code for empty vector special case in broadcast call.
	- ApplicationUnitTest removed from Draco.  Replace with a CMake-script
	  based capability. This change was required to allow ApplicationUnitTest
	  like tests to run on BGQ and Trinitite.
	- Implement updates to re-enable building with DRACO_C4=SCALAR (#542).

	cdi_ipcress:
	- Use new draco functions to simplify tests and eliminate the
	  cdi_ipcress_test library.

	ds++:
	- Added specialized forms for Soft_Equiv: vector<double>,
	  vector<vector<double>>, and vector<vector<vector<double>>>.
	- Updated UnitTest to provide member function getTestSourcePath().
	- Make path handling more consistent.  Always convert paths to native
	  format using forward slashes as directory separators for Unix and
	  backward slashes for Windows platforms.  Functions that return
	  directory paths always end with a directory separator.  This
	  standardization included the removal of tests in tstPath.cc where we
	  tried to use Windows style paths on Unix.
	- Added SP::operator!= for two-SP comparisons. Before this addition, (p
	  != p2) with two SPs would evaluate operator bool for each one, then
	  compare the two bools, so the comparison became "is one SP NULL and the
	  other non-NULL?" rather than "do these SPs hold different pointers?"
	  (#555).
	- Provide XGetopt feature and unit test in ds++. Update stand-alone
	  applications that take command line arguments to use XGetOpt (#533).

	parser:
	- Add an open(string const &filename) function to
	  Parallel_File_Token_Stream to allow it to be switched to a different
	  input file than the one it was constructed with.
	- Add 'eV' as a unit recognized by the parser.

	quadrature:
	- Updated to compile under MSVC.

	viz:
	- Minor cleanup of filenames and removal of dead code.

	* Details for defects and features can be found at https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	  Bug #578 Regression failures on ML, SQ, Sunergos
	  Bug #574 Moonlight: make install does not set correct rpath in
	           executables
	  Bug #562 Darwin regressions not posting to CDash
	  Bug #561 Unable to compile Capsaicin in Debug mode against
	           Trilinos/12.0.1
	  Bug #542 Builds are broken for -DDRACO_C4=SCALAR
	  Bug #555 Using operator!= to test inequality of two SPs doesn't compare
	           the two underlying pointers
	  Bug #554 trinitite: cannot ssh or https (443) to rtt.lanl.gov from
	           tt-fey
	  Bug #422 CMake: FindMPI.cmake doesn't find Intel MPI on Moonlight
	  Bug #530 Win32: Get parser and quadrature packages working under MSC
	  Bug #524 Can cdi_ipcress_test be eliminated

	* New features:
	  Feature #551 Consider replacing ApplicationUnitTest with a script-language
	  Feature #519 CMake 3.3 - CMake_Fortran_VERSION
	  Feature #549 Trinitite: Setup environments, vendors, codes and
	  Feature #537 Win32: Attempt to reduce the number of file
	  Feature #536 The build system should support multi-config-install build
	  Feature #558 Move builds to Intel/15.0.3 on Toss 2.2

	* Known Defects:
	  Bug  # 59 cdi_eospac design flaw
 	  Task #370 Provide CMakeAddFortranSubdirectory modifications to CMake
	  Bug  #428 Qt5.3 fails to render correctly for X11 via PuTTy
	  Bug  #469 FindMPI.cmake can choose wrong libraries
	  Task #488 Re-establish a nightly Mac build.
	  Bug  #552 trinitite: mkdir has issues

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------

75332: kellyt
45641: kgbudge
9800: tme
5897: bta
4764: lowrie
3954: mcghee
3632: mwbuksas
3446: gaber
2204: warsa
832: sethrj
796: wollaber
744: kwang
629: rsqrd
565: jhchang
434: talbotp
184: furnish
169: clevelam
130: bergen
104: phenning
102: regress
92: pahrens
47: batcho
44: jdd
30: tmonster
24: swmosher
8: tkelley
2: wawiesel

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             409          11815          21300          62842
C/C++ Header                    330           7079          21170          19013
Lisp                             15           1878           2672          12367
CMake                           108           1932           4882           7936
Bourne Again Shell               19            418            747           1746
Bourne Shell                     15            265            677           1221
Python                            7            279            361            848
CSS                               1            113             37            395
C                                 4             46            113            238
Fortran 90                        3             45             80            172
C Shell                           2             31             29            169
DOS Batch                         3             47             37            100
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            923          23995          52195         107174
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    45 /    45 = 100%      60 /    72 =  83%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     188 /   247 =  76%
../source/src/viz/                    32 /    32 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/ds++/                  329 /   332 =  99%     398 /   463 =  85%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/parser/                280 /   285 =  98%    1113 /  1429 =  77%
../source/src/cdi_eospac/             51 /    52 =  98%      53 /   127 =  41%
../source/src/quadrature/            203 /   208 =  97%     525 /   673 =  78%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/c4/                    163 /   172 =  94%     525 /   576 =  91%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/diagnostics/            15 /    20 =  75%      34 /    49 =  69%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
../source/src/diagnostics/qt/          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2060 /  2125 =  96%    4989 /  6303 =  79%

2015-05-04  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_16_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/36.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_8_0,   https://rtt.lanl.gov/redmine/versions/37
	  - Capsaicin-4_5_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 14.0.4    OpenMPI-1.6.5
	                     Intel 13.1.3    OpenMPI-1.6.5
                             Intel 15.0.090  OpenMPI-1.6.5
	  CT/CI              Intel 14.0.4    Cray_MPICH2-7.0.1
	                     Intel 13.1.3    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	- 833 files changed, added or removed in 83 commits.
	- A significant redesign of the parser component was completed (see
	  details below, r7945).
	- This release includes many build system and minor package updates.

	* Details per package:

	Build System:
	- Update the CMakeAddFortranSubdirectory (CAFS) feature of the build
	  system to respect the selected build type (Debug, Release, etc.) in
	  the Fortran subproject.
	- Began supporting and using user_contrib modules on HPC platforms
	  (removed many modulefiles from Draco).
	- Reverting back to intel/14 for regressions and the default environment
	  due to issues discovered in intel/15.  When intel/15.0.2 is available,
	  we will consider moving back to version 15.
	- Some Win32 specific implementations were implemented to allow nightly
	  regressions of Draco and Jayenne from Win32.
	- Some cleanup of how OpenMP is detected and toggled on/off by the build
	  system.
	- Begin requiring cmake/3.2.1 or later (now using cmake's FindGSL.cmake)

	c4:
	- Reimplemented start, stop, and set_activity functions of Global_Timer
	  to have desired behavior. Add report_all function to Global_Timer to
	  print a unified report from all active Global_Timers. Add reset_all
	  function to reset all active Global_Timers. Make constructor
	  "explicit" to avoid even the remote possibility of unwittingy
	  constructing a Global_Timer from a raw string implicitly. Get rid of
	  destructor. Reports must be generated manually rather than popping up
	  whenever the destructor fires. Make sure all this code is exercised by
	  the test suite.

	cdi_ipcress:
	-  Added the ability to plot Planckian or Rosseland absorption opacity
	  (or both) in the python ipcress file plotter

	parser:
	- Modifications to parser package meant to more cleanly separate parser
	  code from other code and to better support inheritance and reentrancy
	  in class parsers. First, I have add a function template to
	  parser/utilities.hh:

          template<class MyClass> SP<MyClass> parse_class(Token_Stream &);

	  This will normally be called with code of the form

          SP<MyClass> my_object = parse_class<MyClass>(tokens);

	  This is meant to eliminate the use of static members of classes for
	  parsing, such as Quadrature::parse, so that parsing code is not
	  entangled with the classes being parsed. It is also consistent with
	  all the other parse functions in utilities, such as parse_real or
	  parse_integer.

	  No default implementation is provided for this template function. It
	  is meant to be specialized for every class for which we desire to
	  provide a parser. However, there is a suggested implementation,
	  described below.

	  This is a relatively straightforward change to propagate. In Draco,
	  only the Quadrature class is affected. The change is more extensive in
	  Capsaicin, but I have propagated the change and will check that in at
	  the same time I check in the Draco changes.

	  Second, I have eliminated Class_Parser.hh and Class_Parser.i.hh and
	  replaced them with Class_Parse_Table.hh. The old Class_Parser template
	  defined a class template that was basically a collection of static
	  members and tables, and this was not amenable either to reentrancy or
	  inheritance. The new Class_Parse_Table.hh does not define a class
	  parser class template at all, but provides a templatized parser function:

	  template<class Class_Parse_Table>
	  SP<typename Class_Parse_Table::Return_Class>
	  parse_class_from_table(Token_Stream &tokens);

	  The class Class_Parse_Table must provide certain member and data
	  functions, which are described in detail in Class_Parse_Table.hh, but
	  the developer is otherwise given considerable flexibility in writing
	  this class. By convention, the Class_Parse_Table class providing
	  parsing support for MyClass is named Class_Parse_Table<MyClass>. This
	  class template is declared but not defined in Class_Parse_Table.hh,
	  the idea being that developers will specialize it for each class for
	  which they want a parser.

	  To help developers do this, I have added template__parser.hh and
	  template__parser.cc to the draco/environment/templates directory. If
	  you are still using emacs for editing, you will find that the
	  Draco->New file ... menu now includes "New C++ class parser" as an
	  option, which generates MyClass__parser.hh and MyClass__parser.cc
	  defining Class_Parse_Table<MyClass>
	  for whatever MyClass you choose.

	  So how is parse_class_from_table intended to be used? As follows:

	  template<>
	  SP<Class> parse_class(Token_Stream &tokens)
	  {
	    return parse_class_from_table<Class_Parse_Table<Class> >(tokens);
	  }

	  This actually appears in a comment in Class_Parse_Table.hh, from which
	  you can conveniently cut it and paste it into your parser code,
	  filling in Class with your class name. So why not make this the
	  default definition? It turns out that if such a default definition is
	  visible, then every time you call parse_class<AnyClass>, the compiler
	  wants to see a definition of Class_Parse_Table<AnyClass>, which is
	  highly undesirable. We want the compiler to know that
	  parse_class<AnyClass> exists, but not try to instantiate it anywhere
	  but in AnyClass__parser.cc, where you decide if the above definition
	  is really what you want.

	quadrature:
	- Added a reverse parse function to complement parse function for QIM
	  enumeration.
	- Modified "interval" (1D) quadrature classes to compute and store on
	  construction their data for later access. The multi-D CL quadrature
	  classes can then create and query an interval quadrature to get the
	  polar ordinates, with all the associated DBCs that are involved in
	  doing so. Added an S2 double-Gauss quadrature test because it is
	  treated as a special case upon construction.

	* Details for defects and features can be found at https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	  (none)

	* New features:
	  Feature #435 Update to CMake 3.1 and consider implementing new features
	  Task    #436 Provide FindGSL.cmake for release within CMake
	  Task    #465 FindGSL: cleanup draco build system to make use of new FindGSL features
	  Feature #470 Implement new build system features (CMake 3.1)
	  Feature #472 Review target properties for transitive linking
	  Feature #485 CMake 3.1: Deprecate build option DRACO_ENABLE_CXX11
	  Feature #490 CAFS: Update CMakeAddFortranSubdirectory to respect CMAKE_BUILD_TYPE
	  Feature #495 CMake 3.2: Update build system to use new features

	* Known Defects:
	  Bug  # 59 cdi_eospac design flaw
 	  Task #370 Provide CMakeAddFortranSubdirectory modifications to CMake
	  Task #422 FindMPI.cmake doesn't find Intel MPI on Moonlight
	  Bug  #428 Qt5.3 fails to render correctly for X11 via PuTTy
	  Bug  #469 FindMPI.cmake can choose wrong libraries
	  Task #488 Re-establish a nightly Mac build.

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------

74023: kellyt
46190: kgbudge
10051: tme
5898: bta
4806: lowrie
3954: mcghee
3635: mwbuksas
3403: gaber
2358: warsa
942: rsqrd
875: wollaber
832: sethrj
667: kgt
579: jhchang
434: talbotp
350: 107638
191: furnish
169: clevelam
130: bergen
114: phenning
103: regress
92: pahrens
47: batcho
44: jdd
31: tmonster
24: swmosher
10: tkelley
2: wawiesel

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             410          11809          21436          63385
C/C++ Header                    334           7189          21221          19183
Lisp                             15           1878           2672          12363
CMake                           108           1842           4679           7488
Bourne Again Shell               18            390            687           1571
Bourne Shell                     14            250            635           1131
Python                            7            270            351            824
CSS                               1            113             37            395
C                                 4             45            113            238
Fortran 90                        3             45             80            172
C Shell                           2             31             29            169
DOS Batch                         3             47             37            100
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            926          23956          52067         107146
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    45 /    45 = 100%      60 /    72 =  83%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     193 /   252 =  76%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/ds++/                  321 /   325 =  98%     364 /   423 =  86%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/parser/                278 /   283 =  98%    1112 /  1423 =  78%
../source/src/quadrature/            202 /   208 =  97%     528 /   677 =  77%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/c4/                    177 /   186 =  95%     552 /   614 =  89%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/diagnostics/            14 /    19 =  73%      26 /    40 =  65%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
../source/src/diagnostics/qt/          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2071 /  2137 =  96%    4995 /  6300 =  79%


2015-03-13  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Require CMake/3.2.1 or later required.
	  - Use CMake provided FindGSL that first appears in the 3.2 release.
	  - I began using MS-MPI/5 and this version of MPI is only supported by the FindMPI.cmake macro provided with cmake/3.2 or
	    later.

2015-02-03  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_15_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/35.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_7_0,   https://rtt.lanl.gov/redmine/versions/33
	  - Capsaicin-4_4_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 14.0.4    OpenMPI-1.6.5
	  CT/CI              Intel 14.0.4    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	- 904 files changed, added or removed in 97 commits.
	- Begin support for Intel Knights Corner platforms with Intel 15 compilers and MPI (#476)
	- Provided a new python program that plots multigroup opacities loaded from IPCRESS files.
	- The smart pointer, rtt_dsxx::SP, class was refactored to work more similarly to C++11's shared_ptr.  This includes
	  checks to prevent up casting (#460).
	- Added a Planck weighted reciprocal opacity weighting functions to collapse multigroup and odfmg opacities.
	- An external interface was provided in quadrature for accessing quadrature ordinates and weights.

	* Details per package:

	Build System:
	- Provided support for linking to MKL as a replacement for LAPACK.
	- Updates implemented to provide support for CMake 3.1+ (#471).
	- Retired build system feature that detected available C++11 features. Begin using CMake 3.1's new CMAKE_CXX_KNOWN_FEATURES
	  global property (#370, #435).
	- Allow the compiler to be a compiler wrapper (e.g.: mpicxx, mpiifort).
	- Reworked vendor setup for MPI to simplify the build system (#466, #467, #468)
	- Begin support for Intel Knights Corner platforms with Intel 15 compilers and MPI (#474, #476, #477, #478, #486).
	- Updated how the build system detects OpenMP and sets compile flags (refs #479)
	- Modified the logic that enabled Fortran as a class 1 language for the generated project.  This registers Fortran as a
	  class 1 language only if the Generator is "Unix Makefies" (the default on Linux) and neither ENV{FC} or
	  CMAKE_Fortran_Compiler are set (the case for LLVM on Linux).
	- Moved some platform checks from src/CMakeLists.txt to CMakeLists.txt so that all platform checks are done in the same
	  block before the vendor's are setup.
	- Reworked some of the CMakeAddFortranSubdirectory features (#370).
	- Changed the imported target name for the gsl library to GSL::gsl (#436).
	- Added support for LLVM/clang on Linux platforms (#487).

	Developer Environment:
	- Retired many scripts from environment/bin.
	- Retired the environment/python and environment/share directories.
	- Begin relying on user_contrib module system found on HPC Yellow machines.
	- Vendors and modulefiles provided for the Knights Corner platform (#474, #476)
	- Changed the default compiler suite on Toss 2.2 machines to be Intel/15.0.090.

	Regression System:
	- Improved regression system for CCS-7's Darwin cluster.

	cdi:
	- Added a Planck weighted reciprocal opacity weighting functions to collapse multigroup and odfmg opacities.

	cdi_ipcress:
	- Provided a new python program that plots multigroup opacities loaded from IPCRESS files.

	ds++:
	- The smart pointer, rtt_dsxx::SP, class was refactored to work more similarly to C++11's shared_ptr.  This includes checks
	  to prevent up casting (#460).

	quadrature:
	- An external interface was provided in quadrature for accessing quadrature ordinates and weights.

	* Details for defects and features can be found at https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	  Bug #481 CMake 3.1 - FindCUDA is failing on ML
	  Bug #467 Draco regressions fail on Darwin after r7787
	  Bug #468 Draco fails to compile after reconfiguring (issue began with r7787)
	  Bug #466 Installed versions of draco incorrectly set MPIEXEC_POSTFLAGS.

	* New features:
	  Feature #471 Implement CMake 3.1's cxx11 feature detection feature.
	  Feature #473 Update Draco to build/run on knights corner (darwin)
	  Feature #486 KNC - Stand up regression on Darwin for Knights Corner builds
	  Feature #479 DBS cmake31 - Start using FindOpenMP.cmake
	  Feature #478 Knights corner - update unit testing to include ssh to mic node before running the test
	  Feature #482 Knights corner - demonstrate capsaicin build and test.
	  Feature #475 Provide vendors and modulefiles compatible with knights corner (Capsaicin)
	  Feature #474 Provide vendors and modulefiles compatible with knights corner (Draco)
	  Feature #477 Knights corner - FortranChecks has missing F90 libs
	  Feature #476 Knights corner - update build system to cross compile draco
	  Feature #456 Update ds++/SP to act more like C++11's shared_ptr
	  Feature #457 update to SP: branch draco repo for initial cut
	  Feature #458 update to SP: update Capsaicin to use new SP
	  Feature #459 update to SP: update Jayenne to use new SP
	  Feature #460 update to SP: merge branched code back to HEAD
	  Feature #387 Consider creating convenience library libdraco.so
	  Feature #135 Build on WIN32
	  Feature #487 Provide support for clang on Linux
	  Task    #448 Completed ASC Backup Exercise - Dec 2014.
	  Task    #438 Submit FindGSL.cmake to CMake developers list for review/inclusion
	  Task    #437 Obtain LA-CC for FindGSL.cmake

	* Known Defects:
	  Bug  # 59 cdi_eospac design flaw
 	  Task #370 Provide CMakeAddFortranSubdirectory modifications to CMake
	  Task #422 FindMPI.cmake doesn't find Intel MPI on Moonlight
	  Bug  #428 Qt5.3 fails to render correctly for X11 via PuTTy
	  Task #435 Update to CMake 3.1 and consider implementing new features.
	  Task #436 Provide FindGSL.cmake for release within CMake
	  Bug  #469 FindMPI.cmake can choose wrong libraries
	  Feature #485 CMake 3.1: Deprecate build option DRACO_ENABLE_CXX11
	  Task #488 Re-establish a nightly Mac build.

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------


Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             409          11858          21328          63780
C/C++ Header                    334           7291          21291          19652
Lisp                             14           1863           2652          12293
CMake                           111           1866           4708           7627
Bourne Again Shell               22            420            755           1631
Bourne Shell                     12            232            592           1037
Python                            7            255            339            797
CSS                               1            113             37            395
C Shell                           3             54            105            266
C                                 4             45            113            238
Fortran 90                        3             45             80            172
DOS Batch                         3             31             29             76
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            930          24120          52119         108091
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    45 /    45 = 100%      60 /    72 =  83%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/ds++/                  321 /   325 =  98%     364 /   421 =  86%
../source/src/parser/                277 /   281 =  98%    1112 /  1397 =  79%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            199 /   203 =  98%     527 /   674 =  78%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/c4/                    173 /   180 =  96%     518 /   574 =  90%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/diagnostics/            14 /    19 =  73%      26 /    40 =  65%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
../source/src/diagnostics/qt/          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2063 /  2124 =  97%    4958 /  6229 =  79%


2014-11-07  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_14_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/29.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_6_0,   https://rtt.lanl.gov/redmine/versions/30
	  - Capsaicin-4_3_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 14.0.4    OpenMPI-1.6.5
	  CT/CI              Intel 14.0.2    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	  - 275 files changed, added or removed in 91 commits.
	  - Begin support for Intel 15 compilers and Intel MPI.
	  - New versions of Trilinos, SuperLU_DIST and ParMetis are provided for all platforms.
	  - Support for DACS (roadrunner) retired.

	* Details per package:

	Build System:
	- Begin supporting the Intel 15.0.0 compiler suite.
	- Eliminate the special make target "failedtests."  Starting with CMake 3.0, ctest provides
	  this features with the built in option '--rerun-failed'.
	- For Linux builds, modify how the build system embeds RPATH information into installed
	  applications (e.g.: draco_info, anaheim, etc.)  Jim reported bad rpaths (refs #424) for
	  anaheim.  It looks like newer rpath handling algorithms in CMake 3.0+ were conflicting
	  with some hacks we had used to force setting rpaths in applications.
	- Provide a completely rewritten FindGSL.cmake macro that will be suitable for submitting to
	  Kitware to be distributed with CMake.

	Developer Environment:
	- Move the modulefiles directory out of the draco svn source tree and into:
	  Darwin: /projects/opt/draco/vendors/Modules
	  HPC   : /usr/projects/draco/vendors/Modules
	- Provide module files for new vendors on darwin (intel/15.0.0 + OpenMPI/1.8.2) inlcuding
	  LAPACK/3.4.1, ParMetis/4.0.3, SuperLU_DIST/3.3 and Trilinos/11.10.2.
	- Provide a module for loading eospac/v6.2.4.  This should be used in place of
	  eospac/v6.2.4beta.3.

	Regression System:
	- Restructure regression scripts to improve parallel builds/tests and to move portions of
	  the regression directories to NFS file space to eliminate 'touch' commands on parallel
	  scratch file systems.
	- Stand up regression testing on Darwin.
	- Master regression scripts were updated to allow any draco developer to kick off a
	  regression suite that reports to CDash.

	diagnostics:
	- Minor improvements to the sample Qt (gui) code.

	* Details for defects and features can be found at https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	  Bug  #416 Use of constexpr in rng/uniform.hpp causes warinings
	  Bug  #417 Examine c4/tstOMP performance with VTune on Darwin
	  Bug  #424 Rpath for installed libraries and binaries is broken on ML/LU.

	* New features:
	  Task #244 Eliminate individual clubimc, milagro and wedgehog builds in favor of a single
	            jayenne build.
	  Task #393 Explore options for GUI driver code.
	  Task #408 Move ML and CT regressions to NFS space.
	  Task #409 Change regression system to use parallel builds and parallel testing.
	  Task #411 Add support for Intel MPI
	  Task #412 Stand up regression on Darwin for Intel/15 + IntelMPI
	  Task #415 Update draco and vendors to allow building Capsaicin with Intel/15 and
	            OpenMPI/1.8.2 on Darwin.
	  Task #421 Provide ParMetis/4.0.3, SuperLU_DIST/3.3 and Trilinos/11.10.2 on supported
  	            platforms.
	  Task #423 Make it easier for developers to run the nightly regression scripts
	  Task #432 Prepare a FindGSL.cmake macro for inclusion in the next CMake release

	* Known Defects:
	  Bug  # 59 cdi_eospac design flaw
	  Task #297 Work with HPC/ptools teams to create a common user-contributed module feature
 	  Task #370 Provide CMakeAddFortranSubdirectory modifications to CMake
	  Bug  #428 Qt5.3 fails to render correctly for X11 via PuTTy
	  Task #422 FindMPI.cmake doesn't find Intel MPI on Moonlight
	  Task #435 Update to CMake 3.1 and consider implementing new features.
	  Task #436 Provide FindGSL.cmake for release within CMake
	  Task #437 Obtain LA-CC for FindGSL.cmake
	  Task #438 Submit FindGSL.cmake to CMake developers list for review/inclusion.

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
73593: kellyt
47634: kgbudge
10654: tme
5970: bta
5165: lowrie
4028: mcghee
3847: mwbuksas
3622: gaber
2184: warsa
967: wollaber
953: rsqrd
863: sethrj
435: talbotp
202: furnish
136: phenning
130: bergen

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             432          11821          21259          63752
C/C++ Header                    333           7308          21308          19632
Lisp                             14           1862           2651          12293
CMake                           112           1863           4777           7412
Bourne Again Shell               18            376            692           1398
Python                           19            800            948           1184
Bourne Shell                     14            250            647           1078
CSS                               1            113             37            395
C Shell                           3             49             96            257
C                                 4             45            113            238
Fortran 90                        3             45             80            172
DOS Batch                         3             30             21             82
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            963          24609          52719         108020
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/rng/                    57 /    57 = 100%      23 /    24 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    43 /    43 = 100%      49 /    58 =  84%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/ds++/                  321 /   324 =  99%     378 /   433 =  87%
../source/src/parser/                277 /   281 =  98%    1112 /  1397 =  79%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            196 /   200 =  98%     507 /   650 =  78%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/c4/                    173 /   180 =  96%     518 /   574 =  90%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/diagnostics/            14 /    19 =  73%      26 /    40 =  65%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
../source/src/diagnostics/qt/          0 /     5 =   0%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2058 /  2118 =  97%    4941 /  6203 =  79%

2014-08-18  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_13_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/26

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_5_0,   https://rtt.lanl.gov/redmine/versions/24
	  - Capsaicin-4_2_0, https://rtt.lanl.gov/redmine/projects/capsaicin

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 13.1.3    OpenMPI-1.6.5
	                     Intel 14.0.2    OpenMPI-1.6.5
	  CT/CI              Intel 13.1.3    Cray_MPICH2-7.0.1
	                     Intel 14.0.2    Cray_MPICH2-7.0.1
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	  - 195 files changed, added or removed in 55 commits.
	  - Require cmake/3.0.0+.
	  - Remove SpinLock, Sync and NodeInfo from c4.
	  - Eliminate inheritance from STL containers and remove use of
  	    deprecated std::binary_function.

	* Details per package:

	Build System:
	- Require the build system to use cmake/3.0 or later.
	- For xlc and xlc++ compilers, add the option -qfloat=nomaf.  This
	  disables the use of floating-point multiply-add instructions.
	  According to the IBM xlc 12.1 compiler manual, setting
	  -qfloat=maf (the default setting) should make floating point
	  calculations faster and more accurate.  However, turning this
	  feature on has the side effect of results not being exactly
	  equivalent to those produced by other compilers.  Negative zero
	  results may be produced.  Turning off the maf feature allows
	  Jayenne tests to produce the same results as those produced by
	  the same code compiled with gcc-4.7.2 and intel-14.0.2. This
	  change allows debug versions of Jayenne to produce the same
	  results on SQ for both gcc/4.7.2 and xlc 12.1. (#403)
	- Fix a long standing bug in the toggle_compiler_flag macro.  The
	  script was working fortuitously, but would have crashed if a
	  compiler flag was provided that used an unsafe symbol for
	  CMake's regex (e.g.: '+').  In fact, the macro did crash on SQ
	  with cmake/3.0.0 and resulted in this fix.

	Developer Environment:
	- Provide example of using USE_PROCMON in the sample
	  CMakeCache.txt.
	- Provide a default developer .cshrc for Sequoia.  Install dotkit
	  files (equivalent to LANL's module files) at
	  /usr/gapps/jayenne/vendors/Modules that are loaded to provide
	  access to numdiff, GSL, Random123 and compilers.
	- Make Intel/14.0.2 the default compiler for ML/LU and similar
	  machines.  This includes updating the default developer
	  environment and the regression scripts.

	c4:
	- Provide a pause function in c4's Timer.  This can be used to
	  pause execution for a set number of seconds.
	- eliminate the use of std:binary_function as this feature is
	  deprecated in C++11.  It is actually a case of over
	  specialization (#405)

	ds++:
	- Clean up unit tests that use Draco's UnitTest framework.  In
	  particular move the standard #defines into UnitTest.hh.
	- Add extern "C" signatures for is_big_endian and byte_swap_int,
	  byte_swap_int64_t, and byte_swap_double.  These are used in
	  Fortran-based Wedgehog tests. Add unit tests for these new
	  functions by calling them from both C and Fortran. Demonstrate
	  polymorphic Fortran interfaces wrapping polymorphic C++
	  functions via non-polymorphic extern "C" functions.

	mesh_element:
	- Add HEXAGON_6 element to support AMR meshs.

	parser:
	- Modify the design of 3 classes to eliminate inheritance from
	  standard C++ containers.  I changed the IS-A relationship to a
	  HAS-A (composition in place of inheritance).  This change was
	  motivated by a deep desire to eliminate compiler warnings.
	  However, after reading a bit on this topic it appears that the
	  current advice agrees with the compiler warning message.  That
	  is we should avoid inheriting from standard containers because
	  the STL containers do not have virtual destructors. In our case,
	  I believe we were careful to avoid cleanup issues in the derived
	  classes -- however, changing the design to composition is
	  encapsulated with these classes and does not impact other code.
	  Also, this design change reduces the chance that we might not
	  clean up adequately if these classes are extended in the
	  future.

	* Details for defects and features can be found at
	  https://rtt.lanl.gov/redmine/isues/#.

	* Corrected defects:
	  Bug  #315 Code coverage for Capsaicin is broken.
	  Task #396 Remove SpinLock, Sync and NodeInfo from c4
	  Bug  #405 Remove deprecated std::binary_function

	* New features:
	  Support #366 Complete ASC offsite backup.
	  Feature #388 Require cmake/3.0 or newer
	  Feature #392 Upgrade CDash to version 2.2
	  Feature #406 Eliminate inheritance from STL containers.

	* Known Defects:
	  Bug # 59 cdi_eospac design flaw
	  Bug #315 Code coverage for Capsaicin is broken
	  Bug #394 Intel 14.0.2 is unable to compile C++11 code if '-mmic' is specified.

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
73446: kellyt+kgt+107638
47913: kgbudge
10662: tme
 5970: bta
 5204: gaber
 5165: lowrie
 4028: mcghee
 3848: mwbuksas
 2184: warsa
  984: wollaber
  953: rsqrd
  863: sethrj
  435: talbotp
  202: furnish
  136: phenning
  130: bergen

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             441          12047          21680          64520
C/C++ Header                    338           7384          21492          19839
Lisp                             14           1862           2649          12291
CMake                           113           1860           4718           7345
Python                           27           1227           1369           2237
Bourne Again Shell               20            382            705           1329
Bourne Shell                     14            265            625           1083
CSS                               1            113             37            395
C Shell                           3             49             94            254
C                                 4             45            113            238
Fortran 90                        3             45             80            172
DOS Batch                         2             28             17             74
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            987          25354          53669         109904
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/rng/                    57 /    57 = 100%      22 /    22 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    43 /    43 = 100%      49 /    58 =  84%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/            14 /    14 = 100%      26 /    40 =  65%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/parser/                277 /   281 =  98%    1110 /  1391 =  79%
../source/src/ds++/                  319 /   324 =  98%     378 /   433 =  87%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            196 /   200 =  98%     509 /   657 =  77%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/c4/                    173 /   180 =  96%     518 /   574 =  90%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2056 /  2105 =  97%    4940 /  6186 =  79%


2014-07-18  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Repository HEAD tagged for draco-6_12_1.  A few build system
  	  changes were needed for our release on SQ and this tag captures
	  those changes.  This patch version is only used on SQ.

2014-06-19 Jae Chang <jhchang@lanl.gov>

	* Release draco-6_12_0. This is a minor Draco release.

	* This release was required by Capsaicin. It is linked to:
	  - Capsaicin-4_1_0.

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 13.1.3    OpenMPI-1.6.5
	  PI/ML/MP/MU/LU/TY  Intel 14.0.2    OpenMPI-1.7.4
	  CT/CI              Intel 14.0.2    MPICH2-5.6.4
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	- 42 files changed, added or removed in 19 commits.
	- Added PENTAGON_5 element for AMR meshes.

	* Details per package:

	Build System:
	- Updated mpirun flags used to execute c4's tstOMP unit tests to
	  support OpenMPI 1.7+.
	- Document new optional argument TARGET_NAMES that can be used
	  when calling cmake_add_fortran_subdirectory.
	- For Win32, embed more debug information in binaries when using
	  STATIC libraries.

	Developer Environment:
	- Made dired mode show file sizes in human readable form.
	- Added LaTeX Algorithm style files.

	c4:
	- Added checks for zero-length std::vector arguments for
	  portability.
	- Added preconditions for swap operations that the input and
	  output data array arguments must not reference the same object.

	cdi:
	- Improved documentation for Planck and Rosseland integral
	  functions to indicate that temperature and energy bounds must be
	  identical units.

	mesh_element:
	- Added PENTAGON_5 element, which is needed to represent a quad
	  element with a single hanging node in AMR meshes.

	parser:
	- Extended disabling of unit expressions to Expression::parse function.
	- Improved parse_quantity and parse_temperature functions for
	  handling unit expressions.

	* Known Defects:
	  Bug #315 Code coverage for Capsaicin is broken
	  Bug # 59 cdi_eospac design flaw

-------------
Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             439          12133          21657          64850
C/C++ Header                    339           7409          21515          19854
Lisp                             14           1862           2649          12291
CMake                           113           1845           4673           7249
Python                           27           1227           1369           2237
Bourne Again Shell               19            343            659           1249
Bourne Shell                     16            290            673           1163
CSS                               1            113             37            395
C Shell                           3             39             91            238
C                                 4             45            113            238
Fortran 90                        3             38             72            118
DOS Batch                         1             19             10             59
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            986          25410          53608         110068
--------------------------------------------------------------------------------


Code coverage
-------------
Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/rng/                    57 /    57 = 100%      22 /    22 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    43 /    43 = 100%      49 /    58 =  84%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/            10 /    10 = 100%      21 /    30 =  70%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/parser/                274 /   278 =  98%    1110 /  1391 =  79%
../source/src/ds++/                  315 /   320 =  98%     377 /   431 =  87%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            196 /   200 =  98%     509 /   657 =  77%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/mesh_element/           24 /    25 =  96%     165 /   219 =  75%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/c4/                    172 /   190 =  90%     518 /   594 =  87%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2044 /  2104 =  97%    4934 /  6194 =  79%


2014-05-13  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_11_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/22

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_4_0,   https://rtt.lanl.gov/redmine/versions/20
	  - Capsaicin-4_0_0

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 14.0.2    OpenMPI-1.7.4
	  CT/CI              Intel 14.0.2    MPICH2-5.6.4
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	  - 213 files changed, added or removed in 100 commits.
	  - Improved support for XCode, new support for Ninja
	  - Improved support for Fortran code from within XCode, Ninja and
	    MVS build tools.
	  - Initial support for OpenMPI-1.7.4

	* Details per package:

	Build System:
	- Updated the build system to be compatible with cmake/3.0.
	- Merged regression systems for clubimc, milagro and wedgehog into
	  a single jayenne system.

	Developer Environment:
	- Provide new bash functions that help developers use the new
	  transfer 2.0 system (the replacement for Mercury):
          o xfpush   - send a file from yellow to red
          o xfstatus - on the red, see if files are ready to pull
          o xfpull   - on the red, pull available files into the cwd.
	  Information about the transfer 2.0 system can be found at
	  http://transfer.lanl.gov. You will not be able to use this
	  system until SRLM issues you the SACFT authority.
	- For this release, some files were split into multiple files to
	  prevent 'overlinking.'
	- General improvements to support XCode.
	- Modify CMake's AddFortranSubdirectory feature and use this to
  	  include Fortran in Draco.  This allows build tools without
	  Fortran support to call out to Makefiles for generating
	  libraries from Fortran code.  This fixes issues with XCode,
          Ninja and MVSE.
	- Eliminate the use of the keyword 'register.'
	- Begin allowing the use of C++11 features static_assert and
	  decltype.

	c4:
	- Provide support for OpenMPI 1.7+ by providing new options for
	  mpirun to support various processor bindings.
	- Update c4 to support the use of threads with MPI.
	- Added additinal sanity checks and Design-by-Contract checks.

	parser:
	- Updated Class_Parser to take a 4th template parameter to identify
	  the parse table type.
	- Extend disabling of unit expressions to Expression::parse
	  function.
	- Improve parse_quantity and parse_temperature functions by
	  providing more options for handling unit expressions. These are
	  set using set_internal_unit_system, and
	  set_unit_expressions_are_required. The default behavior is
	  unchanged: A call to parse_quantity expects to see a unit
	  expression matching the expected units in the argument, and all
	  quantities are converted to SI. However,
	  set_internal_unit_system causes parse_quantity to convert
	  internally to a new unit
	  system. set_unit_expressions_are_required can turn off the
	  expectation that a unit expression will be seen: If there is a
	  unit expression, it must match the argument list and will be
	  converted to the internal unit system, but if there is no unit
	  expression, the quantity is assumed to already be in the
	  internal unit system. These options are intended primarily for
	  communication between computer codes and not as something that
	  should normally be used in human-written input decks, since the
	  mandatory unit expressions provide a lot of checking and do a
	  lot of documenting.

	quadrature:
	- Added additinal sanity checks and Design-by-Contract checks.

	viz/traits:
	- Merged the traits package into viz.

	* Corrected defects:
	  Bug #364 c4_tstApplicationUnitTest_arg[123] tests are failing
	  Bug #358 Remove 'register' keyword from code base
	  Bug #351 OpenMPI-1.7+: mpi_paffinity_alone option doesn't work
	           as before
	  Bug #348 Configure warnings with cmake/3.0.0 when lapack is
	           missing
	  Bug #339 Build system not compatible with CMake/3.0
	  Bug #336 Bug in unit conversion K->keV
	  Bug #304 Draco reports that Intel/14 does not support
	           initializer_lists

	* New features:
	  Feature #363 Extend CMakeAddFortranSubdirectory to support
   	               better dependencies tracking between targets and to
	               support Ninja and XCode
	  Feature #349 Provide RPATH support for MACOSX builds
	  Feature #342 Provide release using OpenMPI-1.7.4 on LU/ML
	  Feature #340 Merge traits package into viz
	  Feature #332 Demonstrate transfer/2

	* Known Defects:
	  Bug #315 Code coverage for Capsaicin is broken
	  Bug # 59 cdi_eospac design flaw

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
 73130: kellyt
 47240: kgbudge
 10832: tme
  5970: bta
  5234: gaber
  5166: lowrie
  4031: mcghee
  3867: mwbuksas
  2107: warsa
  1180: rsqrd
   987: wollaber
   863: sethrj

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             439          12052          21448          64339
C/C++ Header                    340           7453          21580          19936
Lisp                             14           1862           2649          12289
CMake                           113           1835           4632           7239
Python                           27           1227           1369           2237
Bourne Shell                     15            255            619           1059
Bourne Again Shell               14            178            384            853
CSS                               1            113             37            395
C Shell                           3             39             91            238
C                                 4             45            113            238
Fortran 90                        3             38             72            118
DOS Batch                         1             19             10             59
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            981          25163          53094         109127
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  80 /    80 = 100%      58 /    58 = 100%
../source/src/rng/                    57 /    57 = 100%      22 /    22 = 100%
../source/src/lapack_wrap/            12 /    12 = 100%       0 /     0
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/cdi/                    43 /    43 = 100%      49 /    58 =  84%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/mesh_element/           24 /    24 = 100%     165 /   213 =  77%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/viz/                    40 /    40 = 100%     131 /   174 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/            10 /    10 = 100%      21 /    30 =  70%
../source/src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/parser/                269 /   273 =  98%    1088 /  1363 =  79%
../source/src/ds++/                  315 /   320 =  98%     377 /   431 =  87%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            196 /   200 =  98%     509 /   657 =  77%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
../source/src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
../source/src/c4/                    172 /   190 =  90%     506 /   576 =  87%
../source/src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
../source/src/memory/                  4 /     6 =  66%       0 /     2 =   0%
--------------------------------  ---------------------  ---------------------
Total                               2039 /  2098 =  97%    4900 /  6142 =  79%


2014-02-24  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_10_1.  This is a patch Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_3_1,   https://rtt.lanl.gov/redmine/versions/16
	  - Capsaicin-3_8_1, https://rtt.lanl.gov/redmine/versions/21

	* Corrected Defects (rtt.lanl.gov/redmine/issues)
	  Bug #336 Bug in unit conversion k->keV.

2014-02-04  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_10_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/19

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_3_0,   https://rtt.lanl.gov/redmine/versions/16
	  - Capsaicin-3_8_0, https://rtt.lanl.gov/redmine/versions/21

	* Platforms:
	  PI/ML/MP/MU/LU/TY  Intel 13.1.3    OpenMPI-1.6.3
	                     Intel 14.0.1    OpenMPI-1.6.3
	  CT/CI              Intel 13.1.3    MPICH2-5.6.4
	  SQ                 XLC   12.1      MPICH2-1.4

	* Summary of changes:
	  - 774 files changed, added or removed in 35 commits.
	  - In rng, replaced LFG with Counter_RNG.
	  - Increased functionality of memory diagnostics.

	* Details per package:

	Build System:
	* Eliminated versioning of the installed config directory.

	Developer Environment:
	* Provided improved bash support for ML, PI, MU, MP, LU, and TY.
	* Provided scripts for mirroring the repository to the red
	  network.
	* For coverage regression testing, other projects will now link
	  against the Debug (not Coverage) build of Draco.

	memory:
	  - Increase functionality of memory diagnostics options.

	rng:
	  - In rng, replaced LFG with Counter_RNG.
	  - Remove RNG_NR logic from rng.
            LFG used different generator parameters depending on whether
	    it was built in reproducible or non-reproducible mode.
	    Counter_RNG doesn't distinguish between reproducible and
	    non-reproducible builds, so setting RNG_NR in Draco (and
	    installing two side-by-side R/NR versions of Draco for every
	    release configuration) is no longer necessary.

	* Corrected defects:
	  Bug #314 Redmine SVN integration broken after repo upgrade to
	           version 1.8.
	  Bug #308 rng/uniform.hpp triggers error under Intel 14.
	  Bug #307 D690 - Ensure code builds and passes on ...
	  Bug #306 Release Draco-6_9_0.
	  Bug #240 Intel 13 generates incorrect code in rare cases.

	* New features:
	  (none)

	* Known Defects:
	  Bug  #59 cdi_eospac design flaw
	  Bug #304 Draco reports taht Intel/14 does not support
	           initializer_lists.
	  Bug #315 Code coverage for Capsaicin is broken
	  Feature #277 Convert fpe_trap into a singleton.
	  Feature #297 Work with HPC/ptools teams to create a common
	           user-contributed module feature.
	  Feature #227: refactor cdi_analytic opacities

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
   72577: kellyt,kgt,107638
   46174: kgbudge
   11366: tme
   5971: bta
   5457: lowrie
   5209: gaber
   4042: mcghee
   3943: mwbuksas
   2057: warsa
   1192: rsqrd
   896: wollaber
   863: sethrj

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             433          11945          21224          63769
C/C++ Header                    347           7607          21669          20091
Lisp                             14           1857           2651          12226
CMake                           109           1816           4744           6914
Python                           27           1227           1369           2237
Bourne Shell                     13            217            503            920
Bourne Again Shell               17            199            447            907
C                                 5            212            403            683
CSS                               1            113             37            395
C Shell                           3             42            103            244
Fortran 90                        3             40             77            118
DOS Batch                         1             19             10             59
HTML                              2              8             15             48
CUDA                              3             17             61             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            980          25341          53327         108690
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                   Function Coverage           C/D Coverage
----------------------  ---------------------  ---------------------
src/units/                  82 /    82 = 100%      58 /    58 = 100%
src/traits/                 16 /    16 = 100%       0 /     0
src/rng/                    57 /    57 = 100%      22 /    22 = 100%
src/lapack_wrap/            12 /    12 = 100%       0 /     0
src/fit/                     1 /     1 = 100%      15 /    16 =  93%
src/ode/                     5 /     5 = 100%      29 /    32 =  90%
src/min/                     9 /     9 = 100%     137 /   154 =  88%
src/linear/                 16 /    16 = 100%     334 /   392 =  85%
src/cdi/                    43 /    43 = 100%      49 /    58 =  84%
src/roots/                   8 /     8 = 100%     259 /   312 =  83%
src/mesh_element/           24 /    24 = 100%     165 /   213 =  77%
src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
src/viz/                    24 /    24 = 100%     131 /   174 =  75%
src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
src/diagnostics/            10 /    10 = 100%      21 /    30 =  70%
src/cdi_eospac/             52 /    52 = 100%      67 /   132 =  50%
src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
src/parser/                268 /   271 =  98%    1083 /  1353 =  80%
src/ds++/                  315 /   320 =  98%     381 /   433 =  87%
src/timestep/               62 /    63 =  98%     104 /   178 =  58%
src/quadrature/            196 /   200 =  98%     501 /   637 =  78%
src/c4/                    182 /   189 =  96%     516 /   570 =  90%
src/norms/                  25 /    26 =  96%      21 /    34 =  61%
src/plot2D/                 22 /    23 =  95%      46 /    74 =  62%
src/special_functions/      30 /    32 =  93%     192 /   216 =  88%
src/cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
src/memory/                  4 /     6 =  66%       0 /     2 =   0%
----------------------  ---------------------  ---------------------
Total                     2050 /  2097 =  97%    4901 /  6108 =  80%


2014-01-09  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_9_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/17

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Capsaicin-3_7_0,  https://rtt.lanl.gov/redmine/versions/18

	* Platforms:
	  PI/ML/TY/LU    Intel 13.1.3    OpenMPI-1.6.3
	  CT/CI          Intel 13.1.3    MPICH2-5.6.4
	  SQ             XLC   12.1      MPICH2-1.4

	* Summary of changes:
	  - 188 files changed, added or removed in 84 commits.
	  - Update physical constants to match NIST 2010 CODATA report.
	  - Provide (and require) Random123/1.08 for all platforms.
	  - Improved support for building/running on SQ.

	* Details per package:

	Build System:
	  - 'autodoc' make target was updated to be a bit more robust.
	  - Configuration files for IBM XL compilers were updated with
 	    appropriate flags.
	  - For Intel compilers, enable optimization
	    '-fp-model fast -fp-speculation fast' for Release builds.
	  - Add C++11 tests for
	    o delegating constructors
	    o non static data member initialization
	    o raw string literals

	Developer Environment:
	  - gsl and lapack modules updated for CT/CI.
	  - Cleaned up the configuration file for cloc.  New
 	    categorization of file types will change LOC reported for some
	    file types.
	  - Emacs CEDET/ECB default configuration reworked.  This requires
	    emacs >= version 24.
	    ;; CEDET
	    ;; Generate tag files for Fortran: 'gtags --gtagslabel=ctags'
            (defvar file-at-root-level-draco "~/.draco_ede")
            (defvar file-at-root-level-eap "~/cassio/.eap_ede")
            (draco-start-ecb)
            o See https://rtt.lanl.gov/redmine/projects/draco/wiki/Emacs.
	  - Provide (and require) Random123/1.08 for all platforms.
	  - Change the default svn client to version 1.8.5.  The
	    repositories remain at 1.6.

	c4:
	  - Modify PAPI build options on Global_Timer to work with ccscs9
	    and similar platforms.

	cdi_analytic:
	  - A bug in tstAnalytic_Odfmg_Opacity.cc was discovered and
	    fixed.  The band boundaries were previously invalid
	    (non-monotoic).

	diagnostics:
	  - draco_info now provides a report of all supported C++11 features

	ds++:
	  - Moved the Jayenne function linear_interpolate to DracoMath.
	  - Moved code that generates a stack trace into its own file.

	memory:
	  - Added the ability to breakpoint on large memory allocations.
	  - Enhance memory diagnostics to include maximum individual
	    allocation size.
	  - Provide a specialized memory handler that will print a stack
	    trace if new is unable to provide the requested amount of
	    memory. This can be activated in code by adding
	    'std::set_new_handler(rtt_memory::out_of_memory_handler);'
	    to the C++ main() function.

	units:
	  - Update physical constants to match NIST 2010 CODATA report.

	* Corrected defects:
	  Bug #282 Autodoc does not appaer to be publishing correctly.
	  Bug #308 rng/uniform.hpp triggers error under Intel/14.

	* New features:
	  Feature #285 Consider moving Intel and GCC to a "fast math" model.
	  Feature #303 Provide a stacktrace generator.
	  Task #278 Setup radtran/ on dedicated file space.
	  Task #295 Provide unit test for Global_Timer's 'is_active'
	            member function.
	  Task #296 Update Random123 to version 1.08.
	  Task #305 Install svn 1.8+ on CCS systems and git 1.8+ on CCS
	            and HPC systems.
	  Task #307 Ensure code builds and passes on SQ.
	  Task #309 Eliminate version values on directory name for
	            installed config directory.

	* Known Defect:
          Bug #240: Intel 13 generates incorrect code in rare cases
	            involving compile-time constants larger than
	            0x7fffffff
	  Bug  #59: cdi_eospac design flaw
	  Feature #227: refactor cdi_analytic opacities
	  Feature #135: Build on WIN32

	* Statistics: (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
72027: kellyt
46314: kgbudge
11522: tme
 6132: bta
 5524: lowrie
 4450: mwbuksas
 4229: gaber
 4043: mcghee
 2070: warsa
 1213: rsqrd
  994: wollaber
  863: sethrj

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             434          11943          21151          63706
C/C++ Header                    347           7603          21519          20129
Lisp                             14           1857           2651          12226
CMake                           109           1811           4738           6868
Python                           27           1226           1360           2237
Bourne Again Shell               17            199            447            899
Bourne Shell                     11            193            452            837
C                                 5            212            403            683
CSS                               1            113             37            395
C Shell                           3             42            103            244
Fortran 90                        3             38             68            118
DOS Batch                         1             19             10             59
HTML                              2              8             15             48
CUDA                              3             14             31             40
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                            979          25300          52999         108528
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
              units/                  82 /    82 = 100%      58 /    58 = 100%
              traits/                 16 /    16 = 100%       0 /     0
              special_functions/      32 /    32 = 100%     206 /   216 =  95%
              fit/                     1 /     1 = 100%      15 /    16 =  93%
              ode/                     5 /     5 = 100%      29 /    32 =  90%
              min/                     9 /     9 = 100%     137 /   154 =  88%
              linear/                 16 /    16 = 100%     334 /   392 =  85%
              cdi/                    43 /    43 = 100%      49 /    58 =  84%
              roots/                   8 /     8 = 100%     259 /   312 =  83%
              mesh_element/           24 /    24 = 100%     165 /   213 =  77%
              cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
              viz/                    24 /    24 = 100%     131 /   174 =  75%
              meshReaders/            15 /    15 = 100%     127 /   172 =  73%
              diagnostics/            10 /    10 = 100%      21 /    30 =  70%
              FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
              RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
              parser/                268 /   271 =  98%    1083 /  1353 =  80%
              timestep/               62 /    63 =  98%     104 /   178 =  58%
              ds++/                  314 /   320 =  98%     383 /   433 =  88%
              cdi_eospac/             52 /    53 =  98%      62 /   132 =  46%
              quadrature/            196 /   200 =  98%     501 /   637 =  78%
              c4/                    182 /   189 =  96%     516 /   570 =  90%
              norms/                  25 /    26 =  96%      21 /    34 =  61%
              rng/                    90 /    94 =  95%      67 /    72 =  93%
              cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
              plot2D/                 22 /    29 =  75%      46 /    76 =  60%
              lapack_wrap/            12 /    16 =  75%       0 /     0
              memory/                  3 /     5 =  60%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2083 /  2144 =  97%    4957 /  6158 =  80%

* C/D Coverage is condition/decision coverage
  http://www.bullseye.com/coverage.html#basic_conditionDecision

2013-10-29  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_8_0.  This is a minor Draco release.
	  https://rtt.lanl.gov/redmine/versions/13

	* This release was required by Jayenne and Capsaicin.  It is
	  linked to:
	  - Jayenne-7_2_0,    https://rtt.lanl.gov/redmine/versions/12
	  - Capsaicin-3_6_0,  https://rtt.lanl.gov/redmine/versions/15

	* Platforms:
	  PI/ML/TY/LU    Intel 13.1.3    OpenMPI-1.6.3
	  CT/CI          Intel 13.1.3    MPICH2-5.6.4
	  SQ             XLC 12.1

	* Summary of changes:
	  - 244 files changed, added or removed in 110 commits.
	  - Dev environment updated significantly.
	  - New GQF quadrature now available.
	  - Code updated to avoid Floating Point Exceptions in a few
	    corner cases.
	  - Added a stimulated emission analytic absorption opacity
	    capability.
	  - Signficiant update to the fpe_trap feature.
	  - A new component, memory, was added.
	  - fpe_trap was integrated into the UnitTest framework so that at
	    least one nightly regression checks for floating point
	    exceptions.
	  - Many deprecated features found in ds++ were retired from
	    Draco.
	  - Being allowing very limited use of C++11 feature (auto, rvalue
	    references, long long).

	* Details per package:

	Build System:
	  - Significant improvements were implemented to allow building
	    and testing with Visual Studio 2012.  Nightly regressions are
	    now working for this platform/toolset.

	Developer Environment:
	  - The script metric_report was producing LOC data that was not
	    consistent with values reported on CDash (#261).  The script
	    was not using the Draco custom language features.  This was
	    corrected.
	  - After the update to REHL-6.4 on CCS LAN machines,
	    - Update the default set of modules to those that work with
	      RHEL-6.4.
	    - Begin using gcc/4.8.1, gsl/1.16 and emacs/24.2.
	    - Updated valgrind suppressions.
	 - Retired HPC modules
	    - eospac/v6.2.3-intel, eospac/v6.2.4beta.1-cielito,
	      eospac/v6.2.4beta.1-moonlight
	    - gsl/1.14-gcc, gsl/1.14-intel, gsl/1.14-pgi
	    - lapack/3.4.0-gcc, lapack/3.4.0-intel, lapack/3.4.0-pgi,
	      lapack/3.4.1-intel
	    - ParMetis/3.1
	    - SuperLU_DIST/2.3, SuperLU_DIST/2.4, SuperLU_DIST/2.4-intel
	    - trilinos/10.10.2, trilinos/10.10.2-intel
	    - numdiff/5.2.1
	  - Provide new vendors/moduls on HPC:
	    - SuperLU_DIST/3.3
	    - trilinos/10.10.2-intel, trilinos/11.4.1-openmpi163
	  - Random123 is now a required vendor for Draco.
	  - Change PGI regression to use pgi/13.7.

	quadrature:
	  - Add a GQF option to the quadrature interpolation modules. This
	    is identical to Morel Galerkin quadrature, but the moments are
	    not pruned. Thus the strict one-to-one mapping of ordinates to
	    moments and back is preserved. In other words, there are
	    exactly as many moments as ordinates.  This option is needed
	    to support experiments with McClarren's Sn ray filter.

	cdi:
	  - Update collapseMultigroupOpacitiesRosseland and
	    collapseOdfmgOpacitiesRosseland member functions to provide
	    specialized treatment for 2 cases to prevent potential
	    division by zero.
            1. If all opacity(ig,ib) == 0, then return sig_R = 0.
            2. If the group structure is not well aligned with the
	       Rosseland Spectrum (i.e.: dB/dT(ig) is very small), then
	       return sig_R = sig(ig=0).
            Credit goes to Allan and Kent for helping me develop
	    algorithms for these corner cases. refs #270

	cdi_analytic:
	  - Added a stimulated emission analytic absorption opacity. Added
	    the hooks to integrate over energy groups (for now just
	    evaluating at the geometic midpoint of the group).

	ds++:
	  - Many deprecated or unused features were retired:
	    o Array, ArraySizes, RefArray
	    o DBC_Array.hh, DBC_Ptr.hh
	    o RCF.hh
	    o Safe_Ptr.hh, Thin_Ptr.hh, Vector_Lite
	  - Many small math features were merged into DracoMath.hh:
	    o abs.hh
	    o conj.hh
	    o cube.hh
	    o dim.hh
	    o pythag.hh
	    o sign.hh
	    o sign.hh
	    o square.hh
	  - value.hh was merged into Field_Traits.hh
	  - swap.hh merged into Endian.hh.
	  - Move imc/Bonus_pack.hh features into Packing_Utils.hh.
	  - Use language standard equivalents in place of isFinite
	    features.
	  - When available use std::array in place of ArrayWrap.hh.
	  - unit tests updated to match above changes.
	  - fpe_trap merged into ds++.
	  - Configure time value for DRACO_DIAGNOSTICS now lives in
	    ds++/config.h instead of diagnostics/config.h.  This allows
	    the value of DRACO_DIAGNOSTICS to regulate diagnostic features
	    from within the UnitTest framework. #266

	fpe_trap:
	  - Turn fpe_trap off if the selected compiler is PGI.  I can't
	    figure out how to make PGI work with this GNU extension. Since
	    our primary compiler is Intel (and it does work with
	    fpe_trap), I don't want to spend any more time looking into
	    this issue. #268
	  - Convert the stand alone enable_fpe function features into a
	    class called fpe_trap that has member functions:
	    - constructor(bool) argument allows disabling the use of ds++
	                        Insist.
	    - enable()          funcitonally equivalent to the old
	                        enable_fpe
            - disable()         where platforms allow, turn of fpe traps.
            - active()          return bool to indicate if fpe traps are
	                        turned on.
	  - Platform implementations were updated to follow the new
	    design, but not all platform code was tested because I don't
	    have access to many of these platforms (darwin_ppc,
	    darwin_intel, osf_alpha).
	  - The new design improves extensibility of the fpe trap feature.
	    In the future, we might consider adding a member function that
	    selects the action when fpe are caught (e.g.: stack trace
	    vs. ds++ Insist). I am also in favor of converting fpe_trap
	    into a singleton. #271
	  - fpe_trap was moved to ds++.
	  - fpe_trap was integrated into UnitTest.
	  - The fep_trap error message on Linux/x86 now includes a stack
	    trace.

	memory:
	  - This new package is turned on with DRACO_DIAGNOSTIC's 2nd
	    bit.  It keeps track of all new/allocated memory and can
	    print a summary report.

	* Corrected defects:
	  Bug #261 metric_report has data inconsistent with CDash reports.
	  Bug #269 Installed binaries do not have correct RPATH.
	  Bug #279 Cuda based regressions fail on ML after 10/23/2013 DST

	* New features:
	  Feature #266: Improve usefulness of fpe_trap
	  Feature #267: Modify fpe_trap so that it works with Intel
	                compilers on Linux
	  Feature #268: Allow fpe_trap to work with PGI compilers on Linux
	  Feature #271: Convert fpe_trap into a class
	  Feature #272: Attempt to run at least some Draco tests with
	                fpe_trap turned on for DRACO_DIAGNOSTICS=7
	  Task #275: Cleanup/Consolidate ds++ package

	* Known Defects:
          Bug #240: Intel 13 generates incorrect code in rare cases
	            involving compile-time constants larger than
	            0x7fffffff
	  Bug  #59: cdi_eospac design flaw
	  Feature #227: refactor cdi_analytic opacities
	  Feature #135: Build on WIN32

	* Statistics (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
72027: kellyt
46166: kgbudge
11568: tme
6133: bta
5536: lowrie
4590: gaber
4456: mwbuksas
4043: mcghee
2079: warsa
1213: rsqrd
914: sethrj
898: wollaber

Lines of code
-------------

* Note: previously, the metrics_report.sh script did not report the values
        for text files correctly.  This change accounts for the extra 20k
	LOC compared to draco-6_7_0.

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             401          11284          18021          63388
C/C++ Header                    340           7548          21235          19993
Text                             81           2323           1947          19876
Lisp                             13           1810           2543          11960
Perl                              2           1351           1562           8775
CMake                           106           1827           4903           6882
Visual Basic                     13            202              0           5482
Python                           26           1210           1343           2197
Bourne Shell                     11            193            452            837
C                                 6            220            430            694
Bourne Again Shell                4             99            206            564
CSS                               1            113             37            395
C Shell                           3             42            103            244
Fortran 90                        3             38             68            118
CUDA                              4             28             57             65
DOS Batch                         1             19             10             59
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                           1017          28329          52931         141568
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
              units/                  82 /    82 = 100%      58 /    58 = 100%
              traits/                 16 /    16 = 100%       0 /     0
              memory/                  3 /     3 = 100%       0 /     0
              special_functions/      32 /    32 = 100%     206 /   216 =  95%
              fit/                     1 /     1 = 100%      15 /    16 =  93%
              ode/                     5 /     5 = 100%      29 /    32 =  90%
              min/                     9 /     9 = 100%     137 /   154 =  88%
              linear/                 16 /    16 = 100%     334 /   392 =  85%
              cdi/                    43 /    43 = 100%      49 /    58 =  84%
              roots/                   8 /     8 = 100%     259 /   312 =  83%
              diagnostics/            10 /    10 = 100%      11 /    14 =  78%
              mesh_element/           24 /    24 = 100%     165 /   213 =  77%
              cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
              meshReaders/            15 /    15 = 100%     127 /   172 =  73%
              FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
              RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
              parser/                268 /   271 =  98%    1083 /  1353 =  80%
              timestep/               62 /    63 =  98%     104 /   178 =  58%
              cdi_eospac/             52 /    53 =  98%      62 /   132 =  46%
              ds++/                  311 /   317 =  98%     382 /   427 =  89%
              quadrature/            196 /   200 =  98%     501 /   637 =  78%
              norms/                  25 /    26 =  96%      21 /    34 =  61%
              viz/                    24 /    25 =  96%     131 /   174 =  75%
              rng/                    87 /    91 =  95%      65 /    70 =  92%
              c4/                    180 /   190 =  94%     513 /   582 =  88%
              cdi_analytic/          146 /   165 =  88%     172 /   224 =  76%
              plot2D/                 22 /    29 =  75%      46 /    76 =  60%
              lapack_wrap/            12 /    16 =  75%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2075 /  2138 =  97%    4941 /  6146 =  80%

* C/D Coverage is condition/decision coverage
  http://www.bullseye.com/coverage.html#basic_conditionDecision

2013-08-19  Kelly (KT) Thompson  <kgt@lanl.gov>

	* Release draco-6_7_0.  This is a minor Draco release.
	  https://rtt.lanl.gov.lanl.gov/redmine/versions/6

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - Jayenne-7_1_0,    https://rtt.lanl.gov/redmine/versions/9
	  - Capsaicin-3_4_0,  https://rtt.lanl.gov/redmine/versions/8

	* Platforms:
	  PI/ML/TY/LU    Intel 13.1.0    OpenMPI-1.6.3
	  CT/CI          Intel 13.1.3    MPICH2-5.6.4

	* Summary of changes:
	  - 520 files changed, added or removed in 139 commits.
	  - Replace the use of deprecated C4:: namespace with rtt_c4::. (#146)
	  - Most of Draco can now be built with Microsoft Visual Studio.
	    See
	    https://rtt.lanl.gov/redmine/projects/draco/wiki/Windows_with_Visual_Studio_Express
	    for instructions.  All core components build under MSVC except
	    one test in parser and the quadrature package.
	  - Provided support/release for BG/Q.
	  - Document directory moved from svn::draco/trunk/doc to
	    svn::draco/dracodoc.

	* Details per package:

	Build System:
	  - Continue retiring Roadrunner specific code.
	  - Continue adding support for MSVC 2012 development
	    environment.  All packages have been instrumented with the
	    DLL_PUBLIC macro.  Operating System calls have been wrapped
	    with Unix or Windows specific versions.
	  - Fixed a bug that prevented the correct (installation location)
	    RPATH from being stored in binaries (#145).

	Developer Environment:
	  - Defaults updated:
	    cmake/2.8.10
	    intel/13.1
	    openmpi/1.6.3
	    eospac/v6.2.4beta.3
	    random123/1.07
	    numdiff/5.6.1
	    emacs/24.2
	    gcc/4.8.1
	    gsl/1.16
	  - Retired vendors/modules:
	    lapack/atlas-*
	  - Enable use of ECB (Cedet) in Emacs.
	  - Added F11 keybinding for ack in Emacs.
	  - Begin using EOSPAC version 6.2.4beta.3 because it provides the
	    -fPIC option.
	  - Reworked the regression system to be more modular and to allow
	    more simultaneous builds.  The downside is additional
	    complexity.
	  - Provided support/release for BG/Q.
	  - CDash, Autodoc and Redmine services moved from coder.lanl.gov
	    to rtt.lanl.gov.
	  - Added a new build target 'failedtests' that will rebuild the
	    project and then run only the tests that failed during the
	    most recent ctest run.

	Documentation:
	  - The documentation directory was moved away from the source svn
	    repository into its own location at svn::draco/dracodoc.  This
	    is parallel to svn::draco/trunk.

	c4:
	  - Replace the use of deprecated C4:: namespace with rtt_c4::.
	  - Add a simple Global_Timer class adapted for timing sections of
	    code that may be called from multiple clients.

	cdi:
	  - New opacity group collapse functions
	    'collapseMultigroupOpacitiesPlanck' and
	    'collapseMultigroupOpacitiesRosseland' were added (#94)

	cdi_analytic:
	  - Add further options to pseudo line opacity models: Fuzz option
	    for large numer of unresolvable lines and option for regular
	    spacing of absorption edges.
	  - Further extensions to pseudo line models. These add options to
	    allow absorption edges to be regularly spaced and to add a
	    fully unresolved "line" opacity.1

	diagnostics:
	  - A new Procmon capability was added.  The macro PROCMON_REPORT(
	    string ) will generate a single line of diagnostic memory use
	    information if USE_PROCMON was set during configuration.

	ds++:
	  - Eliminate lib_dsxx_test and update tests to use ScalarUnitTest
	    framework.

	quadrature:
	  - Adding a product Chebyshev-Legendre quadrature that takes two
	    input specifications for the quadrature order, the first one
	    being the Sn order, or the number of Guass-Legendre points
	    oriented along the polar axis, from 0 to Pi, the second being
	    the number of points oriented along the azimuthal axis.

	* Corrected defects:
	  #226 DBS should detect availability and provide CPP definition
	       for C99 restrict keyword
	  #149 Compiling with PGI fails
	  #145 Installed binaries have incorrect RPATH links
	  #109 Release builds with Intel 13 trigger failures in LFG and Counter_RNG

	* New features:
	  #203 Final move of all services from coder to rtt
	  #202 Autodoc: Provide rtt.lanl.gov/autodoc
	  #201 Redmine: Provide mathjax plugin
	  #200 Redmine: Cannot see svn repository
	  #199 Redmine: Configure email delivery for rtt
	  #198 Test ability to restore CDash and Redmine data to new
	       server
	  #197 Move web services (Redmine, CDash, Autodoc) to new server
	  #190 Darwin: Draco build system find MPI, but sets DRACO_C4 to SCALAR
	  #189 Darwin: Change to compiler env required module files to be updated
	  #166 Release on Sequoia
	  #153 Use OpenMPI's --bind-to-none option instead of --mca
	       paffinity for OpenMPI version > 1.3
	  #139 Nightly autodoc regression not picking up .dcc files
	  # 94 CDI should provide a way to collapse MG opacity data to gray

	* Known Defects:

	  # 227 refactor cdi_analytic opacities
	  # 135 Build on WIN32
	  # 59 cdi_eospac design flaw

	* Statistics (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
72335: kellyt
47657: kgbudge
12228: tme
6824: lowrie
6131: bta
4709: gaber
4468: mwbuksas
4042: mcghee
2186: phenning
1744: warsa
1212: rsqrd
950: wollaber
917: sethrj
436: talbotp
387: furnish
325: pahrens
131: bergen
113: jhchang

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             447          12337          21309          65195
C/C++ Header                    362           8208          22920          21744
Lisp                             13           1810           2543          11960
Perl                              2           1294           1009           8330
CMake                           110           1851           4950           6786
Python                           26           1210           1343           2197
Bourne Shell                     11            215            588            896
C                                15            296            636            895
Bourne Again Shell                4             98            207            561
CSS                               1            113             37            395
C Shell                           3             41            101            229
Fortran 90                        3             38             68            118
HTML                              2              8             15             48
make                              2             22             14             39
--------------------------------------------------------------------------------
SUM:                           1001          27541          55740         119393
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
              units/                  82 /    82 = 100%      58 /    58 = 100%
              traits/                 16 /    16 = 100%       0 /     0
              special_functions/      31 /    31 = 100%     208 /   218 =  95%
              fit/                     1 /     1 = 100%      15 /    16 =  93%
              cdi/                    43 /    43 = 100%      40 /    44 =  90%
              ode/                     5 /     5 = 100%      29 /    32 =  90%
              min/                     9 /     9 = 100%     137 /   154 =  88%
              linear/                 16 /    16 = 100%     334 /   392 =  85%
              roots/                   8 /     8 = 100%     259 /   312 =  83%
              diagnostics/            10 /    10 = 100%      11 /    14 =  78%
              mesh_element/           24 /    24 = 100%     165 /   213 =  77%
              cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
              meshReaders/            15 /    15 = 100%     127 /   172 =  73%
              FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
              fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
              ds++/                  482 /   483 =  99%     477 /   516 =  92%
              RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
              parser/                268 /   271 =  98%    1083 /  1353 =  80%
              quadrature/            195 /   198 =  98%     499 /   630 =  79%
              timestep/               62 /    63 =  98%     104 /   178 =  58%
              cdi_eospac/             52 /    53 =  98%      62 /   132 =  46%
              norms/                  25 /    26 =  96%      21 /    34 =  61%
              viz/                    24 /    25 =  96%     131 /   174 =  75%
              rng/                    87 /    91 =  95%      65 /    70 =  92%
              c4/                    180 /   190 =  94%     513 /   582 =  88%
              cdi_analytic/          144 /   155 =  92%     171 /   222 =  77%
              plot2D/                 22 /    29 =  75%      46 /    76 =  60%
              lapack_wrap/            12 /    16 =  75%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2241 /  2290 =  97%    5030 /  6225 =  80%

* C/D Coverage is condition/decision coverage
  http://www.bullseye.com/coverage.html#basic_conditionDecision

2013-03-18  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_6_0.  This is a minor Draco release.
	  http://coder.lanl.gov/redmine/versions/10

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - Jayenne-7_0_0,    http://coder/redmine/versions/5
	  - Capsaicin-3_4_0

	* Platforms:
	  PI/ML/TY/LU    Intel 12.1.5    OpenMPI-1.4.5
	                 Intel 13.1      OpenMPI-1.6.3
	  CT/CI          Intel 13.0.1    MPICH2-5.4.2

	* Summary of changes:
	  - 371 files changed, added or removed in 190 commits.
	  - Began using the C99 standard by default.
	  - Provided a CMake-based version of ApplicationUnitTest.
	  - Regression system refactored for improved modularity,
	    extensibility and concurrent operation.
	  - Quadrature component completely rewritten.
	  - Initial support for IBM BluGene provided.
	  - Support for user-defined-types added in c4.
	  - New inverse-table lookups getElectronTemperature and
	    getIonTemperature provided by cdi_eospac.
	  - Support for Random123 enhanced.

	* Details per package:

	Build System:
	  - Added preliminary support for IBM XL C++ and Fortran
	    compilers.
	  - When C99 is enabled, also define _XOPEN_SOURCE=600.
	  - Define _POSIX_C_SOURCE=200112, to enable POSIX.1-2001
	    features. This grew out of an attempt to add -std=c99 to
	    CFLAGS.  Understandably (in hindsight), gcc defines
	    _POSIX_C_SOURCE by default only when GNU dialects of C
	    standards are enabled, which means that constants like
	    HOST_NAME_MAX are not available when building with -std=c99,
	    unless some level of POSIX functionality is specifically
	    requested via the _POSIX_C_SOURCE feature test macro.  See the
	    feature_test_macros(7) man page and /usr/include/features.h
	    for more options.
	  - Created a up a prototype cmake-based ApplicationUnitTest
	    feature for the build system.  The IBM Blue Gene machines
	    don't allow calls to 'system' (used by
	    c4/ApplicationUnitTest.cc).  This script based approach may
	    offer an alternative method.
	  - Add -debug inline-debug-info to Intel RelWithDebInfo
	    builds. This option "generates enhanced debug information for
	    inlined code", according to the icpc man page; it associates
	    symbols from inlined functions with the source of the called
	    function (i.e., the inlined function), rather than with the
	    caller.  Intel 13 enables this option by default when -g and
	    an optimization flag are both specified; Intel 12 seems to
	    leave it off by default. The HPCToolkit manual recommends
	    enabling it, and it does improve attribution of calls to
	    inline functions.
	  - A new build environment, AUTODOCDIR, can be set to specify the
	    location to install doxygen generated files (default location
	    is $CMAKE_INSTALL_PREFIX/autodoc.
	  - No longer set the aprun option '-cc none'.  This was in place
	    to allow oversubscription of the nodes but appears to be
	    causing issues with ctest in ClubIMC and especially with
	    Capsaicin. #31

	Developer Environment:
	  - Documentation and comments updated in various files.
	  - Begin using Intel/13.0.1 by default on CI/CT.
	  - Begin using Intel/13.0.1 by default on PI/MU/ML/LU/TY.
	  - When using intel compilers add the flag -ftz (r6952).
	  - Regression scripts rewritten to improve modularity,
	    extensibility and concurent operation.
	  - Autodoc pages are now published from the nightly build at
	    http://coder/autodoc.

	Documentation:

	c4:
	  - Wait on all receive requests. TigsTrace methods now use C4_Req
	    objects to track receives, but they still included conditional
	    logic to avoid trying to "receive from self" while waiting on
	    outstanding receives.  Because the TigsTrace methods avoid
	    creating C4_Req objects for self-receives in the first place,
	    the conditionals were incorrectly skipping legitimate
	    receives. This commit eliminates those conditionals and waits
	    for all outstanding receives to complete.
	  - Added simple wrapper for MPI_allgather analogous to wrapper
	    for MPI_Gather, r6966.
	  - Extended c4 to begin supporting MPI user-defined vector types
	    (r7006):
	    . create_data_vector is basically a wrapper for the
	      MPI_Type_vector and MPI_Type_commit functions. It creates an
	      MPI user defined vector type.
	    . typedef'd C4_Datatype to be MPI_Datatype unless we're in
	      scalar build, in which case C4_Database is typedef'd as void*
	      (these functions are all no-ops in scalar mode.)
	    . send (with an added C4_Database argument) and receive (with
	      an added C4_Database argument) use the type for actual
	      blocked send and receive.

	diagnostics:
	  - Provided a new binary 'draco_info' that can be run from an
	    installation directory to query information about the draco
	    installation.  All of this can be found by parsing through
	    various config.h files but I thought it would be convenient to
	    have it all in one place.

	ds++:
	  - Provided pack_data and unpack_data routines for containers of
	    the form map<T1,vector<T2>>.  These will be used by
	    cdi_eospac.  Added tests for new pack/unpack routines. Added
	    tests for packing/unpacking size_t and uint64_t.
	  - Eliminated a call to system() that was executing "test -x
	    $file" to determine if a file has the execute bit turned on.
	    To implement this change the draco_getstat() function was
	    refactored into a class that takes a filename as an argument
	    to its constructor.  The new design is extensible.  Member
	    functions that are currently provided include:
	    valid() - the error code returned by the stat call.
	    isreg() - is the file a regular file (determined by POSIX
	       S_ISREG macro).
	    has_permission_bit(int) - does the file have the permissions
	       bit set.  For example, ds.has_permission_bit( 0111 ) will
	       return true if the execute bit is set for user, group and
	       other.

	cdi_eospac:
	  - Provided a very simple interactive query tool for EOSPAC data.
	  - Updated SesameTable class to use maps instead of vector to
	    store relationship between registered materials and data
	    tables.
	  - Updated pack/unpack routines to support map<T1,T2> and
	    map<T1,vector<T2>> containers.
	  - Added a new EoS accessor to cdi, cdi_analytic and cdi_eospac:

	    getElectronTemperature( density, SpecificInternalElectronEnergy, Tguess )
	    getIonTemperature(      density, Uic,	     Tguess)

	    The cdi_eospac implementation uses EOS_T_DUe table from
	    EOSPAC.  The cdi_analytic implemenation uses the
	    rtt_roots::zbrent solver to find the new temperature based on
	    the analytic Cve = a+bT^c model.

	quadrature:
	  - Major refactor of the entire package.
	    . QuadServices is eliminated.
	    . Angle_Operator is renamed to Ordinate_Space (since it is a
	      collection of operations on the ordinate space rather than
	      just the angle term in the advection operator) and it is
	      specialized as Sn_Ordinate_Space and
	      Galerkin_Ordinate_Space.
	    . Quadrature becomes a factory class for Ordinate_Set and
	      Ordinate_Space.
	    . The client can now override the default axis assignments for
	      a quadrature. That is, he can assign mu, eta, and xi to x,
	      y, and z at his pleasure -- though this will bork if he is
	      in curvilinear geometry and fails to assign a direction
	      cosine with levels to the axis of symmetry.
	  - Remove quadrature interpolation model specification from
	    Quadrature and let it be specified instead as an argument to
	    the Quadrature::create_ordinate_space methods.

	rng:
	  - Continued development/implementation of Random123 features.

	* Corrected defects:

	  #51  ClubIMC builds fail on OSX with CUDA.
	  #74  Update ds++/Packing_Utils to support size_t, uint64_t and std::map.
	  #75  getFilenameComponent() inadvertantly stripping the filename
	       from the fully qualified path for FC_REALPATH.
	  #84  Draco build system draco-config.cmake has build directory
	       paths instead of install locations for libraries.
	  #108 Draco build is broken on CI/CT after upgrade to CLE 4.1
	  #127 valgrind reports a memory leak in libeospac6.a
	  #130 kat_cuda_generated_kat_cuda.cu.o fails to build with Intel/13.1.0 and cudatoolkit/4.2 on ML

	* New features

	  #73: Provide support for PAPI timers from c4/Timer
	  #85: Should draco build system allow client RelWithDebInfo builds linking to Draco Debug builds?
	  #86: Prototype a cmake-script based unit test that emulates ApplicationUnitTest
	  #90: New function request for rtt_cdi::eos; get T given electron internal energy U, density \rho
	  #119: Consider building autodoc nightly (and publishing it?)
	  #126: Provide better regression testing for diagnostics

	* Known defects:

	  #94  CDI should provide a way to collapse MG opacity data to gray.

	* Statistics (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
69014: kellyt
50255: kgbudge
13141: tme
7091: lowrie
6137: bta
5048: mwbuksas
4803: gaber
4360: mcghee
2305: phenning
2170: rsqrd
1436: warsa
957: sethrj
876: wollaber
693: kgt
476: furnish
463: talbotp
327: pahrens
131: bergen
106: jhchang

Lines of code
-------------

--------------------------------------------------------------------------------
Language                      files          blank        comment           code
--------------------------------------------------------------------------------
C++                             457          12726          21404          66788
C/C++ Header                    379           8472          23085          21747
Lisp                             13           1802           2519          11919
Perl                              2           1294           1009           8330
CMake                           123           1944           5238           7071
XML                               2            933              0           2418
Python                           26           1210           1343           2197
C                                17            311            658            893
Bourne Shell                     12            196            534            807
Bourne Again Shell                4             95            208            538
CSS                               1            113             37            395
C Shell                           3             47             87            262
make                              7            105             69            205
Fortran 90                        3             38             68            118
HTML                              2              8             15             48
--------------------------------------------------------------------------------
SUM:                           1051          29294          56274         123736
--------------------------------------------------------------------------------

Code coverage
-------------

Directory                             Function Coverage           C/D Coverage
--------------------------------  ---------------------  ---------------------
../source/src/units/                  82 /    82 = 100%      58 /    58 = 100%
../source/src/traits/                 16 /    16 = 100%       0 /     0
../source/src/special_functions/      31 /    31 = 100%     208 /   218 =  95%
../source/src/fit/                     1 /     1 = 100%      15 /    16 =  93%
../source/src/ds++/                  477 /   477 = 100%     462 /   497 =  92%
../source/src/ode/                     5 /     5 = 100%      29 /    32 =  90%
../source/src/cdi/                    39 /    39 = 100%      27 /    30 =  90%
../source/src/min/                     9 /     9 = 100%     137 /   154 =  88%
../source/src/linear/                 16 /    16 = 100%     334 /   392 =  85%
../source/src/roots/                   8 /     8 = 100%     259 /   312 =  83%
../source/src/mesh_element/           24 /    24 = 100%     165 /   213 =  77%
../source/src/cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
../source/src/meshReaders/            15 /    15 = 100%     127 /   172 =  73%
../source/src/diagnostics/             9 /     9 = 100%       5 /     8 =  62%
../source/src/FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
../source/src/fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
../source/src/parser/                268 /   269 =  99%    1083 /  1353 =  80%
../source/src/RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
../source/src/timestep/               62 /    63 =  98%     104 /   178 =  58%
../source/src/quadrature/            185 /   188 =  98%     493 /   624 =  79%
../source/src/                      2231 /  2268 =  98%    4971 /  6116 =  81%
../source/src/cdi_eospac/             52 /    53 =  98%      62 /   132 =  46%
../source/src/c4/                    194 /   199 =  97%     503 /   550 =  91%
../source/src/norms/                  25 /    26 =  96%      21 /    34 =  61%
../source/src/viz/                    24 /    25 =  96%     129 /   168 =  76%
../source/src/rng/                    87 /    91 =  95%      65 /    70 =  92%
../source/src/cdi_analytic/          140 /   147 =  95%     164 /   196 =  83%
../source/src/plot2D/                 22 /    29 =  75%      46 /    76 =  60%
../source/src/lapack_wrap/            12 /    16 =  75%       0 /     0
--------------------------------  ---------------------  ---------------------
Total                               2231 /  2268 =  98%    4971 /  6116 =  81%



2012-11-06  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_5_0.  This is a minor Draco release.
	  http://coder.lanl.gov/redmine/versions/2

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - Jayenne-6_3_0

	* Platforms:
	  PI/ML/TY/LU    Intel 12.1.5    OpenMPI-1.4.5
	  CT/CI          Intel 12.1.2    MPICH2-5.4.2

	* Summary of changes:
	  - 428 files changed, added or removed in 218 commits.
	  - New support for ML and PI.
	  - Build system now uses CMake Imported/Exported targets.
	  - C++11 support turned on for compilers that support the new
	    standard.
	  - cdi_eospac re-activated.
	  - Random123 random number generator support is new. Random123 is
	    a library of counter-based random number generators developed
	    by John Salmon and Mark Moraes at D. E. Shaw Research, and
	    available from
	    http://www.deshawresearch.com/resources_random123.html.
	  - Adoption of Fortran2003 standards means that the new minimum
	    versions for gfortran is 4.7 and the new minimum version for
	    pgfortran is 10.4.
	  - No longer supporting YR/TU/HU/RR.

	* Details per package:

	Build System:
	  - Provide a new macro 'toggle_compiler_flag()' that simplifies
	    adding/removing compiler flags (e.g. -std=c++11).
	  - Support finding Random123 and EOSPAC.
	  - Export Draco target data that can be imported into other
	    projects
	    (http://www.vtk.org/Wiki/CMake/Tutorials/Exporting_and_Importing_Targets).
	  - Remove -DNDEBUG from Intel and PGI RelWithDebInfo flags.
	  - Add new variables MPI_CPUS_PER_NODE and MPI_CORES_PER_CPU that
	    provide some information about the local architecture.
	  - Provide a new option, MPI_PLUS_OMP, for add_parallel_test()
	    macro. This macro tells the build system to treat the test
	    with special properties related to running OpenMP threads
	    under MPI.
	    1. The test property is set to be excluded from valgrind
	       testing.
	    2. The test property is set to register OpenMP support on
	       Xcode.
	    3. The flags for mpirun are altered (see next bullet).
	    4. The test runs isolated in time from other tests.
	  - C++11 support is now turned on by default for all compilers
	    except pgCC and [sp]pu-g++.  The build system variable
	    DRACO_ENABLE_CXX11 can be used to disable or query C++11
	    support. If C++11 support is enabled, a series of checks will
	    be performed during the initial configure step.
	  - Add CXX flags -march=native for g++ and -Xhost for icpc to
	    improve architecture specific optimizations.
	  - Autodoc portions of the build system have been refactored to
	    improve simplicity, robustness and performance issues.  No
	    need to modify the build configuration to enable autodoc -
	    simply run 'make autodoc.'
	  - Provide a new optional argument, LINK_WITH_FORTRAN, for
	    add_scalar_tests(...) and add_parallel_tests(...) macros.  If
	    specified, the target property LINKER_LANGUAGE=Fortran will be
	    set for the unit test appliation.
	  - Clarify the use of -ansi and -std=c++11 flags.  These flags
	    cannot both be turned on because -ansi indicates the use of
	    the c++98 standard.

	Developer Environment:
	  - Documentation and comments updated in various files.
	  - .cshrc updated:
	    - default module set updated with modules required for
	      Capsaicin development.
	    - PI/ML/TY/LU:
	      Intel/12.1.5 new default.
	      PAPI no longer loaded by default.
	      cudatoolkit new default on ML.
	      lapack/3.4.1 new default.
	      eospac/6.2 new default.
	    - RR3:
	      gcc/4.7.1 new default for x86 portion.
	    - CCS7 Darwin:
	      Establish VENDOR_DIR=/projects/opt/draco/vendors/
	      Establish defult modules.
	    - CCS2 LAN:
	      openmpi/1.6 new default.
	      eospac/6.2 new default.

	Documentation:
	  - Build system document updated to reflect adoption of the C++11
	    standard and official support for Fortran2003.
	  - Update how LaTeX documents are handled by the build
	    system (r6846). Eliminate build system variable
	    BUILD_DOCS. The doc subdirectory will alwasy be configured.
	    Documents can be built from the build directory by using one
	    of the target names (alldocs, doc-build, doc-mesh, etc.)  Use
	    'make help' from the doc build directory to find target names.
	    Running make within a doc subdirectory (e.g.: system) will
	    generate the pdf.

	c4:
	  - Moved some communications specific routines from wedgehog_gs
	    to c4.  In particular a new accumulatev function is provided
	    that accumulates an array across all processors using an
	    arbitrary functor.  This commit also provides a new class
	    TigsTrace that is used by Wedgehog to generate
	    old_to_new_cell_map[idx_old_cell]. This Trace is borrowed from
	    the Antero project's communicator and has lived in Wedgehog
	    for many years.  Because it is a communication-specific code,
	    it should live in c4 instead of wedgehog.

	cdi_analytic:
	  - In Pseudo_Line_Analytic_Odfmg_Opacity.cc, modify source to use
	    Lorenz profiles for pseudo-lines.

	cdi_eospac:
	  - This component has been completely rewritten to use libeospac-6.2
	    features. It is now active in Draco and can be used for
	    loading equation-of-state data from Sesame data files.

	ds++:
	  - Draco Design-by-Contract macros (Assert.hh) modified with an
	    extra bit field for NOTHROW features.  Using +8 will disable
	    the associated exception thrown from toss_cookies() but will
	    still print all of the DBC messages.  This mode is useful for
	    debugging large simulations where it is important to see the
	    whole cascade of DBC messages without killing an MPI rank by
	    throwing a C++ exception.
	  - Provide a new capability for comparing floating point data in
	    arbitrarily deep STL objects to a provided tolerance value.  I
	    used a simple class template recursion technique that
	    minimizes the amount of new code.  The upside is that no
	    existing code needs to be changed. The downside is that users
	    will need to use a slightly different syntax for comparing STL
	    containers that have more than 1 level.  This new feature
	    cannot be used on multi-D C style arrays (e.g. double
	    foo[10][10][10] = {...}) as these objects are actually 1-D in
	    memory space.
	  - Provide new filesystem related functions (SystemCall, path)
	    draco_mkdir( string ) for creating directories.
	  - isDirectory( string ) for checking if a string points to a
	    directory.
	  - draco_remove( string ) for removing files or recursively
	    removing directories.

	FortranChecks:
	  - Added tests to demonstrate the use of derived types with
	    iso_c_binding. This coding requires the F2003 standard
	    "import" and "iso_c_binding" intrinsics.  This bumps the
	    minimum required compiler version for gfortran to 4.7.1+ and
	    pgfortran 10.4+.

	quadrature:
	  - Fixed some long-standing bugs and issues for quadratures,
	    including bugs in axisymmetric coordinates in 1D and 2D,
	    errors when using scattering  expansions greater than
	    isotropic, and preparing for access to the Galerkin
	    Quadrature method via input.

	rng:
	  - Added Random123 known-answer and unit test. If Random123 was
	    found, build and run these.
	  - Added Random123 CUDA known-answer tests.

	RTT_Format_Reader
	  - Updated tests and eliminated deprecated code.

	special_functions:
	  - Now depends on Draco's 'roots' component.

	* Corrected defects:
	  - artf1845: cdi_eospac tests fail compile on Enterprise LINUX.

	* Known defects:
	  - Some known defects are listed on LANL's TeamForge web server,
	    tf.lanl.gov.  Here is a list of known defects:

	  - artf21614: Safe_Ptr has a design defect (This feature is not
	    currently used by Capsaicin or Jayenne).
	  - artf22544: c4/tstOMP fails on CT (This feature is not
	    currently used by Capsaicin or Jayenne).
          - artf20096: c4/tstComm_Dup fails for optimized builds on
	    Cielito.

	  - Additional defects are listed on CCS-2's Redmine server,
	    coder.lanl.gov/redmine.  Here is a list of known defects:

	    - #52 Create a cmake file that sets compiler flags for nvcc.
	    - #58 Totalview does not support C++11 shared_ptr<T>.
	    - #59 cdi_eospac design flaw

	* Statistics (see draco/regression/metrics_report.sh)

Contributers (updated Release.cc with this ordering).
------------
70924: kellyt
44426: kgbudge
13594: tme
7363: lowrie
6152: bta
5073: mwbuksas
4686: warsa
4360: mcghee
3683: gaber
2313: phenning
2176: rsqrd
961: sethrj
747: wollaber
693: kgt
525: pahrens
478: furnish
463: talbotp
440: jhchang
131: bergen

Lines of code
-------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
C++                            448          12834          21699          67436
Text                           211           7283           6536          55728
C/C++ Header                   375           8296          22940          21102
Lisp                            13           1801           2517          11916
Perl                             2           1294           1009           8330
CMake                          118           1891           4892           6788
XML                              2            933              0           2418
Python                          26           1210           1343           2197
C                               17            314            655            800
Bourne Shell                     9            175            570            514
CSS                              1            113             37            395
make                             7            105             69            205
C Shell                          3             36             62            194
Fortran 90                       3             38             68            118
CUDA                             4             28             57             65
HTML                             2              8             15             45
-------------------------------------------------------------------------------
SUM:                          1241          36359          62469         178251
-------------------------------------------------------------------------------

Code Coverage
-------------
Directory               Function Coverage           C/D Coverage
------------------  ---------------------  ---------------------
units/                  82 /    82 = 100%      58 /    58 = 100%
traits/                 16 /    16 = 100%       0 /     0
diagnostics/             8 /     8 = 100%       4 /     4 = 100%
special_functions/      30 /    30 = 100%     196 /   204 =  96%
fit/                     1 /     1 = 100%      15 /    16 =  93%
ode/                     5 /     5 = 100%      29 /    32 =  90%
cdi/                    39 /    39 = 100%      27 /    30 =  90%
min/                     9 /     9 = 100%     137 /   154 =  88%
linear/                 16 /    16 = 100%     324 /   392 =  82%
roots/                   8 /     8 = 100%     256 /   312 =  82%
mesh_element/           24 /    24 = 100%     165 /   213 =  77%
cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
meshReaders/            15 /    15 = 100%     127 /   172 =  73%
cdi_eospac/             44 /    44 = 100%      34 /    48 =  70%
FortranChecks/           1 /     1 = 100%       7 /    14 =  50%
fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
ds++/                  462 /   465 =  99%     445 /   485 =  91%
parser/                266 /   269 =  98%    1075 /  1357 =  79%
timestep/               62 /    63 =  98%     104 /   178 =  58%
rng/                    68 /    70 =  97%      65 /    70 =  92%
norms/                  25 /    26 =  96%      21 /    34 =  61%
viz/                    24 /    25 =  96%     129 /   168 =  76%
cdi_analytic/          134 /   141 =  95%     161 /   192 =  83%
c4/                    176 /   189 =  93%     493 /   554 =  88%
quadrature/            184 /   220 =  83%     494 /   671 =  73%
plot2D/                 22 /    29 =  75%      46 /    76 =  60%
lapack_wrap/            12 /    16 =  75%       0 /     0
------------------  ---------------------  ---------------------
Total                 2160 /  2240 =  96%    4880 /  6053 =  80%


2012-06-28  Kelly (KT) Thompson  <kellyt@lanl.gov>

	*  draco: Release draco-6_4_0.  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-6_2_0
	  - milagro-5_4_0
	  - wedgehog-7_5_0
	  - capsaicin-3_2_0

	* Platforms:
	  TU/HU/TY/LU    Intel 12.1.2    OpenMPI-1.4.5
	  CT/CI          Intel 12.1.2    MPICH2-5.4.2
	  YR             PGI 9.0-3       OpenMPI-1.4.3
	  Roadrunner     GCC-4.3.0       OpenMPI-1.4.3

	* Summary of changes:
	  - 307 files where changed, added or removed in 292 commits.
	  - All releases will use Intel 12.1.2 and OpenMPI-1.4.5 or
	    MPICH2-5.4.2 (CT/CI) except Roadrunner.

	* Details per package:

	Build System:
	  - Improved detection and setup of MPI libraries, flags, MPIEXEC,
  	    etc.
	  - Turn on OpenMP support by default for all compilers sans PGI.
	  - Nightly regressions added for OSX (mistress).
	  - Improve auto-detection of CUDA and CUDA compiler flag setup.
	  - Improved determination of HOST_NAME_MAX for OSX.
	  - No longer support ATLAS version of LAPACK.  Require the use of
	    lapack-3.4.0 or later.
	  - Discovered an issue with PGI zero-cost exception handeling
	    which is turned on by default in version 11+.  Initially added
	    the --nozc_eh flag for PGI to avoid using this feature of the
	    compiler.  Later we determined that newer PGI versions are
	    fundamentally broken and decided to only support Intel and
	    GCC.
	  - Improved build support for CT/CI including support for
	    building w/o a toolchain file.

	Developer Environment:
	  - Provide an updated memo for "Draco Release Policy and
	    Procedures."
	  - Change default module for Bullseye Coverage to 8.4.12.
	  - Provide SVN 1.6.17 on ICN platforms and version 1.7.2 to the
	    CCS LAN.
	  - Provide a presentation of how CMake is used by Draco (talk
	    given to the SWIFT team).
	  - Update Emacs setup scripts so that F9 starts the psvn wrapper
	    for SVN.
	  - Remove module setup files for older software (cmake-2.8.1,
  	    gcc-4.4.4, etc.)
	  - Provide an updated Draco Release Policy document.
	  - Update gettingStarted document and then merge it into an
  	    updated Draco Build System document.
	  - Retired a lot of documents and scripts that are deprecated by
	    the CMake-based build system.
	  - On the CCS LAN, remove module binary and setup from Draco
	    sources.  It is now located at /ccs/codes/radtran/vendors/...

	c4:
	  - In Timer, provide improved support for PAPI instrumentation.
	  - ApplicationUnitTest was updated to optionally provide wall
	    clock times for individual tests.
	  - ApplicationUnitTest updated to support 'aprun' on CT/CI.  This
	    includes modifying the add_application_test() cmake macro so
	    that it only runs from the 'login' and knows how to run under
	    aprun. For example, the command

	   add_scalar_tests(
              SOURCES   "${PROJECT_SOURCE_DIR}/tstApplicationUnitTest.cc"
	      DEPS      "Lib_dsxx"
	      TEST_ARGS "--np 2"
	      APPLICATION_UNIT_TEST )

	    will start the test c4/test/tstApplicationUnitTest "--np" "2"
	    from the login node.

	cdi_analytic:
	  - eliminate redundant code.
	  - Added tests to improve code coverage.
	  - Modify pseudo line spectrum model to use a damping rather than
	    Gauss profile. Use proper black body weights in band
	    averages. Allow for possibility some bands have negligible
	    energy in them.

	ds++:
	  - In SP, provide improved detection and reporting of casting
	    between incompatible pointer types.
	  - Provide new class SystemCall that provides functions like
	    draco_gethostname() and draco_getpid() and masks direct system
	    calls.
	  - Rework isFinite class so that Draco standard dependencies
	    between .hh, .i.hh, .cc and _pt.cc files exist.
	  - Added tests to improve code coverage.
	  - Added a new feature to Draco DBC that will print DBC messages
	    w/o throwing the associated exception from toss_cookies().
	    The new NOTHROW feature is enabled by setting the 4th bit of
	    DRACO_DBC_LEVEL (+8) and is meant for use in optimized code
	    where all DBC messages are desired w/o stopping the code.

	FortranChecks:
	  - This is a new draco component associated with making Fortran a
	    primary Draco language.  This component tests operation of the
	    Fortran compiler and Fortran/C++ linkage.  It also provides
	    sample ISO_C_BINDING syntax.

	lapack_wrap:
	  - Implement CMake's FortranCInterface features to automatically
	    detect and use the correct Fortran/C name mangling.
	  - Eliminate the Blas_Level_1.hh file by moving all of it's
	    content into Blas.hh.  This is a minor change since the
	    previous Blas.hh only included the Blas_Level_1.hh header.
	  - Update the unit test so that it runs through all of the
	    wrapped blas routines for floats and doubles.  Previously, we
	    only tested the interfaces for doubles.

	parser:
	  - Fixed a memory leak discovered in Abstract_Class_Parser.
	  - Add unit tests to improve code coverage.
	  - Added tests to improve code coverage.

	quadrature:
	  - Produced static public interfaces to the algorithms underlying
	    the computeD, computeN and compute_N2lk private members of
	    QuadServices, so that these could be applied any arbitrary
	    quadrature. Used these new functions to greatly simplify the
	    OrdinateSet compute_moment_to_discrete_weights and
	    compute_discrete_to_moment_weights and permit them to work
	    properly for quadrature sets of one dimensionality pruned or
	    expanded to work in another dimensionality.

	RTT_Format_Reader:
	  - Added unit tests for improved coverage of main library.

	* Known defects:
	  - Known defects are listed on LANL's TeamForge web server,
	    tf.lanl.gov.  Here is a list of known defects:

	  - artf21614: Safe_Ptr has a design defect (This feature is not
	    currently used by Capsaicin or Jayenne).
	  - artf22544: c4/tstOMP fails on CT (This feature is not
	    currently used by Capsaicin or Jayenne).
          - artf20096: c4/tstComm_Dup fails for optimized builds on
	    Cielito.
	  - #59 cdi_eospac design flaw
	  - #58 Totalview does not support C++11 shared_ptr<T>
	  - #52 Need to create cmake support file that provides compiler
	        flags for nvcc.

	* Corrected defects:
	  - artf22444: Regression reports fail to post from Cielito.
	  - #93: Provide more checks for C++11 capabilities/features.

	* Statistics: (draco/regression/metrics_report.sh)

Lines of code
-------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
C++                            423          15036          22227          72905
Text                           178           6486           6816          47634
C/C++ Header                   355           8334          22978          20914
Lisp                            13           1801           2517          11916
Perl                             2           1294           1009           8330
CMake                          104           1729           3693           4797
XML                              2            933              0           2418
Python                          26           1210           1343           2197
C                               14            277            552            652
Bourne Shell                    10            170            488            548
CSS                              1            113             37            395
make                            11            171            108            344
Fortran 90                       2             19             34             54
C Shell                          2             18             40             51
HTML                             2              8             15             45
awk                              1              6              2             27
-------------------------------------------------------------------------------
SUM:                          1146          37605          61859         173227
-------------------------------------------------------------------------------

Code coverage
-------------
Directory               Function Coverage           C/D Coverage
------------------  ---------------------  ---------------------
units/                  82 /    82 = 100%      58 /    58 = 100%
traits/                 16 /    16 = 100%       0 /     0
diagnostics/             8 /     8 = 100%       4 /     4 = 100%
special_functions/      29 /    29 = 100%     190 /   198 =  95%
fit/                     1 /     1 = 100%      15 /    16 =  93%
ode/                     5 /     5 = 100%      29 /    32 =  90%
cdi/                    39 /    39 = 100%      27 /    30 =  90%
min/                     9 /     9 = 100%     137 /   154 =  88%
linear/                 16 /    16 = 100%     324 /   392 =  82%
roots/                   8 /     8 = 100%     256 /   312 =  82%
mesh_element/           24 /    24 = 100%     165 /   213 =  77%
cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
meshReaders/            15 /    15 = 100%     127 /   172 =  73%
fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
ds++/                  667 /   670 =  99%     586 /   665 =  88%
RTT_Format_Reader/     319 /   321 =  99%     273 /   356 =  76%
parser/                266 /   269 =  98%    1075 /  1357 =  79%
timestep/               62 /    63 =  98%     104 /   178 =  58%
rng/                    68 /    70 =  97%      65 /    70 =  92%
norms/                  25 /    26 =  96%      21 /    34 =  61%
viz/                    24 /    25 =  96%     129 /   168 =  76%
cdi_analytic/          133 /   140 =  95%     163 /   194 =  84%
quadrature/            179 /   191 =  93%     544 /   637 =  85%
c4/                    177 /   190 =  93%     356 /   414 =  85%
plot2D/                 22 /    29 =  75%      46 /    76 =  60%
lapack_wrap/            12 /    16 =  75%       0 /     0
------------------  ---------------------  ---------------------
Total                 2314 /  2370 =  97%    4889 /  5993 =  81%


2012-3-15 Kent G. Budge <kgbudge@lanl.gov>

	* Produced static public interfaces to the algorithms underlying the
  	  computeD, computeN and compute_N2lk private members of
   	  QuadServices, so that these could be applied any arbitrary
	  quadrature.

	* Used these new functions to greatly simplify the OrdinateSet
	  compute_moment_to_discrete_weights and
	  compute_discrete_to_moment_weights and permit them to work
	  properly for quadrature sets of one dimensionality pruned or
	  expanded to work in another dimensionality.

    	  Reviewed by KT.


2012-02-17  Kelly (KT) Thompson  <kellyt@ccscs9.lanl.gov>

	* Moved draco to the SVN from the CVS revision control system.
	  % newgrp draco; umask 0007
	  % cd /ccs/codes/radtran/svn
	  % cvs2svn --auto-props-autoprops.txt --eol-from-mime-type \
	            --default-eol-native --dumpfile=draco.dmp \
	            ../cvsroot/draco
	  % svnadmin create draco
	  % svnadmin load draco < draco.dmp
	  # check group/owner permissions on all files.
	  # edit commit_hooks to setup email notification.
	  # edit *cvs* commit_hooks to prevent cvs commits to draco.

2012-01-06  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_3_0.  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-6_1_0
	  - milagro-5_3_0
	  - wedgehog-7_4_0
	  - capsaicin-3_1_0

	* Platforms:
	  TU/HU/TY   Intel 10.0.023   OpenMPI-1.4.3
	  HU/YR      PGI 9.0-3        OpenMPI-1.4.3
	  CT/CI      PGI 10.9.0       MPICH2-5.2.0.7
	  Roadrunner GCC-4.3.0        OpenMPI-1.4.3

	* Summary of changes:
	  - 227 files were changed, added or removed.
	  - This release does not include the package plot2D.
	  - pcgWrap and cdi_gandolf components have been retired.
	  - cdi_ipcress provides a drop in replacement for cdi_gandolf and
	    no longer requires libgandolf.
	  - Introduce CUDA support.
	  - Provide basic support for PAPI instrumentation.
	  - Provide basic support for OpenMP directives.

	* Details per package:

	Build System:
	  - Require CMake-2.8.6 or later.
	  - Begin using FeatureSumamry.cmake.
	  - Revert to using CMake's version of FindBLAS and FindLAPACK
	    instead of rolling our own.
	  - Improve support for Apple OS/X builds (XCode).
	  - Modify FindGSL.cmake to use system provided libraries on
 	    CT/CU.
	  - Correct flags set for RELWITHDEBINFO build types.
	  - Make optimizations more aggressive for PGI.

	Developer Environment:
	  - Retire modules for null, gandolf and pcg as these are no longer
	    supported by Draco.
	  - On CCS LAN, add module options for gcc-4.6.2, cmake-2.8.6 (default),
	    cmake-2.8.7, git/1.7.7.2.
	  - On HPC, add module for cmake-2.8.6 (default), cmake-2.8.7
	  - When loading the gsl module, prefix LD_LIBRARY_PATH with
	    GSL_LIB_DIR.
	  - For RR3 and rr-dev, update path for atlas to point to
	    /usr/projects/draco/vendors/lapack/rr-openmpi143-gfortran430-gcc430
	    because /opt/Ptools/atlas/3.8.2 does not exist on RR3.
	  - Provide .bashrc support for drawin.lanl.gov (CCS-7 GPU
	    machine).
	  - On CT/CI, use vendor provlided GSL instead of the version
	    found at /usr/projects/draco/vendors.
	  - On TU/HU/TY, set FC=ifort (Intel Fortran).
	  - Provide a prototype .cshrc for HPC machines.
	  - Update elisp to treat *.cu (CUDA) files as C++ for
	    formatting purposes.
	  - Update newmemo.cls to eliminate a space from the Phone/FAX and
	    Symbol lines.
	  - Update regression scripts so they use /scratch instead of
	    /scratch3/ for HPC machines (/scratch3 is retired).
	  - Clean up the regression scripts for testing on CT.

	RTT_Format_Reader:
	  - Update unit tests to use ScalarUnitTest in place of
	    ParallelUnitTest.  This eliminates a needless dependency on
	    c4.

	c4:
	  - Provide a new rtt_c4 function: get_processor_name() that uses
	    MPI_Get_processor_name() if available or gethostname().
	  - Adding long long to c4, changing rn_stream to uint64.
	    Changing all references from uint64_t to unsigned long long in
	    c4.

            The reason for this is due to a standards clash best seen in
	    MPI_Traits.hh. Although we'd like to insist on uint64_t (ANSI
	    C 99), we are only guaranteed unsigned long long in the MPI
	    standard. So fundamentally we have to pass using the trait
	    from the following function in the MPI traits:

            template<>
            struct MPI_Traits<unsigned long long>
            {
               static MPI_Datatype element_type() {
	                 return MPI_UNSIGNED_LONG_LONG; }
            };

            We can only rely on short <= int <= long <= long long --
	    hopefully int64_t fits into one of those boxes in a parallel
	    call.
	  - Provide support for T=vector<char> and T=std::string when
	    calling determinate_gatherv() or indeterminate_gatherv().  Add
	    unit tests for these new features.
	  - In C4_Req.hh, make a modification to eliminate a pervasive
	    "missing braces" warning.
	  - Move discovery of PAPI from CMakeLists.txt to
	    config/compilerEnv.cmake.
	  - Continue work started by Kent to provide support for PAPI
	    profiling. This commit modifies Kent's work by storing PAPI
	    build variables in the CMakeCache.txt.  Also, if PAPI is used,
	    all unit tests that need c4 will now also link against the
	    PAPI library.
	  - Bug fix:  A logic error would produce invalid set values in
	    c4/config.h if Draco was configured with default settings and
	    then DRACO_C4 was manually changed to SCALAR.  This change
	    makes SCALAR vs MPI settings exclusive.
	  - Processor_Group.cc modified to allow decomposition in energy
	    (Capsaicin) for Sn_Eigenvalue problems.
	  - Modify the Timer class so that PAPI data is printed (if PAPI
	    is available).
	  - Provide a wrapper for "omp.h." and define USE_OPENMP in
	    c4/config.h.
	  - Add unit test tstOMP.cc to demonstrate the use OpenMP
	    pragmas.

	cdi:
	  - Provide an additional enum value to distinguish between
	    cdi_gandolf and cdi_ipcress.

	cdi_analytic:
	  - In Analytic_Odfmg_Opacity.hh, remove some dead code that was
	    showing up in the code coverage analysis. This block of code
	    exists in nGray_Analytic_Odfmg_Opacity.hh. Due to inheritance
	    code design I don't think the copy found in
	    Analytic_Odfmg_Opacity.hh could be called.
	  - Remove redundant energy quadrature specification from opacity
	    model inputs. Get decomposition in energy working again.

	cdi_gandolf:
	  - Retired. Replaced with cdi_ipcress.

	cdi_ipcress:
	  - New component for Draco-6_3_0. Replaces cdi_gandolf for
	    reading IPCRESS files.  Does not require libgandolf.a.

	device:
	  - Provide a prototype GPU_Device class and unit test tests that
	    demonstrate the runtime and the device API for CUDA.
	  - Fix a build system logic error that was causing configure
	    failures on superflytnt.  This system has libcuda.so available
	    (triggering HAVE_CUDA=ON) but the full SDK (compiler, headers)
	    is not available.  Logic updated to ensure that both libcuda
	    and nvcc are available before trying to enable CUDA.
	  - Also add option USE_CUDA that can be set to OFF in cases where
	    the CUDA SDK is available, but the developer does not want to
	    use GPU code.
	  - In DACS_Device_Interface.cc, modify the signature of the
	    function pointer to avoid confusion between C and C++ linkage.
	    Here are the comments from DACS_Device_Interface.cc/hh:

            // The definition in the source file does not have extern "C"
	    // on it, but because it is the same f(int) as in the
	    // declaration in the header, the language rules state that
	    // the extern "C" from the declaration applies to it as
	    // well. The definition for f is thus generated with C
	    // linkage, that is, with the unmangled name
	    // "f". (www.glenmccl.com/ansi028.htm).

            // These functions will be generated with C linkage (no name
	    // mangling).  However, the function pointer will still be
	    // generated with C++ linkage in the .cc file and with C
	    // linkage in this file (according to the ANSI standard). This
	    // causes link errors with some compilers (PGI) because the
	    // function signatures in the .cc and .hh files do not match.
	    // The solution is to create and use a typdef for the extern
	    // function pointer signature.

	  - The GCC compiler makes assumptions about the function pointer
	    signature and will do 'the right thing' with either
	    implementation. Because this may come up again, I thought I
	    would go ahead and make these changes that document and
	    provide an example of the correct strict ANSI implimentation.

	ds++:
	  - In Endian.hh, added 2 new functions to rtt_dsxx namespace:

            bool is_big_endian(void)
            . Returns true if the current platform is a big endian machine
	      (powerpc).

            bool has_ieee_float_representation(void)
            . Returns true if the platform supports IEEE floating point
	      representation rules (some Cray machines do not)

	quadrature:
	  - In QuadServices.cc add some low-level services for converting
	    between moment and discrete representations and for converting
	    first-order moments to physical fluxes.

	rng:
	  - Adding long long to c4, changing rn_stream to uint64.

	Corrected defects from TeamForge Tracker:
	  - artf1836: cdi_gandof will SEGV if a bad key is provided.
	  - artf1868: Provide support for library prefix other than rtt_.

	Known defects:
	  - Known defects are listed on LANL's TeamForge web server,
	    tf.lanl.gov.  Here is a list of known defects:

	  - artf22444: Regression reports fail to post from CT.
	  - artf22544: c4/tstOMP fails on CT (This feature is not
	    currently used by Capsaicin or Jayenne).
	  - artf21614: Safe_Ptr has a design defect (This feature is not
	    currently used by Capsaicin or Jayenne).
          - artf20096: c4/tstComm_Dup fails for optimized builds on
	    Cielito.

	* Statistics:

% tools/count_loc.sh

Counting lines of source code --
Directory:  /home/kellyt/draco
Date     :  Mon Jan 9 10:13:18 MST 2012

                 Total C++ source: 40418
   C++ source in test directories: 22788
      C++ contract specifications: 1549
                     C++ comments: 42466
             Total Fortran source: 0
                 Fortran comments: 0
              LaTeX Documentation: 15427
                      HTML source: 0
                        Text docs: 7589
       Build system script source: 9958
   Executable shell script source: 599
           Executable Perl source: 1867
                    Python source: 3870
                    Expect source: 0
                     Elisp source: 6696


	% cd /home/regress/cmake_draco/Nightly_gcc/Coverage/build
	% export COVFILE=`pwd`/CMake.cov
	% export COVDIRCFG=`pwd`/covclass_cmake.cfg
	% cd ../source/src; covdir -p

Directory               Function Coverage           C/D Coverage
------------------  ---------------------  ---------------------
units/                  82 /    82 = 100%      58 /    58 = 100%
traits/                 16 /    16 = 100%       0 /     0
diagnostics/             8 /     8 = 100%       4 /     4 = 100%
special_functions/      29 /    29 = 100%     190 /   198 =  95%
fit/                     1 /     1 = 100%      15 /    16 =  93%
ode/                     5 /     5 = 100%      29 /    32 =  90%
cdi/                    39 /    39 = 100%      27 /    30 =  90%
min/                     9 /     9 = 100%     137 /   154 =  88%
linear/                 16 /    16 = 100%     324 /   392 =  82%
roots/                   8 /     8 = 100%     256 /   312 =  82%
mesh_element/           24 /    24 = 100%     165 /   213 =  77%
cdi_ipcress/           106 /   106 = 100%     191 /   252 =  75%
meshReaders/            15 /    15 = 100%     127 /   172 =  73%
fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
RTT_Format_Reader/     315 /   321 =  98%     273 /   356 =  76%
ds++/                  632 /   651 =  97%     571 /   643 =  88%
norms/                  25 /    26 =  96%      21 /    34 =  61%
viz/                    24 /    25 =  96%     129 /   168 =  76%
timestep/               59 /    62 =  95%     104 /   178 =  58%
c4/                    177 /   189 =  93%     352 /   406 =  86%
cdi_analytic/          130 /   140 =  92%     156 /   190 =  82%
rng/                    62 /    67 =  92%      63 /    70 =  90%
parser/                246 /   266 =  92%    1050 /  1351 =  77%
quadrature/            167 /   188 =  88%     517 /   683 =  75%
plot2D/                 22 /    29 =  75%      46 /    76 =  60%
lapack_wrap/            11 /    16 =  68%       0 /     0
------------------  ---------------------  ---------------------
Total                 2230 /  2340 =  95%    4809 /  5999 =  80%


2011-09-15  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_2_1.  This is a patch Draco release.
	  Issues were discovered with the 6_2_0 release that prevented
  	  code from executing correctly on the RoadRunner SPU processors.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-6_0_1
	  - milagro-5_2_1
	  - wedgehog-7_3_1
	  - capsaicin

	* Summary of changes:
	  - 73 files were changed, added or removed.
	  - This release does not include the packages pcgWrap or plot2D.

	* Details per package:

	Build System:
	  - CMake will now try to identify a Fortran compiler.
	    Registering Fortran as an active languge in the project aids
	    in the discovery of BLAS and LAPACK.
	  - Retire some autoconf files.
	  - A few changes to how tests are registered on roadrunner (match
	    more system names).
          - Provides support for building non-het version of the code on
	    roadrunner.

	Environment:
	  - Retire Linux32 module support.
	  - Create a new grouping 'hpc' for generic tools that work on all
	    HPC machines (e.g.: cmake, numdiff, etc.)
	  - Provide better default settings for http_proxy.

	ds++:
	  - No longer build, test or install Safe_Ptr or DBC_Ptr (see
	    artf21614).
	  - Provide new function 'get_word_count' in UnitTest.  This is
	    useful for checking captured output from unit tests.

	Known defects:
	  - artf21614: Safe_Ptr has a design defect.
	  - artf1836:  cdi_gandolf will SEGV if bad key is provided.
	  - artf20096: c4/tstComm_Dup fails for optimized builds on
	    cielito.
	  - artf1845:  cdi_eospac tests fail to compile on Linux.
	  - artf20097: Unit tests fail when using pgCC 11+ (cielito).
	  - artf21276: Consider retiring plot2D, cdi_eospac, pcgWrap.

	Resolved defects:
	  - artf1868: Make vendor dependent library prefixes.

	Statistics:

% tools/count_loc.sh

Counting lines of source code --
Directory:  /home/kellyt/draco
Date     :  Thu Sep 15 15:54:37 MDT 2011

                 Total C++ source: 40100
   C++ source in test directories: 22559
      C++ contract specifications: 1508
                     C++ comments: 42785
             Total Fortran source: 12
                 Fortran comments: 4
              LaTeX Documentation: 16070
                      HTML source: 0
                        Text docs: 7352
       Build system script source: 10891
   Executable shell script source: 645
           Executable Perl source: 1867
                    Python source: 3870
                    Expect source: 0
                     Elisp source: 6695

	% module load bullseyecoverage
	% cd /home/regress/cmake_draco/Nightly_gcc/Coverage/build
	% export COVFILE=`pwd`/CMake.cov
	% export COVDIRCFG=`pwd`/covclass_cmake.cfg
	% cd ../source/src; covdir

Directory               Function Coverage           C/D Coverage
------------------  ---------------------  ---------------------
units/                  82 /    82 = 100%      58 /    58 = 100%
traits/                 16 /    16 = 100%       0 /     0
diagnostics/             8 /     8 = 100%       4 /     4 = 100%
special_functions/      29 /    29 = 100%     190 /   198 =  95%
fit/                     1 /     1 = 100%      15 /    16 =  93%
ode/                     5 /     5 = 100%      29 /    32 =  90%
cdi/                    39 /    39 = 100%      27 /    30 =  90%
min/                     9 /     9 = 100%     137 /   154 =  88%
linear/                 16 /    16 = 100%     324 /   392 =  82%
roots/                   8 /     8 = 100%     256 /   312 =  82%
mesh_element/           24 /    24 = 100%     165 /   213 =  77%
meshReaders/            15 /    15 = 100%     127 /   172 =  73%
fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
RTT_Format_Reader/     315 /   321 =  98%     273 /   356 =  76%
cdi_gandolf/           129 /   132 =  97%     154 /   278 =  55%
c4/                    169 /   174 =  97%     288 /   338 =  85%
ds++/                  630 /   649 =  97%     567 /   637 =  89%
norms/                  25 /    26 =  96%      21 /    34 =  61%
viz/                    24 /    25 =  96%     129 /   168 =  76%
timestep/               59 /    62 =  95%     104 /   178 =  58%
rng/                    62 /    67 =  92%      63 /    70 =  90%
parser/                246 /   266 =  92%    1050 /  1351 =  77%
quadrature/            167 /   182 =  91%     517 /   631 =  81%
cdi_analytic/          130 /   143 =  90%     156 /   200 =  78%
lapack_wrap/            11 /    16 =  68%       0 /     0
------------------  ---------------------  ---------------------
Total                 2221 /  2317 =  95%    4658 /  5833 =  79%


2011-08-02  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_2_0.  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-6_0_0
	  - milagro-5_2_0
	  - wedgehog-7_3_0
	  - capsaicin

	* Summary of changes:
	  - 540 files were changed, added or removed.
	  - This release does not include the packages pcgWrap or plot2D.

	* Details per package:

	Build System:
	  - Support for autoconf is deprecated with this release.  CMake
	    will be the only supported build system.
	  - Provide a BUILD_DOCS option and the assoicated 'doc' Makefile
	    target that will compile LaTeX sources found in the doc
 	    subdirectory into pdf.
	  - Eliminate config/FindMPI.cmake in favor of using the version
	    provided with CMake-2.8.5.
	  - Provide better support for Eclipse CDT and XCode development
	    environments.
	  - No longer require GSL or LAPACK to configure draco with cmake
	    (some components will not be built if these libraries are
	    missing).
	  - Improved use of Valgrind for regressing testing and reporting.
	    The valgrind suppression file is located at
	    draco/regression/valgrind_suppress.txt.  Results are
	    summarized on the CCS-2 Dashboard.
          - Added use of RESOURCE_LOCK when registering tests to avoid
	    conflicts between tests.
          - Added use of RUN_AFTER when registering tests to associated a
	    dependence between two or more tests.
          - Merge changes in vendor supplied FindBLAS.cmake with our own
	    version.
          - Improve how FindBLAS.cmake works when Fortran is active.
          - Replace FindCPLAPACK.cmake with FindLAPACK.cmake.
          - Provide support for Cielito by providing a toolchain file
	    (config/Toolchain-catamount.cmake).
          - Provide support for Roadrunner by providing a toolchain file
	    (config/Toolchain-roadrunner-ppe.cmake).  More details at
	    https://tf.lanl.gov/sf/wiki/do/viewPage/projects.jayenne/wiki/HowToBuildLinux.
          - Provide support for running ctest for a PPE build when on the
	    RoadRunner backend.  In this mode, the tests are registered as
	    short scripts that ssh into a PPC node and executes the test
	    from the PPC.

	Developer Environment:
	  - The CDash dashboard at coder.lanl.gov/cdash is now the primary
	    point of information concerning regression testing/reporting.
	  - Several new styles have been added to the environment/latex
	    directory, including the beamer presentation templte.
	  - The modules capability has been expanded through the addition
	    of more module definition files: eclipse, bullseyecoverage,
	    gcc-4.5.2, intel-10.0.023, pgi-10.4, pgi-7.0-5, python-2.6.6,
	    trilinos-10.6.4, valgrind-3.6.1, etc.
	  - Component level Release files have been consolidated so that
	    only ds++/Release is used for Draco version information.
	  - Autoconf and SCons build system files are deprecated and will
	    be retired over the next few weeks.
	  - When using cmake-gui or ccmake, some variables are now
	    contrained to permittable values.

	c4:
	  - Redesign the ApplicationUnitTest class so that it uses the CPP
	    macro DRACO_UNAME instead of the deprecated C4_UNAME. Change
	    the CPP macros of the form c4_is<platform> to
	    draco_is<platform>. Finally, the define for C4_MPICMD has been
	    moved to c4/config.h and away from ApplicationUnitTest.hh.
          - Use the new functions from ds++/path.hh instead of redefining
	    our own in c4.
          - Update the ApplicationUnitTest class so that it works on
	    Cielito (i.e.: teach it to run aprun).
          - C4_Functions.hh defines a new function send_is that will
	    invoke MPI_Issend.
          - Update ParallelUnitTest to correct a deficiency that allowed
	    the test to report PASS when a failure only occured on a
	    non-IO processor.  Also eliminated a potential race condition
	    found in the status() member function.
          - Update Send_Receive so that the sender now holds onto size in
	    a private member variable.  This prevents the value from going
	    out of scope before the send completes.

            This resolves the failure of the single-PE
	    'auto-communication' test in tstSend_Receive on Cielito.  This
	    test has typically passed on other machines, probably due to
	    lucky buffering by MPI.  MPI_Isend will not block waiting for
	    a matching receive, but it's not required to buffer data.  The
	    send buffer can only be safely reused (or destroyed, by any
	    mechanism) after the send completes; i.e., after a Wait or
	    Test.

	cdi:
	  - In OpacityCommon.hh, provide a new enum value for
	    rtt_cdi::Reaction to indicate the end of the enumeration list.
	    This is uselful for default initialization.

	cdi_analytic:
	  - Changed Pseudo_Line_Analytic_Opacity to
	    Pseudo_Line_Analytic_MultigroupOpacity. This change supports
	    implementing ODF opacities and pseudo line opacities in
	    Serrano.
	  - Rename Analytic_Multigroup_Opacity to
	    nGray_Analytic_MultigroupOpacity. This change supports
	    implementing ODF opacities and pseudo line opacities in
	    Serrano.
	  - This component now depends on the parser and ode components,
	    moving it from level 3 to level 4 in the levelization
	    diagram.

	cdi_gandolf:
	  - Provide a new utility,GandolfInterpreter, that can read
	    IPCRESS files and interactively provide information about its
	    content.  An example use command is:

	   ./GandolfInterpreter file.ipcress

	   You can follow the prompts to query various parts of the IPCRESS file.
	  - GandolfWrapper was modified to change the maximum allowed
	    materials per file from 10 to 128.

	device:
	  - This component is new for Draco-6_2_0.  Its purpose is to
	    provide an interface/handle for a heterogeneous computing
	    device.  Currently, it wraps the DACS interface for
	    RoadRunner.  In the future it may also provide an interface to
	    GPUs or special threading models.
	  - Currently, this component is only available when building on
	    RoadRunner.
	  - DACS_Device is a singleton for DACS host-side resource and
	    process management.
	  - DACS_Process is an abstract host-side representation of an
	    accel-side process.  DACS_Process represents an accel-side
	    process.  It provides methods to start and stop the accel-side
	    process, and accessors that return the filename of the
	    accel-side binary and the pid of the running process.  Clients
	    should inherit from DACS_Process and implement the stop method.

	ds++:
	  - Retire Allocators.
	    In practice, this class was designed before the STL allocators
	    class was finalized and was deficient when compared to current
	    standards.  There are other design defects that caused
	    repeated compiler warnings. Also, the Allocators classes were
	    only being used by ds++/Mat.hh and this class was designed so
	    that only the Simple_Allocator would work. It was impossible
	    to instantiate Mat[1-5] with the Guarded_Allocator<T>.  The
	    plan is to update Mat.hh to use std::allocators<T>.  This
	    still allows more sophisticated allocators to be used in the
	    future and allow us to eliminate ds++/Allocators.hh.
	  - Retire DynArray.
	  - Update Mat classes to use STL allocators instead of
	    ds++/Allocators, which are being retired.
	  - Provide a new function verbose_error() in path.hh.
	  - Refactor UnitTest by moving some file/path manipulation logic
	    into ds++/path.hh.
	  - Update path by providing the member functions fileExists() and
	    getFilenameComponent().
	  - Provide swap.hh.  This class provides functions that do
	    byte-swapping in one of two ways: either use GNU extended asm
	    for x86 (really f86+), or use the poor people's method of
	    digging out one byte at a time and moving it to the right
	    place. The poor method is really not that bad: GCC for example
	    seems to optimize it down to about 5 instructions in the 32
	    bit case, including loads, versus 2 instructions (including
	    load) for the inline asm case.
	  - Establish Release.hh/cc as the Release information for all
	    Draco components.

	lapack_wrap:
	  - The build system will omit lapack_wrap from the build if
	    LAPACK is not found.

	linear:
	  - ludcmp.i.hh was modified to use abs from ds++ instead of
	    cstdlib.h. The dsxx version provides specialization for double
	    and eliminates a gcc warning when compiling on rr-dev.
	  - This component does not depend on traits so remove this
	    linkage from CMakeLists.txt.

	parser:
	  - Expanded initialization syntax for Expression to allow general
	    expressions.

	quadrature:
	  - In Angle_Operator, added a capability to choose to add an
	    additional set of starting directions which are zero-weight,
	    outwardly directed angles on a level that are opposite the
	    inwardly directed angles usually used for the starting
	    direction calculation in curvilinear coordinates.

            The enforce exact symmetry flag for the sweeper is now a bool
	    and is set to be false by default. This change requires that
	    many of the application test input files be modified to turn
	    this flat on because the base files were calculated with the
	    previous default of being turned on.

	  - In Angle_Operator, added a vector<unsigned> data member and
	    accessor that contains the angle index into the most-positive
	    outwardly directed angle on every level for ordinate sets
	    constructed for curvilinear coordinates.  These are the angles
	    used to reflect the starting direction angular fluxes.
	  - Updated Ordinate so that the ordinates can be sorted based on
	    a comparator supplied to the QuadServices constructor.  Also
	    fixed an inconsistency in ordering of ordinates. Fix incorrect
	    multiplication of source by opacity. Now returns constant
	    solution for S6 and source boundaries.
	  - Added support for 3D triangular Chebyshev quadrature.
	  - In QuadServices, add a missing  gsl_permutation_free, to match
	    gsl_permutation_alloc. This eliminates the five memory leaks
	    reported by valgrind.

	special_functions:
	  - Add an exponential integral evaluation function, ExpInt. This
	    routine is extracted from from Numerical Recipes for C++.  It
	    computes the general exponential integrals of type Ei(x) or
	    E_n(x).

	    E_n(x) is calculated either by special case definitions for
	    n=0 or x=0 with n=0 or 1, or the Lentz algorithm if x>1.0, or
	    the digamma series representation for greater x.

           Ei(x) is calculated using power series expansion for
	    x<|ln(EPS)|, where EPS is the required relative error (set to
	    machine precision), as this is the lower limit of the
	    asymptotic series, which is used for greater values of x. The
	    asymptotic series includes all converging terms until values
	    are less than EPS. Ei(-x) evaluates to the extension -E_1(x).

	timestep:
	  - Refactor some code and the unit tests to improve code
	    coverage.  In particular, capture some of the output that was
	    going to cout and examine it from within the tests.

	traits:
	- With the retirement of Release.cc, this component is now a
	    header only package.  No library will be built or installed.

	Defects:
	  - Known defects are listed on LANL's TeamForge web server,
	    tf.lanl.gov.  Here is a list of known defects:

	    + cdi_gandolf will crash with a segmentation violation if a
	      bad key is provided.
	    +c4/tstComm_Dup fails for optimized builds on Cielito.

	* Statistics:

% tools/count_loc.sh

%% Counting lines of source code --
%% Directory:  /home/kgt/draco
%% Date     :  Tue Aug 2 09:15:02 MDT 2011
%% Date     :  Tue Aug 2 09:15:02 MDT 2011

%%                  Total C++ source: 40006
%%    C++ source in test directories: 22481
%%       C++ contract specifications: 1494
%%                      C++ comments: 42763
%%              Total Fortran source: 12
%%                  Fortran comments: 4
%%               LaTeX Documentation: 16045
%%                       HTML source: 0
%%                         Text docs: 6768
%%        Build system script source: 111510
%%    Executable shell script source: 3239
%%            Executable Perl source: 1867
%%                     Python source: 3906
%%                     Expect source: 0
%%                      Elisp source: 6695

	% cd /home/regress/cmake_draco/Nightly_gcc/Coverage/build
	% export COVFILE=`pwd`/CMake.cov
	% export COVDIRCFG=`pwd`/covclass_cmake.cfg
	% cd ../source/src; covdir

Directory               Function Coverage           C/D Coverage
------------------  ---------------------  ---------------------
viz/                    24 /    25 =  96%     129 /   168 =  76%
units/                  82 /    82 = 100%      58 /    58 = 100%
traits/                 16 /    16 = 100%       0 /     0
timestep/               59 /    62 =  95%     104 /   178 =  58%
special_functions/      29 /    29 = 100%     190 /   198 =  95%
roots/                   8 /     8 = 100%     256 /   312 =  82%
rng/                    62 /    67 =  92%      63 /    70 =  90%
quadrature/            167 /   182 =  91%     517 /   631 =  81%
parser/                246 /   266 =  92%    1050 /  1351 =  77%
ode/                     5 /     5 = 100%      29 /    32 =  90%
norms/                  25 /    26 =  96%      21 /    34 =  61%
min/                     9 /     9 = 100%     137 /   154 =  88%
mesh_element/           24 /    24 = 100%     165 /   213 =  77%
meshReaders/            15 /    15 = 100%     127 /   172 =  73%
linear/                 16 /    16 = 100%     324 /   392 =  82%
lapack_wrap/            11 /    16 =  68%       0 /     0
fpe_trap/                2 /     2 = 100%       4 /    11 =  36%
fit/                     1 /     1 = 100%      15 /    16 =  93%
ds++/                  654 /   673 =  97%     602 /   679 =  88%
diagnostics/             8 /     8 = 100%       4 /     4 = 100%
cdi_gandolf/           129 /   132 =  97%     154 /   278 =  55%
cdi_analytic/          130 /   143 =  90%     156 /   200 =  78%
cdi/                    39 /    39 = 100%      27 /    30 =  90%
c4/                    169 /   174 =  97%     288 /   338 =  85%
RTT_Format_Reader/     315 /   321 =  98%     273 /   356 =  76%
------------------  ---------------------  ---------------------
Total                 2245 /  2341 =  95%    4693 /  5875 =  79%


2011-03-23  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-6_1_0.  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-5_2_0
	  - wedgehog-7_2_0
	  - capsaicin

	* Summary of changes:
	  - 217 files were changed, added or removed.
	  - This release does not include the packages pcgWrap or plot2D.

	* Details per package:

	Build System:
	  - Clean up for the CMake-based build system.  Eliminate variables
	    DRACO_BUILD_TESTS, DRACO_NUM_CORES.
	  - Tie the build system closer to the Draco Modules feature.
	  - Impovements to the regression/CDash system, including nightly
	    valgrind and coverage testing.  Provide warning/error
	    suppression for specific cases (errors in mpirun and cmake).
	  - Replace FindCLAPACK.cmake with a slightly modified
	    FindLAPACK.cmake and FindBLAS.cmake scripts that were provided
	    with cmake-2.8.4.
	  - The default build type will now be DEBUG.
	  - compilerEnv.cmake is now aware of gfortran.
	  - Improvements for parallel ctest environment include adding
	    '--mca mpi_paffinity_alone 0' as an option to mpirun and allowing
	    test dependencies, resource locks and working directory
	    specifications.
	  - Add '-cpp' to the CMAKE_Fortran_FLAGS to enable CPP for
	    '#include' directives.
	  - For Intel compilers, suppress remarks issued by the compiler,
	    change the default Release optimization to '-O1' and turn on
	    whole program optimization.
	  - Improved autodoc support when run with CMake.

	Developer Environment:
	  - Demonstrate support for Eclipse with CDT.
	  - Module support improved -- especially on turing and
	    yellowrail.
	  - Elisp support improved -- correctly indent namespace blocks
	    and use font-lock for special 'Draco' keywords.
	  - Improvements for Xcode on OS/X (list headers in project
	    files).

	c4:
	  - Update the way ApplicationUnitTest works so that it will pass
	    the unit tests on Cielito.
	  - Send_Receive.hh: Sender now holds onto size in a private
	    member variable, to avoid having it go out of scope before the
	    send completes. This resolves the failure of the single-PE
	    "auto-communication test" in tstSend_Receive on Cielito.  This
	    test has typically passed on other machines, probably due to
	    lucky buffering by MPI.  MPI_Isend will not block waiting for
	    a matching receive, but it's not required to buffer data.  The
	    send buffer can only be safely reused (or destroyed, by any
	    mechanism) after the send completes; i.e., after a Wait or
	    Test.

	quadrature:
	  - Sort the ordinates based on a comparator supplied to the
	    QuadServices constructor.
	  - Fix inconsistency in ordering of ordinates. Fix incorrect
	    multiplication of source by opacity. Now returns constant
	    solution for S6 and source boundaries.
	  - Added a 3D triangular Chebyshev quadrature.

	rng:
	  - Add DbC Require() for calling 3rd ctor of LF_Gen to avoid
	    problem that KT and Gabe debugged yesterday (entries in
	    _data[] must have specific values).
	  - Commented out dead code.
	  - Add #ifdef DEBUG around assert() calls.
	  - Generalize tstRnd_Control_inline.cc to allow the test to pass
	    in both reproducible and NR modes.
	  - Initialize special LFG data appropriately, when testing the
	    "existing int array" LF_Gen constructor.  This resolves
	    "Conditional jump or move depends on uninitialised value(s)"
	    warnings from valgrind.

	Defects:
	- artf20096: c4/tstComm_Dup fails for optimized build on
	  Cielito/Cielo.
	- artf20097: build failures when using pgCC 11+ on Cielito/Cielo.

	* Statistics:

	Directory:  /home/kgt/draco-6_1_0
	Date     :  Tue Mar 22 16:37:04 MDT 2011

                 Total C++ source: 39423
   C++ source in test directories: 22205
      C++ contract specifications: 1467
                     C++ comments: 43239
             Total Fortran source: 0
                 Fortran comments: 0
              LaTeX Documentation: 15016
                      HTML source: 0
                        Text docs: 6322
       Build system script source: 13123
   Executable shell script source: 3433
           Executable Perl source: 1867
                    Python source: 4172
                    Expect source: 0
                     Elisp source: 6691

	Coverage Summary (CDash)

	Total Coverage	                 96.46%
	Tested lines	               2317
	Untested lines	                 85
	Files Covered	                332 of 336
	Files Satisfactorily Covered	317
	Files Unsatisfactorily Covered	 19

	% cd /home/regress/cmake_draco/Nightly_gcc/Coverage/build
	% export COVFILE=`pwd`/CMake.cov
	% export COVDIRCFG=`pwd`/covclass_cmake.cfg
	% cd ../source/src; covdir

        Directory               Function Coverage           C/D Coverage
        ------------------  ---------------------  ---------------------
        units/                  83 /    83 = 100%      58 /    58 = 100%
        traits/                 17 /    17 = 100%       0 /     0
        diagnostics/             9 /     9 = 100%       4 /     4 = 100%
        special_functions/      28 /    28 = 100%     161 /   162 =  99%
        fit/                     2 /     2 = 100%      15 /    16 =  93%
        ode/                     6 /     6 = 100%      29 /    32 =  90%
        cdi/                    40 /    40 = 100%      27 /    30 =  90%
        min/                    10 /    10 = 100%     137 /   154 =  88%
        linear/                 17 /    17 = 100%     324 /   392 =  82%
        roots/                   9 /     9 = 100%     256 /   312 =  82%
        mesh_element/           25 /    25 = 100%     169 /   217 =  77%
        meshReaders/            16 /    16 = 100%     127 /   172 =  73%
        fpe_trap/                3 /     3 = 100%       4 /    11 =  36%
        cdi_gandolf/           130 /   131 =  99%     154 /   232 =  66%
        cdi_analytic/          105 /   106 =  99%     105 /   110 =  95%
        xm/                     57 /    58 =  98%      29 /    32 =  90%
        c4/                    170 /   173 =  98%     280 /   336 =  83%
        RTT_Format_Reader/     316 /   322 =  98%     273 /   356 =  76%
        ds++/                  679 /   700 =  97%     629 /   722 =  87%
        viz/                    25 /    26 =  96%     129 /   168 =  76%
        timestep/               60 /    63 =  95%     104 /   178 =  58%
        parser/                247 /   264 =  93%    1050 /  1345 =  78%
        rng/                    63 /    68 =  92%      63 /    70 =  90%
        quadrature/            168 /   182 =  92%     492 /   601 =  81%
        norms/                  20 /    27 =  74%      13 /    34 =  38%
        lapack_wrap/            12 /    17 =  70%       0 /     0
        ------------------  ---------------------  ---------------------
        Total                 2317 /  2402 =  96%    4632 /  5744 =  80%


2010-12-10  Kelly G. Thompson <kgt@lanl.gov>

        * draco: Released draco-6_0_0.  See CCS-2:10-50(U) for details
	  about the release.  This draco release includes the following
	  component packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                diagnostics
                ds++
                fit
                fpe_trap
                lapack_wrap
                linear
                meshReaders
                mesh_element
                min
                norms
                ode
                parser
                quadrature
                rng
                roots
                shared_lib
                special_functions
                timestep
                traits
                units
                viz
                xm

	It does not include the following package because they are not
	required by clients running on the big iron or, in the case of
	cdi_eospac, a known compiler incompatibility exists.

                cdi_eospac
                pcgWrap
                plot2D

        Note that stdheaders and meshReaders_Services have been retired
	from draco.

	There are significant build system changes including the
	introduction of 2 new build system prototypes (Scons and CMake),
	new vendor library support and new defaults.

        Again, see CCS-2:10-50(U) for details.

2010-09-28  Kelly (KT) Thompson  <kgt@lanl.gov>

	* draco: Release draco-5_21_0.  This is a minor Draco release.

	* This release was required by Jayenne and Capsaicin.  It is
          linked to:
	  - clubimc-5_0_0
	  - milagro-5_0_0
	  - wedgehog-7_0_0
	  - capsaicin-2_11_0

	* Summary of changes:
	  - 584 files were changed, added or removed.
	  - Code base was updated to eliminate many gcc warnings that were
	    generated when configured with the option
	    --enable-all-warnings.
	  - Modifications that do not modify behavior were implemented to
	    provide better multiplatform support (Mac OS-X and MSVC).
	  - Extension of unit tests provides better code coverage.
	  - This release does not include the packages pcgWrap or plot2D.

	* Details per package:

	Build System:
	  - Added a CMake-based build system that sits parallel to the
  	    existing autoconf-based build system.
	  - Reworked ac_vendors.m4 so that vendors are automatically
	    included for any given build if they vendor libraries are
	    found. That is, you no longer are required to type
	    --with-mpi-inc=<path> if $MPI_INC_DIR is found in the
	    environment.
	  - M4 macros for setting up vendors have been improved to reduce
	    code duplication.
	  - Packages that require vendor code that is not found at
	    configure time will not be build.  That is, we will not
	    attempt to compile pcgWrap if libpcg.a is not found.
	  - The build system now defaults to building parallel aware
	    libraries (--with-c4=mpi) instead of the previous scalar
	    default. --with-c4=shmem is now deprecated.
	  - The draco_config script was improved by allowing it to spawn
	    multiple threads.
	  - Provide new configure options --enable-glibcxx-debug and
	    --enable-all-warnings.
	  - Added support for options --with-cxx=intel | ppu-gcc ppu-g++.
	  - Updated scripts to work with 64-bit BullseyeCoverage tool on
	    Linux64.
	  - Provided a couple of logic change to better support the Darwin
	    platform (help it find libopenmpi.so!).
	  - Added support for Intel Fortran (ifort).
	  - Added support for finding the NDI libraries.

	Doxygen:
	  - Update style sheet and some of the top level documents.

	Developer Environment:
	  - Updated elisp to better support GNU Emacs.

	c4:
	  - Encapsulate platform specific header files to better support
	    non-Linux systems.
	  - Added some scatter and gather operations with multiple
	    convenience interfaces.
	  - Added routines to manage swapping of data between processors.
	  - Update routines to correctly treat the case where message size
	    is zero.  Prevent safe &v[0] type operations so that
	    instrumentation of the code doesn't trip over itself.

	ds++:
	  - Provide support for hiding/exposing symbols in shared object
	    libraries (DLL_SHARED macro).  See ds++/config.h.in for
	    details.
	  - The DbC macro REMEMBER is now defined anytime DBC != 0.
	  - Provide a new header, path.hh, that encapsulates path
	    separation symbols along with a few other file system related
	    behaviors.
	  - Provide a new class Slice that allows viewing a slice of an
	    arbitrary container.

	fpe_trap:
	  - No longer depends on c4.
	  - Throws an exception of a floating point exception is
	    encountered.

	units:
	  - Added cgsh and cgmu unit systems.
	  - Added output unit system specification.

	quadrature:
	  - The Transport_Model/Radiation_Package interface has been
	    refactored.
	  - All quadrature sets are now normalized so that their weights
	    sum to 1.
	  - Provided triangular Chebyshev-Legendre quadrature set.

	special_functions:
	  - Eliminate code that will always overflow.
	  - Change the signature of KroneckerDelta so that it returns an
	    unsigned integer.

	* Statistics:

        Counting lines of source code --
        Directory:  /home/kgt/draco
        Date     :  Tue Sep 28 18:10:19 MDT 2010

                         Total C++ source: 33651
           C++ source in test directories: 19572
              C++ contract specifications: 1249
                             C++ comments: 36276
                     Total Fortran source: 0
                         Fortran comments: 0
                      LaTeX Documentation: 14182
                              HTML source: 0
                                Text docs: 6470
               Build system script source: 11727
           Executable shell script source: 3464
                   Executable Perl source: 7597
                            Python source: 4175
                            Expect source: 0
                             Elisp source: 6583

    % tools/cloc .
        2024 text files.
        1318 unique files.
        1290 files ignored.

    --------------------------------------------------------------------------------
    Language                      files          blank        comment           code
    --------------------------------------------------------------------------------
    C++                             283          12053          15540          50568
    C/C++ Header                    281           7460          20216          17362
    Perl                              2           1262           1456           7062
    Lisp                             12           1220           1873           6543
    m4                               45           1860           1390           6337
    Visual Basic                     13            144              0           4929
    Bourne Shell                     17            395            940           3776
    Python                           51           1907           2098           3385
    XML                               9           1085              0           2798
    C                                 1            172            234            486
    make                             15            230            168            466
    CSS                               1            113             37            395
    Bourne Again Shell                1              7             24             55
    C Shell                           1             10             10             50
    awk                               1              6              2             27
    --------------------------------------------------------------------------------
    SUM:                            733          27924          43988         104239
    --------------------------------------------------------------------------------

    >>> Generating coverage reports...

    Directory               Function Coverage           C/D Coverage
    ------------------  ---------------------  ---------------------
    RTT_Format_Reader/     316 /   322 =  98%     273 /   356 =  76%
    c4/                    155 /   158 =  98%     173 /   218 =  79%
    cdi/                    40 /    40 = 100%      27 /    30 =  90%
    cdi_analytic/          105 /   106 =  99%     105 /   110 =  95%
    cdi_gandolf/            79 /   131 =  60%     125 /   232 =  53%
    ds++/                  643 /   683 =  94%     564 /   658 =  85%
    fpe_trap/                1 /     2 =  50%       0 /     0
    lapack_wrap/            11 /    17 =  64%       0 /     0
    meshReaders/            16 /    16 = 100%     127 /   172 =  73%
    mesh_element/           25 /    25 = 100%     157 /   205 =  76%
    norms/                  22 /    24 =  91%      21 /    34 =  61%
    parser/                136 /   140 =  97%     798 /   910 =  87%
    plot2D/                 21 /    29 =  72%      46 /    76 =  60%
    quadrature/            162 /   170 =  95%     413 /   500 =  82%
    rng/                    22 /    48 =  45%      46 /    72 =  63%
    shared_lib/             11 /    13 =  84%       7 /    10 =  70%
    special_functions/      13 /    13 = 100%      32 /    32 = 100%
    timestep/               49 /    62 =  79%      88 /   178 =  49%
    traits/                 12 /    17 =  70%       0 /     0
    units/                  83 /    83 = 100%      58 /    58 = 100%
    viz/                    23 /    26 =  88%     129 /   168 =  76%
    xm/                     56 /    58 =  96%      29 /    32 =  90%
    ------------------  ---------------------  ---------------------
    Total                 2001 /  2183 =  91%    3218 /  4051 =  79%


2009-06-16 Jae Chang <jhchang@lanl.gov> and Gabe Rockefeller <gaber@lanl.gov>

        * draco: Release of draco-5_20-0. This is a minor Draco release.
        A summary of changes is:

        config
                - Added changes to accomodate linking of fortran main
                programs
                - Added support for Intel compilers
                - Altered doxygen to allow a user to optionally specify a
                different doxygen_config.in file that the one in config.
                - Added support for gfortran
                - Added Silo library support

        c4
                - Replaced rtt_c4::finalized() with rtt_c4::abort() when
                it appears in a catch block in unit tests.


        cdi
                - Added support Opacity Distribution Function (ODF). See
                note below written by Seth.

        cdi_analytic

                - See note for cdi

        cdi_gandolf

                - See note for cdi

        ds++
                - Added scons build system input files

        parser

                - Fixed error in location()
                - Improved diagnostics for String_Token_Stream

        plot2D

                - Minor fixed for gcc 4.3 (using C++ header files)

        quadrature

                - Extended Discrete_To_Moment and Moment_To_Discrete to 3D
                - Corrected normalization of angle quadrature set

        rng

                - Added support for inline sprng lfg
                - Added inline Random and Rnd_Control classes


        Released Packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf - where libgandolf.a exist
                ds++
                fpe_trap
                lapack_wrap - where lapack and blas installed
                meshReaders
                mesh_element
                norms
                parser
                pcgWrap
                plot2D - where xmgrace installed
                quadrature - where gsl installed
                rng
                shared_lib
                special_functions - where gsl installed
                timestep
                traits
                units
                viz
                xm - doesn't build on Redstorm

                Counting lines of source code --
                Directory:  /home/jhchang/release/draco
                Date     :  Thu Jun 18 09:16:04 MDT 2009

                                 Total C++ source: 31730
                   C++ source in test directories: 18151
                      C++ contract specifications: 1222
                                     C++ comments: 34947
                             Total f90/f95 source: 0
                                 f90/f95 comments: 0
                              LaTeX Documentation: 13565
                                      html source: 0
                   Executable shell script source: 3012
                           Executable Perl source: 0
                                    Python source: 4158
                                    Expect source: 0
                                     Elisp source: 3289

        This release was required by jayenne [clubimc-4_2_0,
        wedgehog-6_2_0 and capsaicin-2_10_0].


2008-08-18  Seth R. Johnson  <sethrj@umich.edu>

        * Implementation of Opacity Distribution Function (ODF) method with
        multiple groups (ODFMG), see tech memo CCS-2-2-08-52

                - New opacity class: OdfmgOpacity returns opacities with one more
                dimension than multigroup (some number of opacity "bands" per group)
                - New gandolf class: GandolfOdfmgOpacity, which inherits from
                OdfmgOpacity, interfaces with an IPCRESS file written with the TOPS odf
                capability. The number of opacity bands is passed to the constructor,
                which unflattens the apparently multigroup data inside the IPCRESS file.
                It interprets the band structure (one structure per file, not one per
                group) and group boundaries, and returns opacities that have the extra
                dimension of bands.
                - New analytic opacity class: Analytic_Odfmg_Opacity is an almost
                identical copy of Analytic_Multigroup_Opacity. Its difference is that it
                stores the band boundaries, and it replicates the opacities generated by
                the multigroup models to return a multi-band, multi-group opacity. Note
                that its input has only one model per group, regardless of the number of
                bands: it simply copies the output of the model to every band.
                - Modifications to CDI to support ODFMG model, return band structure
                (opacityCdfBandBoundaries). Most ODFMG code in CDI is based on
                multigroup code.

                - New member function for each opacity class: getOpacityModelType
                returns an enum of OpacityModelType that indicates whether it is an
                analytic or Gandolf opacity. Previously, typeid checking was used in
                Milagro to determine the opacity class at runtime.
                - New utility ReadOdfGandolfFile inside cdi_gandolf/test: reads data
                from multigroup or odf-enabled IPCRESS files.

        * bug fixes/issues

                - Changed Gandolf data keys for Planck model in GandolfDataTable.cc. It
                previously misreported absorption opacities as being total opacities
                (both multigroup and gray). IPCRESS files have Planck absorption
                opacities, and no Planck total opacities. See: R. L. Judd, C. J. Fontes,
                and H. L. Zhang, "Gandolf Interface Rou- tines for IPCRESS Files," Tech.
                Rep. LA-UR-01-5543, Los Alamos National Laboratory (2001).

2008-08-13  Aimee Hungerford  <aimee@lanl.gov>

        * draco: Release of draco-5_19_0. This is a minor Draco release. A
        summary of changes is:

        changes to library names and namespace to satisfy gcc-4.3 and AIX
	compilers

        changes to support flat_interfaces that can extend selection of
	transport and flux limiter models in capsaicin

        config
                - added vendor support for ParMetis which is needed by
	          SuperLU_Dist, v. 2.2

        environment
                - Refactored python script for the pitch and repoman tools

        c4
                - added a variable to serve as the source/destination of a
	          null process

                - added function Compare for equivalence testing of values
	          on different processors

                - added base class in Send_Receive to support custom data
	          communicators (will be of use for a general
	          decomposition method for Jayenne codes)

2008-02-22  Mike Buksas  <mwbuksas@nammu.lanl.gov>

        * draco: Release of draco-5_18_0. This is a minor Draco release. A
        summary of changes is:

        config

                - Seperation of test building and execution in makefiles.
                - Filesystem changes to many files.
                - Additional compiler support on Darwin.
                - Testing for PCG and Grace presence availability.
                - Redtail compatability fixes.

        environment/share/python and environment/bin

                - Protype multi-platform build tools.
                - Code Improvements to pitch and checkout tools.

        environment/elisp

                - Compatability fixes to support Emacs 22.1

        environment/templates

                - Changes to reflect changes in year and group.

        regression

                - Updates to regression and coverage scripts to match
                filesystem change.

        c4

                - Added utilities to support creating data mapping
                operators.

        ds++

                - Collection of compiler-specific macros
                - Endian conversion functions and support in serialization
        	  operators.
                - Fixed compilation issue with ICM xlc compiler.

        parser

                - Code style improvements and additional functionality.

        pcgWrap

                - Functions to test for availbility of external vendor.

        plot2D

                - Functions to test for availbility of external vendor.

        quadrature

                - Code style improvements
                - Refactored to improve encapsulation and reduce
                dependencies.

        tools

                - Redstorm support
                - Changes to automatic notifications reflecting personnel
                changes.


2007-08-10  Aimee Hungerford <aimee@lanl.gov>

        * draco: Release of draco-5_17-0. This is a minor Draco release.
        A summary of changes is:

        config

                - Added more robust checking on compiler values,
	          additional support for openMPI
                - Vendor setup changes for trilinos
                - Add a stub for building without gandolf libs.

        environment/share/python

                - New utitlities in the the shared python modules.

        RTT_Format_Reader

                - Added support for general Polygon type mesh element,
                fixed a bug in the logic of the redefineCells function.

        c4
                - Removed a begin<beginDeprecated test when
                checking to see if Wtime and wall_clock_time()
                return equivalent values to prevent tests from
                failing in scalar mode.  We now just check
                to see that they are approximately equal.

        cdi_gandolf

                - Functions stubs and configuration support for optional
                compilation.

        ds++

                - Additional utitlity functions for overflow-protected
                division and searching for data in vectors.

                - Added include files needed by AIX compiler.

                - Added explicit definition of
                assignment operator from another Vector_Lite.

                - Previously added constructor from C arrays is ambiguous
                when the first template argument is size_t; changed
                constructor to fill member function.

        meshReaders

                - Returning a cell_defs vector by default in the
                Mesh_Reader base class to avoid errors.

                - Added support for general Polygon type mesh element

        mesh_element

                - Added support for general Polygon type mesh element

        quadrature

                - Replace "angle" with "ordinate" everywhere but
                Angle_Operator.

                - Fix sweeper to compute dot of face normal with
                ordinate in any dimension.

                - Check for invalid use of 1-D quadrature for
                axisymmetric geometry.

        tools

                - Added executable options for AIX in launchtest.in

        Released Packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        This release was required by jayenne [clubimc-3_7_0 and
        wedgehog-5_7_0].


2007-01-29  Thomas M. Evans  <tme@lanl.gov>

        * draco: Release of draco-5_16_0.  This is a minor Draco release.
        A summary of changes is:

        c4
         - removed wait() from C4_Req destructor; this was creating
           non-exception safe code in parallel execution modes

        mesh_element
         - added generic element identifier and support

        parser
         - added informational messaging

        quadrature
         - added 1D level-symmetric to SquareChebyshevLegendre

        config
         - removed automatic addition of libg2c in build system.  This
           change was required in order to use gcc > 4.0 because it no
           longer contains gcc.  Now, if a client needs libg2c use the
           --with-libs configure option,
           ie. "--with-libs=/codes/radtran/vendors/libf2c -lf2c"

        Released Packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        Unreleased packages:

                pcgWrap
                cdi_eospac

        This release was required by jayenne [clubimc-3_5_0 and
        wedgehog-5_5_0].

2006-08-30  Thomas M. Evans  <tme@lanl.gov>

        * draco: Release of draco-5-15_0. This is a minor Draco release.
        A summary of changes is:

        c4
         - added AIX options to ApplicationUnitTest
         - fixed warnings from PGI compiler

        RTT_Format_Reader
         - fixed warnings from PGI compiler

        cdi_analytic
         - fixed warnings from PGI compiler

        parser
         - added more detailed error reporting

        quadrature
         - added ability to generate quadratures from Token_Stream

        Released packages in draco-5_15_0.

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        Unreleased packages:
                pcgWrap
                cdi_eospac

        This release was required by jayenne [clubimc-3_4_0 and
        wedgehog-5_4_0].

2006-08-28 Jae H. Chang <jhchang@lanl.gov>

        * draco: Release of draco-5-14.0. This is a minor Draco release.
        A summary of changes is:

        - Build system:
          . added compile flags for pgf90 and gcc for flash-64 (64-bit).

        - cdi_analytic:
          . Added frequency dependence to polynomial models.

        - parser:
          . Added function to parse rtt_mesh_element::Geometry
            specification.

        - quadrature:
          . Added capability to reflect 2D square quadratures.
          . Provided quadCreate fucntion that accepts a Token_Stream
            as an argument.  This code block was moved from Capsaicin's
            sn_operator/Sweeper_Creator__Parser.cc
          . Provided two different mechanisms for building
            moment-to-discrete matrix (traditional Sn and Morel's Galerkin
            methods). Also provided three new mechanisms for generating
            discrete-to-moment matrix (traditional Sn, Morel's Galerkin
            and an experimental SVD methods).

        - special_functions:
          . Added experimental static integer power function

        Released packages in draco-5_13_0.

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        Unreleased packages:
                pcgWrap
                cdi_eospac

        This release was required by capsaicin-2_8_0.

2006-07-24  Thomas M. Evans  <tme@lanl.gov>

        * draco: Release of draco-5_13_0.  This is a minor Draco release.
        A summary of changes is:

        ds++
         - added unit-testing helper classes for serial tests

        parser
         - added std::exception error handling

        quadrature
         - added 1D-to-2D quadrature permutations

        special_functions
         - moved sf.dcc to special_functions.dcc
         - added spherical harmonics functions

        c4
         - added unit-testing helper class for parallel tests

        config
         - updated asciwhite option to ascipurple (name and compiler
           options)
         - removed configure/aclocal.m4 from CVS
         - added updated compiler options for PGI compiler
         - allow nested test executables on BPROC systems through
           AC_TEST_APPLICATION
         - allow mixed serial and scalar tests in a test directory
         - added *some* F90/C++ compatibility, not enough to be useful
           yet; at least C++ doesn't step on F90 when F90 is the principal
           compiler

        tools
         - updated launchtest for asci purple

        Released packages in draco-5_13_0.

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        Unreleased packages:
                pcgWrap
                cdi_eospac

        This release was required by jayenne [clubimc-3_3_0 and
        wedgehog-5_3_0].

2006-05-01  Thomas M. Evans  <tme@lanl.gov>

        * draco: Updated messages to draco-cvs@lanl.gov and draco@lanl.gov
        mailing list.

2006-04-26  Thomas M. Evans  <tme@lanl.gov>

        * draco: Release of draco-5_12_0.  This is a minor Draco release.
        A summary of changes is:

        ds++
          - updates to Index_ services
          - small constructor fixups in SortPermutation and Mat

        parser
          - updated tests and fixups

        quadrature
          - fixed normalizations

        cdi
          - more optimizations and better checking on return values

        c4
          - added MPI_Probe implementation to C4_MPI as generic
            blocked_probe() function

        RTT_Format_Reader
          - added triangle and quadratic line elements

        config
          - added parsing for compilers when the entire compiler path is
            set by the environment
          - moved tool settings to ac_instrument.m4; added coverage
            (BULLSEYE) tool implementation to build system, moved STLPORT
            environment setup to this location
          - added some updates for linking TRILINOS

        Released packages in draco-5_12_0.

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                special_functions

        Unreleased packages:
                pcgWrap
                cdi_eospac

        This release was required by jayenne [clubimc-3_2_0 and
        wedgehog-5_2_0].

2006-02-09  Thomas M. Evans  <tme@lanl.gov>

        * draco: Release draco-5_11_0.  This is a minor Draco release.  A
        summary of changes is:

        - ds++
         . Better documentation and testing of Assert class.
         . Better testing and implementation of Index_Converter,
           Index_Counter, and Index_set classes.

        - config
         . Added some FORTRAN support for PGI.

        Released Packages in draco-5_11_0:

          RTT_Format_Reader
          c4
          cdi
          cdi_analytic
          cdi_gandolf
          ds++
          fpe_trap
          lapack_wrap
          meshReaders
          mesh_element
          norms
          parser
          plot2D
          quadrature
          rng
          shared_lib
          timestep
          traits
          units
          viz
          xm
          special_functions

        Unreleased packages:

          pcgWrap
          cdi_eospac

        This release was required by jayenne [clubimc-3_1_0 and
        wedgehog-5_1_0] .

2006-01-31 Jae Chang <jhchang@lanl.gov>

        * draco: Released draco-5_10_0.  This is a minor Draco release
        required for the release of Capsaicin-2_7_0.  A summary of changes
        are:

        -config
         . Added support for Superlu_dist(parallel) and Superlu(scalar)

        -RTT_Format_Reader:
         . Improved error reporting.

        -C4:
         . Added isScalar(). This function returns true if MPI is
           unavailable.
         . Fixed memory leak in C4_Req::free() by adding a
           MPI_Request_free afterthe MPI_Cancel call.

        -ds++:
         . Added a utiltity class: Index_Converter which maps
           multiple dimensio indices to and from a single dimensional
           version.
         . Improved the documentation and variable names in
           pos_save_divide.

        -parser:
         . Fixed inconsistency in constructors for File_Token_Stream.
         . Added a default constructor for File_Token_Stream.

        -quadrature:
         . Extracted computation of Gauss-Legendre abscissas and weights
           into new function.

        -special_functions:
         . A new package containing math functions, e.g. factorial
           and Kronecker delta.

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                fpe_trap
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                quadrature
                rng
                shared_lib
                special_functions
                timestep
                traits
                units
                viz
                xm

        We are not releaseing cdi_eospac, plot2d or pcgWrap at the current
        time although these packages are part of the head revision of
        Draco.

        Code Statistics:

        Counting lines of source code --
        Directory:  /home/jhchang/release/draco
        Date     :  Tue Jan 31 08:09:07 MST 2006
                         Total C++ source:   25978
           C++ source in test directories:   15457
              C++ contract specifications:     934
                             C++ comments:   27890
                     Total f90/f95 source:       0
                         f90/f95 comments:       0
                      LaTeX Documentation:   13047
                              html source:       0
           Executable shell script source:    3012
                   Executable Perl source:       0
                            Python source:    3118
                            Expect source:       0
                             Elisp source:    3289

2006-01-09  Thomas M. Evans  <tme@lanl.gov>

        * draco: Moved repository from SourceForge to CCS-2/4 LAN.
        Located in /codes/radtran/cvsroot.  Moved regression under draco
        head directory.

2005-11-21  Thomas M. Evans  <tme@lanl.gov>

        * draco: Released draco-5_9_0.  This is a minor Draco release.  A
        summary of changes is:

        ds++
           - Fixed memory leak in DBC_Ptr classes (Safe_Ptr) and updated
             testing.  Fixed an assignment error in Thin_Ptr.
           - Added fill member function to Vector_Lite.

        c4
           - Added broadcast() function that uses iterators.
           - Removed C4::send() and C4::recv() deprecated functions from
             the old C4 namespace.
           - Updated unit tests.

        parser
           - Added additional DBC checking.
           - Better parallel/serial integration.
           - Integration with units package.
           - Added unit tests.

        plot2D
           - Updated file.h include to <cfile>

        quadrature
           - Added renormalize() function.

        rng
           - Cleaned up #include's.
           - Fixed-up some comments.

        fpe_trap
           - Added package.

        config
           - Updated settings for INTEL icpc compiler.
           - Added configure options for fpe_trap package.

        environment
           - New python tools added.
           - Updated draco-new-files.el to add .t.hh when draco-class is
             called.

        Packages that are included:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm
                fpe_trap

        Package that are NOT included:

                cdi_eospac
                pcgWrap

        This release was required by jayenne (clubimc-3_0_0 and
        wedgehog-5_0_0).

2005-10-06  Jae Chang <jhchang@lanl.gov>

        * draco: Released draco-5_8_0.  This is a minor Draco release that
          containes build system updates required for the release of
          Capsaicin-2_6_0.  A summary of changes are:

        - Build system:
          . Added paser package

        -cdi:
         . Added a function to CDI which will return Planckian and
           Rosseland integrals for all groups in a group structure.
         . Added a new full-spectrum integrator which just integrates the
           planckian over all of the groups in the group structure.

        -ds++:
         . Declared some previously undeclared virtual function.

        -parser:
         . New package added to draco.

        -quadrature:
         . Added quadrature/Q1DDoubleGauss.cc
         . Added quadrature/Q1DDoubleGauss.hh
         . Added quadrature/Q1DLobatto.cc (1D Lobatto quadrature)
         . Added quadrature/Q1DLobatto.hh
         . Added quadrature/doc/package.dot

        -rng:
         . Fixed memory leak in Sprng::get_size() function.


        -shared_lib:
         . Included an elegant hack to prevent g++ 4.0 from complaining
           about an unavoidable cast from pointer-to-object to
           pointer-to-function

        -tools:
         . update_release_tags.py now checks on existing of configure.ac
           or Release.cc in a directory before doing tag updates.

        -Elisp:
         . Fix code for reftex- mode.
         . Defined custom variables draco-bibpath and draco-textpath.

        -Environment:
         . Added /python/draco-cc-head
         . Added /python/draco-class
         . Added /python/draco-package
         . Added /python/parse-draco-template
         . Added /templates/templatet.hh
         . Added /templates/templatet.i.hh

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                mesh_element
                norms
                parser
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm

        We are not releaseing cdi_eospac, plot2d or pcgWrap at the current
        time although these packages are part of the head revision of
        Draco.

        Code Statistics:

          Counting lines of source code --
          Directory:  /home/jhchang/release/draco
          Date     :  Thu Oct 6 12:35:20 MDT 2005

                           Total C++ source:   25297
             C++ source in test directories:   14979
                C++ contract specifications:     918
                               C++ comments:   26895
                       Total f90/f95 source:       0
                           f90/f95 comments:       0
                        LaTeX Documentation:   13048
                                html source:       0
             Executable shell script source:    3033
                     Executable Perl source:     201
                              Python source:    2770
                              Expect source:       0
                               Elisp source:    3281


2005-10-05  Kelly Thompson  <kgt@lanl.gov>

        * parser: I moved the parser package from Capsaicin to Draco.  The
          motivation for this change is based on the generic nature of the
          parser, the relative stability of this code and it's possible
          use by other development teams.

2005-08-08  Kelly Thompson  <kgt@lanl.gov>

        * draco: Released draco-5_7_0.  This is a minor Draco release that
          containes build system updates required for the release of
          Capsaicin-2_5_0.  A summary of changes are:

        - Build system:
          . Added support for vendors that require PGI F90 libraries
            instead of lahey F90 libraries.
        - Elisp:
          . Fixes for bibtex and auctex modes.
          . Removed keybinding \C-c\C-c for auctex mode.
          . Rework the way the elisp code picks package and namespace
            names when creating new files from templates.
          . Fix some problems with C and C++ indentation.
          . By default change all tabs to spaces in C/C++ mode.
          . Attempt to enable wheel support for XEmacs on Flash and QSC.
          . Assign the "f2" key to comment-region.
          . Additions to reftex-mode.
        - RTT_Format_Reader:
          . Beefed up some of the unit tests.
        - cdi:
          . Efficiency improvements.
        - ds++:
          . Added overloaded form of toss_cookies_ptr(char const* const,
            char const* const, int const)
          . Added new unit test, tstBounds.
          . Added many new tests to tstMat.hh
          . Commented out much of the code in Mat.hh -- code that was not
            being unit tested.
          . Added ds++/DBC_Ptr.hh
          . Added ds++/Safe_Divide.hh
          . Added ds++/Safe_Ptr.hh
          . Added ds++/Thin_Ptr.hh
        - MeshReaders:
          . Force one argument constructor to be explicit to prevent
            automatic convertion of std:string to
            rtt_meshReaders::Hex_Mesh_Reader.
        - Tools:
          . Updated count_loc.sh to support automated weekly reporting of
            line counts.
        - Environment:
          . Added /share/python/module.py
          . Added /share/python/milagro/__init__.py
          . Added /share/python/milagro/data.py
          . Added /share/python/milagro/input.py
          . Added /share/python/milagro/run.py

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                mesh_element
                norms
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm

        We are not releaseing cdi_eospac, plot2d or pcgWrap at the current
        time although these packages are part of the head revision of
        Draco.

        Code Statistics:

          Counting lines of source code --
          Directory:  /home/kellyt/draco
          Date     :  Mon Aug 8 17:14:39 MDT 2005

                           Total C++ source:   23239
             C++ source in test directories:   14045
                C++ contract specifications:     767
                               C++ comments:   24378
                       Total f90/f95 source:       0
                           f90/f95 comments:       0
                        LaTeX Documentation:   13056
                                html source:       0
             Executable shell script source:    3033
                     Executable Perl source:     201
                              Python source:    2698
                              Expect source:       0
                               Elisp source:    3288

        Code Coverage:

          Directory               Function Coverage           C/D Coverage
          ------------------  ---------------------  ---------------------
          RTT_Format_Reader/*    316 /   316 = 100%     396 /   568 =  69%
          c4/                     82 /   135 =  60%      18 /    40 =  45%
          cdi/                    29 /    29 = 100%      43 /    58 =  74%
          cdi_analytic/           66 /    76 =  86%      66 /    82 =  80%
          cdi_gandolf/            63 /   101 =  62%      93 /   172 =  54%
          ds++/                  441 /   531 =  83%     348 /   530 =  65%
          lapack_wrap/            11 /    17 =  64%       0 /     0
          meshReaders/            14 /    14 = 100%     127 /   172 =  73%
          mesh_element/           21 /    21 = 100%     150 /   204 =  73%
          norms/                  19 /    24 =  79%      20 /    34 =  58%
          pcgWrap/                16 /    31 =  51%      24 /    55 =  43%
          plot2D/                 20 /    28 =  71%      50 /    84 =  59%
          quadrature/             66 /    66 = 100%     151 /   194 =  77%
          rng/                    21 /    26 =  80%      19 /    30 =  63%
          shared_lib/             12 /    18 =  66%       7 /    10 =  70%
          timestep/               49 /    62 =  79%      84 /   176 =  47%
          traits/                 12 /    17 =  70%       0 /     0
          units/                  83 /    83 = 100%      58 /    58 = 100%
          viz/                    23 /    26 =  88%     140 /   190 =  73%
          xm/                     89 /   169 =  52%      29 /    32 =  90%
          ------------------  ---------------------  ---------------------
          Total                 1335 /  1790 =  74%    1807 /  2689 =  67%

        * Coverage numbers for RTT_Format_Reader from capsaicin log report
          2005-08-07.


2005-06-14  Thomas M. Evans  <tme@lanl.gov>

        * draco: Released draco-5_6_0.  This is a minor draco release.
          A summary of changes are:

        - RTT_Format_Reader: Code reordering to eliminate compiler warnings.
        - c4: Added abort() function. Added some additional doxygen
          comments.
        - cdi: Optimized Planckian integrator.
        - cdi_analytic: Added ; to DBC statements.
        - cdi_gandolf: Updated maxKeys from 25 to 26 to work with newest
          TOPS.
        - ds++: Added insist_ptr option to DBC.  Added DBC_Array class.
          Added comparison operator to Vector_Lite.  Optimizations and
          operator= fixes to SP.
        - config: Made check target parallel.
        - environment: Updated elisp environment to define a draco-mode.
          Significant cleanup of old environment.

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                mesh_element
                norms
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm

        Retired meshReaders_Services. We are not releasing cdi_eospac and
        pcgWrap at the current time although these packages are part of
        the head version of draco.

        Code Statistics:

          Counting lines of source code --
          Directory:  /home/kellyt/draco-5_6_0
          Date     :  Mon Aug 8 17:26:56 MDT 2005

                           Total C++ source:   22945
             C++ source in test directories:   13694
                C++ contract specifications:     832
                               C++ comments:   23907
                       Total f90/f95 source:       0
                           f90/f95 comments:       0
                        LaTeX Documentation:   13056
                                html source:       0
             Executable shell script source:    3044
                     Executable Perl source:     201
                              Python source:    2401
                              Expect source:       0
                               Elisp source:    3239


2005-02-25  Kelly Thompson <kgt@lanl.gov>

        * draco: Released draco-5_5_0.  This is a minor draco release.
        Changes are:

                - config: Moved all of STLPort setup to a new m4 function;
                - doc: Updated Makefiles and .tex files for gettingStarted
                       to be compatible with new location of Draco LaTeX
                       environment.
                - environment: Updated configure.package.ac so that
                       includes examples of setting up new vendors: GSL,
                       BLACS, SCALAPACK and HYPRE.
                - src: Updated configure.ac to reflect the retirement of
                       stdheaders and the addition of norms.
                - RTT_Format_Reader: Improved robustness of reader when
                       comment only lines are found in the rtt mesh file.
                - c4: Restructured the Timer class so that it can always
                       provide POSIX timer information, even when compiled
                       with MPI.  If MPI is available, also provide access
                       to the MPI_Wtime() timer values.  This release
                       includes support for the Darwin operating system.
                - ds++: Updated the File_Streams class to improve
                       performance.
                - meshReaders_Services: Corrected some logic to prevent
                       potential out-of-bounds memory read.
                - quadrature: Modified the computation of 1D
                       Guass-Legendre quadrature set for higher
                       precision;  Corrected the value returned by
                       Q[23]DLevelSym.getLevels(); Provide public access
                       to DbC checks for D and M being inverse matrices of
                       each other; Add these checks to unit tests;  Add
                       tests of applyD() and applyM() functions; Add test
                       of QuadServices constructor where the lkMoments are
                       provided by the user; Added tests to improve code
                       coverage values.

                - config: Major update to apptest_modules.py; Constructor
                       no longer needs to know about the arguments
                       exec_head or test_name;  These are now determined
                       by the apptest class;  The actual number of cpus
                       used is now a part of the test banner; Added
                       soft_equiv test functions; Added a new class
                       GMVFile to parse a GMV file and make it's contents
                       available to a calling routine;
                       regression_filter.py was updated to report on
                       coverage values if available.

        Packages included in this release:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                meshReaders_Services
                mesh_element
                norms
                plot2D
                quadrature
                rng
                shared_lib
                timestep
                traits
                units
                viz
                xm

        Package that are NOT included:

                cdi_eospac
                pcgWrap

             We are not releasing cdi_eospac in draco until the compiler
             issues have been resolved [hopefully with the release of a C
             version of EOSPAC].

             We are not releasing pcgWrap in draco until the pcgWrap
             component in Draco is updated to only call double precision
             routines.  The single precision routines in libpcg have been
             removed in recent versions.

             For the first time, the package norms is available as a part
             of a Draco release.

        Code Statistics:

             These numbers do not include pcgWrap, cdi_eospac or
             regression scripts.

             Total C++ source:               23086
             C++ source in test directories: 13701
             C++ contract specifications:      823
             C++ comments:                   24032
             Total f90/f95 source:               0
             f90/f95 comments:                   0
             LaTeX Documentation:            13056
             html source:                        0
             Executable shell script source:  3040
             Executable Perl source:           201
             Python source:                   2430
             Expect source:                      0
             Elisp source:                    6063

        Code coverage:

             Extensive reports are located in the Documentation directory
             of the released code.  Configure options: --enable-debug
             --with-dbc=0 --with-c4=mpi

     Directory                            Function Coverage           C/D Coverage
     -------------------------------  ---------------------  ---------------------
     draco/src/shared_lib/                 2 /    17 =  11%       1 /    12 =   8%
     draco/src/xm/                        89 /   169 =  52%      29 /    32 =  90%
     draco/src/c4/                        66 /   107 =  61%      25 /    40 =  62%
     draco/src/cdi_gandolf/               63 /   101 =  62%      93 /   172 =  54%
     draco/src/lapack_wrap/               11 /    17 =  64%       0 /     0
     draco/src/ds++/                     377 /   556 =  67%     280 /   592 =  47%
     draco/src/traits/                    12 /    17 =  70%       0 /     0
     draco/src/plot2D/                    20 /    28 =  71%      50 /    84 =  59%
     draco/src/xm/test/                   19 /    26 =  73%      14 /    22 =  63%
     draco/src/timestep/                  49 /    62 =  79%      88 /   178 =  49%
     draco/src/meshReaders_Services/      17 /    21 =  80%     115 /   138 =  83%
     draco/src/rng/                       20 /    24 =  83%      12 /    18 =  66%
     draco/src/c4/test/                   16 /    19 =  84%     171 /   297 =  57%
     draco/src/ds++/test/                180 /   208 =  86%    2380 /  4674 =  50%
     draco/src/cdi_analytic/              66 /    76 =  86%      66 /    82 =  80%
     draco/src/viz/                       23 /    26 =  88%     140 /   190 =  73%
     draco/src/cdi/                       26 /    29 =  89%      46 /    64 =  71%
     draco/src/mesh_element/              19 /    21 =  90%     108 /   212 =  50%
     draco/src/norms/                     22 /    24 =  91%      21 /    34 =  61%
     draco/src/meshReaders/               13 /    14 =  92%     128 /   174 =  73%
     draco/src/RTT_Format_Reader/        310 /   320 =  96%     395 /   567 =  69%
     draco/src/quadrature/                66 /    66 = 100%     151 /   194 =  77%
     draco/src/units/                     83 /    83 = 100%      58 /    58 = 100%
     -------------------------------  ---------------------  ---------------------
     Total                              1569 /  2031 =  77%    4371 /  7834 =  55%

        Code Releae:

             Code installed on CCS-4/2 LAN at
             /codes/radtran/vendors/draco-5_5_0. Code installed on LANL
             ICN machines at /usr/projects/draco/draco-5_5_0.

2005-01-12  Kelly Thompson  <kgt@lanl.gov>

        * config/ac_platforms.m4 (AC_DBS_LAHEY_ENVIRONMENT): Created a new
        m4 function that will modify the RPATH and LIBS environment
        variables by appending the Lahey lib directory.  Additionally, the
        Lahey compiler libraries are appended to LIBS.  RPATH and LIBS are
        only modified for components that require the Lahey libraries at
        link time (cdi_eospac and trilinos).

        * src/configure.ac (Level 3): Removed cdi_eospac from list of
        packages to build and test because EOSPAC-5.35 is not fully
        compatible with Lahey 6.2.  See SF tracker at
        https://sourceforge-web.lanl.gov/tracker/?aid=4566.

2004-12-02  Kelly Thompson  <kgt@lanl.gov>

        * draco: Released draco-5_3_0.  This is a minor draco release.  A
        summary of changes are:

        - autodoc: Recent mods look for dcc files in the top level autodoc
          direcotry.
        - elisp: some small changes to improve font lock for DbC keywords.
        - c4: new broadcast signatures.
        - ds++: extensions to RCF and addition of File_Streams class.
        - quadrature: finished addition of QuadServices class.  New
          dependance on vendor GSL. Mods to build system were also made to
          provide GSL as a draco vendor.
        - viz: switched to ensight gold format; added write_part() member
          function.
        - tools: added launchtest as an installed tool to improve
          mpirun compatibility on lambda.

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                meshReaders_Services
                mesh_element
                plot2D
                quadrature
                rng
                stdheaders
                timestep
                traits
                units
                viz
                xm

        We are not releasing cdi_eospac in draco until the compiler issues
        have been resolved [hopefully with the release of a C version of
        EOSPAC].

        We are not releasing pcgWrap in draco until the pcgWrap component
        in Draco is updated to only call double precision routines.  The
        single precision routines in libpcg have been removed in recent
        versions.

        We are not releaseing shared_lib in draco until this package
        passes its unit tests on QSC.

2004-11-10  Thomas M. Evans  <tme@lanl.gov>

        * draco: Released draco-5_2_0.  This is a minor draco release.  A
        summary of changes are:

        - build systems chages: more darwin support, vendors added
        - timestep: improvements to field_ts_advisor
        - quadrature: beginning of significant redesign
        - shared_lib: added to released packages; only on when compile in
          shared mode

        Removed get_tex script because it is no longer needed [the tex
        stuff resides in environment].

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                meshReaders_Services
                mesh_element
                pcgWrap
                plot2D
                quadrature
                rng
                shared_lib
                stdheaders
                timestep
                traits
                units
                viz
                xm

        We are not releasing cdi_eospac in draco until the compiler issues
        have been resolved [hopefully with the release of a C version of
        EOSPAC].

2004-06-22  Thomas M. Evans  <tme@lanl.gov>

        * draco: Released draco-5_1_0.  This is a minor draco release. A
        summary of changes are:

        - build system changes: support for darwin [MacOS], dlopen
          support,  changed Q template option to -pt, improved autodoc
          support over last release
        - meshReaders has been redesigned with its base functionality
          moved to the mesh_element component

        This draco release includes the following packages:

                rng
                ds++
                shared_lib
                RTT_Format_Reader
                lapack_wrap
                stdheaders
                meshReaders
                timestep
                c4
                meshReaders_Services
                traits
                cdi
                mesh_element
                units
                cdi_analytic
                pcgWrap
                viz
                cdi_gandolf
                plot2D
                xm
                quadrature

        We are not releasing cdi_eospac in draco until the compiler issues
        have been resolved [hopefully with the release of a C version of
        EOSPAC].

2004-04-30  Thomas M. Evans  <tme@lanl.gov>

        * draco: Released draco-5_0_0.  See CCS-4:04-36 for details about
        the release.  This draco release includes the following component
        packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_gandolf
                ds++
                lapack_wrap
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                stdheaders
                timestep
                traits
                units
                viz
                xm

        Note that imc and mc have been moved out of draco [to clubimc].
        Also, we have not released cdi_eospac as part of draco-5_0_0
        because of compiler issues involving EOSPAC.

        There are significant build system changes particularly with
        regard to the autodoc system [see CCS-4:04-25].

        The Project Thuban [CCS-4:04-21] directory reorganization has been
        completed.  The draco development environment files have been
        moved to draco/environment.  Also, draco CVS now exists at
        sf.lanl.gov:/cvsroot/draco [draco SourceForge page].

        Again, see CCS-4:04-36 for details.

2004-04-19  Thomas M. Evans  <tme@lanl.gov>

        * src/*/autodoc/*: added autodoc/pkg.dcc to each draco package to
        conform to the new draco doxygenization system.

2004-04-13  Thomas M. Evans  <tme@lanl.gov>

        * src/Makefile.in: Because of upgrades to
        config/Makefile.dep.general, we can now do full parallel builds
        [including parallel dependency builds].

2004-04-08  Thomas M. Evans  <tme@lanl.gov>

        * mc, imc: Moved these packages to CLUBIMC library.  The last
        versions in draco were mc-4_0_0 and imc-4_0_0.  These tags were
        added just before the move.  Obviously, any history prior to these
        versions lives in draco, not clubimc. [Side Note: mc had one
        accidental commit to its ChangeLog after mc-4_0_0 tag.  This can
        be ignored].

2004-04-07  Thomas M. Evans  <tme@lanl.gov>

        * draco: Moved to SourceForge CVS control.  Formal time of move:

                2004-04-06: 12:00 p.m.

2004-03-11  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-4_3_0.  This is a minor release, as such it
        does not have a release memo associated with it.  In summary, the
        changes are:

                - added RCF and Vector_Lite to ds++
                - added MG surface tallies to imc particles tracking
                - small additions to draco-stdheaders
                - moved elisp XEmacs development environment to draco

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                stdheaders
                timestep
                traits
                units
                viz
                xm

        The forthcoming changes in draco will include moving the mc and
        imc packages into a Jayenne project source directory.

2004-01-13  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-4_2_0.  This is a minor release, as such it
        does not have a release memo associated with it.  In summary, the
        changes are:

                - added code test coverage to doc/code_stats; this data
                  will be provided in future release notes
                - changes in ds++ classes as a result of KT's elint work;
                  these changes do not affect the package interface
                - imc has several changes; chief among these are full
                  surface tally integration
                - mc has the sphyramid mesh added
                - the units package has been redesigned
                - cdi_eospac now checks that the Lahey compiler is in the
                  path.  This is an EOSPAC issue.  See the
                  cdi_eospac/ChangeLog for details.

        This version of draco has been tested successfully with gcc-3.3.2.

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                stdheaders
                timestep
                traits
                units
                viz
                xm

        The forthcoming changes in draco will include moving the mc and
        imc packages into a Jayenne project source directory.

2003-09-22  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-4_1_0.  This is a minor release, as such it
        does not have a release memo associated with it.  In summary, the
        changes are:

                - updated compaq LAPACK/BLAS numerics library in DBS
                - added cygwin to supported platforms in DBS
                - updated random walk in imc
                - updated libraries in build system for EOSPAC on LINUX
                - updated the regression and test filters

        See the individual package changelogs for more details.

        This draco release includes the following packages:

                RTT_Format_Reader
                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                stdheaders
                timestep
                traits
                units
                viz
                xm

        We still have not put in default build parameters.

2003-09-05  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-4_0_0. This is a major release with
        relatively minor changes from draco-3_2_0.  See
        draco/doc/releases/draco-4_0_0.tex for detail.  We are making this
        a major change because of the significant build system changes
        between draco-3_1_0 and draco-3_2_0.  In summary the changes are:

                - updates to mc and imc for random walk and surface
                  tracking
                - small build system improvements
                - some tool improvements

        This draco release includes the following packages:

                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                RTT_Format_Reader
                stdheaders
                timestep
                traits
                units
                viz
                xm

        We still have not put in default build parameters.

2003-07-25  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-3_2_0.  This is a minor release that has
        some significant build changes.  These changes are detailed in
        draco/doc/releases/draco-3_2_0.tex.  In summary they are:

                - finished ASCI White build system mods
                - updated vendor treatments in build system to add include
                  paths to CPPFLAGS
                - surfaces added to mc package
                - tally surfaces added to imc package
                - Rosseland integrators added to cdi
                - improvements to RTT_Format_Reader
                - improvements to c4::Timer

        This draco release includes the following packages:

                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                RTT_Format_Reader
                stdheaders
                timestep
                traits
                units
                viz
                xm

        Future releases of draco will include DBS defaults and better
        build system Doxygen documentation.

2003-07-03  Thomas M. Evans  <tme@lanl.gov>

        * draco: release draco-3_1_0.  This is a minor release that
        predates some [more] significant changes.  A summary of changes in
        this release is:

                - updated tests with return 0; statements in some packages
                - gray random walk implemented in imc package
                - surfaces added to mc package
                - small mods to c4 that returns the count after an async
                  receive
                - improved templates
                - additions for IBM xlC compiler support
                - the find_tags.py and find_tags_diff.py tools have
                  been updated for more general usage

        This release includes the following packages:

                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                RTT_Format_Reader
                stdheaders
                timestep
                traits
                units
                viz
                xm

        Because this is a minor release we have not formally documented it
        with a release note. Also, we have not updated the code
        statistics.

2003-06-04  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-3_0_0.  We have adopted some new policies,
        in particular, we now will not require package tags to be
        synchronized with the draco tag.  The package tags should be used
        for interim package releases [in between draco releases].

        We will now be more proactive about documenting major draco
        releases.  As part of that spirit, see "Release of Draco-3_0_0" in
        draco/doc/releases/draco-3_0_0.tex for details of this release.

        The following packages are part of this release:

                c4
                cdi
                cdi_analytic
                cdi_eospac
                cdi_gandolf
                ds++
                imc
                lapack_wrap
                mc
                meshReaders
                meshReaders_Services
                pcgWrap
                plot2D
                quadrature
                rng
                RTT_Format_Reader
                stdheaders
                timestep
                traits
                units
                viz
                xm

        They all have draco-3_0_0 tags as their latest release.

        We will be releasing a new version of the "Draco Release Policy
        and Procedures" document to cover the new release policy.

        We will also be releasing a new version of the "The Draco Build
        System".  This release contains all build system updates
        documented in this file since draco-2_4_0.

2003-05-07  Thomas M. Evans  <tme@lanl.gov>

        * draco/config: updated to [hopefully] work correctly on the IBM
        platform.  I added platform-specific makefiles for dependency
        rules.  This is necesary because the IBM xlC compiler works goofy
        when it comes to dependencies.

2003-04-30  Thomas M. Evans  <tme@lanl.gov>

        * draco, draco/config: committed first set of changes to make the
        build system autoconf > 2.5 compliant.  This commit changed the
        following:

                - Each directory now has its own aclocal.m4 [generated by
                automake] and configure [generated by autoconf].  Both of
                these files are stored in cvs.

                - The configure.in's have been replaced by configure.ac's
                matching the autoconf manual spec.

                - We updated some configure macros, particularly those
                that determined the word-sizes.  Vendor defines are no
                done in a body at the end of AC_DRACO_ENV.  This
                necessitates adding the vendor defines to the
                AC_VENDOR_DEFINES macro.

                - We added all the variable substitutions to the
                AC_DBS_VAR_SUBSTITUTIONS macro.

                - We will be releasing draco as an entity in the next
                release cycle.

                - Make no longer automatically checks the configure system
                as a dependency.  We have provided the targets gmake
                configure and gmake reconfigure to manually do this.

                - The draco_config script effectively replaces autoreconf
                for building configure infrastructure in the draco source
                directory.

        We will be releasing a technical note describing the build
        system updates.  We will also update the draco release procedures
        document.  The draco build system doxygen page will also get
        updated.

        We will continue to tweak this until draco-3_0_0.  This release
        will be the first draco release with the "new" build system.

2003-04-28  Thomas M. Evans  <tme@lanl.gov>

        * draco, draco/config: updated draco build system to use autoconf
        > 1.5.  This version of autoconf is NOT backward compatible with
        autoconf 2.1*.  This update results in many changes:

                - no longer will configure/build system stuff get
                automatically built during gmake; you can manually rebuild
                configure stuff with the new makefile targets gmake
                configure and gmake reconfigure

                - we will now start releasing draco under one tag, and we
                will not update each package tag to correspond with a
                draco tag.  Package tags are still valid; however, they do
                not have to be sync'd with a draco tag.  The draco tag [or
                package] tag will signify the latest version of a package.

                - We are now storing aclocal.m4 and configure files in
                each package directory.

2003-03-14  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-2_4_0.  This release contains the
        following packages:

                c4-2_3_0
                cdi-1_3_0
                cdi_analytic-1_1_0
                cdi_eospac-1_2_0
                cdi_gandolf-1_3_0
                ds++-1_9_0
                imc-3_3_0
                lapack_wrap-1_0_0
                mc-3_3_0
                meshReaders-1_4_0
                meshReaders_Services-1_0_0
                pcgWrap-1_2_0
                plot2D-1_1_0
                quadrature-1_2_0
                rng-1_6_0
                RTT_Format_Reader-1_3_0
                stdheaders-1_3_0
                timestep-1_3_0
                traits-1_5_0
                units-1_3_0
                viz-1_3_0
                xm-1_5_0

        See package ChangeLogs for package details.  On the draco front we
        changed:

                1) better doxygen front page
                2) build-system documentation
                3) new improved templates
                4) small build system fixes [Compaq link options]
                5) moved draco/Merge and draco/assesment to
                   draco/doc/merge and draco/doc/assessment

        Made significant update to build system.  The libraries are now
        built prefixed by a rtt_ by default.  For example, the ds++
        package library will be:

                librtt_ds++.a(so)

        Everything else is the same.  The prefix is added to the Makefiles
        at configure time.  Packages are still referenced by their package
        name, not library name.  The prefix can be changed by the
        --with-lib-prefix configure option.

        This change will help avoid library name collisions.  The
        following files were changed to accomodate the update:

                config/Makefile.package.in
                config/Makefile.test.in
                config/ac_conf.m4
                config/ac_draco_vendor.m4
                config/ac_dracoarg.m4
                config/ac_dracoenv.m4
                config/doc/build_system.dcc

2003-02-05  Thomas M. Evans  <tme@lanl.gov>

        * html: removed old John McGhee html info directory.

        * stopwatch: retired stopwatch package (corresponded to
        stopwatch-1_2_0).

2002-12-11  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-2_3_0.  This release contains the
        following updates to packages:

                c4-2_2_0
                cdi-1_3_0
                cdi_analytic-1_0_0
                cdi_eospac-1_2_0
                cdi_gandolf-1_3_0
                ds++-1_8_0
                imc-3_2_0
                lapack_wrap-1_0_0
                mc-3_2_0
                meshReaders-1_4_0
                meshReaders_Services-1_0_0
                pcgWrap-1_1_0
                plot2D-1_1_0
                quadrature-1_2_0
                rng-1_6_0
                RTT_Format_Reader-1_3_0
                stdheaders-1_3_0
                stopwatch-1_2_0
                timestep-1_3_0
                traits-1_5_0
                units-1_3_0
                viz-1_3_0
                xm-1_5_0

                radphys-retired (no longer part of head)

        Mainly small fixes.

2002-12-10  Thomas M. Evans  <tme@lanl.gov>

        * radphys: Retired radphys (corresponded to radphys-1_5_0).  This
        package simply was not standard compliant.

2002-11-15  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-2_2_0.  This release includes the
        following packages:

                c4-2_2_0
                cdi-1_2_0
                cdi_analytic-1_0_0
                cdi_eospac-1_1_0
                cdi_gandolf-1_2_0
                ds++-1_7_0
                imc-3_2_0
                lapack_wrap-1_0_0
                mc-3_2_0
                meshReaders-1_4_0
                meshReaders_Services-1_0_0
                pcgWrap-1_1_0
                plot2D-1_1_0
                quadrature-1_1_0
                radphys-1_5_0
                rng-1_6_0
                RTT_Format_Reader-1_3_0
                stdheaders-1_3_0
                stopwatch-1_2_0
                timestep-1_3_0
                traits-1_4_0
                units-1_3_0
                viz-1_3_0
                xm-1_4_0

        This release mainly has fixes for standard-compliant compiler
        stuff.  Very minor release, but it does seem to run on all
        systems.  The standard compliant fixes are for gcc 3.2.

2002-09-05  Thomas M. Evans  <tme@lanl.gov>

        * lapack_wrap: Added lapack_wrap component that provides
        C++-wrapped BLAS and LAPACK functions.

2002-08-15  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-2_1_0.  It includes the following
        packages:

                ds++-1_6_0
                stdheaders-1_2_0
                c4-2_1_0
                traits-1_4_0
                units-1_3_0
                xm-1_3_0
                rng-1_6_0
                meshReaders-1_4_0
                cdi-1_2_0
                quadrature-1_1_0
                stopwatch-1_2_0
                plot2D-1_0_0
                timestep-1_3_0
                pcgWrap-1_1_0
                viz-1_3_0
                radphys-1_4_0
                RTT_Format_Reader-1_3_0
                cdi_gandolf-1_2_0
                cdi_eospac-1_1_0
                cdi_analytic-1_0_0
                mc-3_1_0
                meshReaders_Services-1_0_0
                imc-3_1_0

        This is a minor draco release.  Most of the packages have been
        tested with the COMPAQ 6_5_0 compiler (all packages used by IMC
        codes).  Some build system updates were added: principally, draco
        can now be used as a vendor by clients using the draco build
        system.  It also has expanded COMPAQ support.

        We still have the following to work on:

                - support for the draco/doc and draco/src/<pkg>/doc
                  builds, native format is not important, but pdfs
                  must be able to be generated
                - better F90 integration
                - better documentation for draco build system

2002-05-09  Thomas M. Evans  <tme@lanl.gov>

        * draco: released draco-2_0_0.  The following packages no longer
        have their own tags:

                config
                tools
                templates

        The new policy is that only packages under draco/src have their
        own formal tags.  All other parts of draco simply carry a release
        tag.  This release of draco contains the following tagged
        packages:

                ds++-1_6_0
                stdheaders-1_2_0
                c4-2_0_0
                traits-1_4_0
                units-1_3_0
                xm-1_3_0
                rng-1_6_0
                meshReaders-1_4_0
                cdi-1_2_0
                quadrature-1_1_0
                stopwatch-1_2_0
                plot2D-1_0_0
                timestep-1_3_0
                pcgWrap-1_1_0
                viz-1_3_0
                radphys-1_4_0
                RTT_Format_Reader-1_3_0
                cdi_gandolf-1_2_0
                cdi_eospac-1_1_0
                cdi_analytic-1_0_0
                mc-3_0_0
                meshReaders_Services-1_0_0
                imc-3_0_0

        Pre-built versions of draco are available on
        /radtran/vendors/draco.  This is a link that points to the latest
        release.

        As of this release, all of draco is required to build with the g++
        (> 3.0.1) compiler.  This is, of course, subject to discussion;
        however, we will keep this as a general rule.

        The build system has been significantly updated:

                - real support for autodoc (doxygen)
                - cleaned up compiler and vendor support
                - support cxx, gcc, kcc, and SGI CC compilers
                - improved support for F90

        We still have the following to work on:

                - support for the draco/doc and draco/src/<pkg>/doc
                  builds, native format is not important, but pdfs
                  must be able to be generated
                - better F90 integration
                - better documentation for draco build system

        To figure out the parameters of a draco build, use the bin/draco
        tool.  This script will tell the following info:

                - version of draco
                - configure options used in build
                - installation prefix

        As implied above, it gets installed inside of bin. Use draco
        --help to query options.

2001-10-17  Thomas M. Evans  <tme@lanl.gov>

        * doc/design: added draco levelization diagrams reflecting current
        version of draco.

        * src/configure.in: updated this configure.in to reflect the
        current state of draco.

        * draco: on this date--between release 1_0_0 and 2_0_0--draco has
        the following packages:

                level 1: ds++ stdheaders
                level 2: xm rng c4 units traits UnitTestFrame cdi
                level 3: timestep pcgWrap stopwatch quadrature radphys
                         ConjGrad meshReaders viz cdi_eospac
                         cdi_gandolf cdi_analytic
                level 4: RTT_Format_Reader
                level 5: mc meshReaders_Services
                level 6: imc

        * pcgWrap: changed linalg to pcgWrap.  Released pcgWrap-1_0_0.
        This is a temporary package because pcg is no longer supported at
        the lab.  It will be superceded in the near future.

        * config: build-system improvements.  Notably, cleaned up vendor
        stuff--added with-lapack, with-gandolf, with-pcg, removed
        with-pcglib.

2000-05-03  Thomas M. Evans  <tme@lanl.gov>

        * draco/: Released draco version draco-1_0_0.  This version
        contains the following sub-directories:

                src/
                doc/
                templates/
                autodoc/

        It contains the following packages under draco/:

                config-1_2_0
                tools-1_0_0

        It contains the following packages under draco/src/:

                mesh-1_8_0
                meshReaders-1_0_0
                imc-1_3_0
                mc-1_2_0
                rng-1_3_0
                c4-1_3_0
                viz-1_0_0
                timestep-1_2_0
                xm-1_2_0
                stopwatch-1_1_0
                matprops-1_4_0
                nml-1_2_0
                UnitTestFrame-1_0_0
                traits-1_3_0
                diffusion-1_3_0
                radphys-1_4_0
                units-1_3_0
                ds++-1_3_0
                P1Diffusion-1_5_0
                ConjGradDiffusionSolver-1_0_0
                ConjGrad-1_0_0
                meshTest-1_2_0

        All regression tests in these packages passed on mikonos utilizing
        the following configuration:

                draco_config .. --with-c4=mpi
                --with-mpi-inc=/usr/local/mpich/include
                --with-mpi-lib=/usr/local/mpich/lib
                --with-sprng-inc=/usr/local/vendors/sprng/include
                --with-sprng-lib=/usr/local/vendors/sprng/lib

        KCC 3.4g (LINUX) was used as the compiler.  See Memo
        X-6:00-22(U). For details.

1999-09-08  Thomas M. Evans  <tme@lanl.gov>

        * templates: update templates to 1_1_0, added ChangeLog file to
        templates directory.  In the future, each package in draco that
        maintains its own numbered release tag, autodoc, templates,
        config, c4, ds++, etc. should have their own ChangeLog files to
        record package-wide changes.  The draco ChangeLog will only record
        draco-specific changes, releases, etc.  Of course, developers
        should feel free to "mirror" any changes noted in the individual
        package ChangeLogs to the draco ChangeLogs.  Even comments such
        as, "made changes in templates" are effective, as a user could
        simply peruse the templates ChangeLog file to see actual changes
        made.

1999-09-03  Thomas M. Evans  <tme@lanl.gov>

        * autodoc, Makefile.in: added autodoc directory for automatic
        document generation.  added gmake autodoc target that runs doxygen
        to build the documentation in the installation directory.  The
        documentation is built in the html and latex directories.  Running
        gmake autodoc automatically does an install of the documentation.
        Running gmake clean will remove the documentation files from html
        and latex.  Note that no dependencies have been added to this
        target yet.

$Id$

        * src (all directories): initial release.
