#!/bin/bash -l
##---------------------------------------------------------------------------##
## File  : regression/cts1-regress.sh
## Date  : Tuesday, May 31, 2016, 14:48 pm
## Author: Kelly Thompson
## Note  : Copyright (C) 2016-2019, Triad National Security, LLC.
##         All rights are reserved.
##---------------------------------------------------------------------------##

# Under cron, a basic environment might not be loaded yet.
#if [[ `which srun 2>/dev/null | grep -c srun` == 0 ]]; then
#  source /etc/bash.bashrc.local
#fi

# Allow variable as case condition
shopt -s extglob

#----------------------------------------------------------------------#
# The script starts here
#----------------------------------------------------------------------#

# Sanity Check
# ----------------------------------------
if [[ ! ${rscriptdir} ]]; then
   echo "Fatal Error, rscriptdir not found in environment."
   exit 1
fi

# import some bash functions
source $rscriptdir/scripts/common.sh

if [[ ! ${subproj} ]]; then
  die "Fatal Error, subproj not found in environment."
fi
if [[ ! ${regdir} ]]; then
  die "Fatal Error, regdir not found in environment."
fi
if [[ ! ${build_type} ]]; then
  die "Fatal Error, build_type not found in environment."
fi
if [[ ! ${logdir} ]]; then
  die "Fatal Error, logdir not found in environment."
fi
if [[ `which srun 2>/dev/null | grep -c srun` == 0 ]]; then
  die "Cannot find srun.  Possibly bad environment or machine issue."
fi

# Environment setup
# ----------------------------------------
umask 0002

# Set a variable to avoid errors of the form "Assertion failure at psm_ep.c:835:
# ep->epid !=0". This was suggested by Howard Pritchard via email on 2018 Jan 18.
export OMPI_MCA_PML=ob1
# export OMPI_MCA_pml_base_verbose=100
# email from Howard Pritchard, 2018-03-22
# export PSM2_TRACEMASK=0x1c3
# Ref PSM2 user guide (https://www.intel.com/content/dam/support/us/en/documents/network/omni-adptr/sb/Intel_PSM2_PG_H76473_v1_0.pdf )

export http_proxy=http://proxyout.lanl.gov:8080
export HTTP_PROXY=$http_proxy
export https_proxy=$http_proxy
export HTTPS_PROXY=$http_proxy
# ctest submit seems to ignore these no proxy settings, so we must unset the
# above proxy env variables before submitting the results to cdash.
export no_proxy="localhost,127.0.0.1,rtt.lanl.gov,.lanl.gov"
export NO_PROXY=$no_proxy
export VENDOR_DIR=/usr/projects/draco/vendors
# gitlab.lanl.gov has an unkown certificate, disable checking
export GIT_SSL_NO_VERIFY=true

case $REGRESSION_PHASE in
c) ctestparts=Configure;;
bt) ctestparts=Build,Test;;
s)
    ctestparts=Submit
    # Submitting to CDash requires this
    unset http_proxy
    unset https_proxy
    unset HTTP_PROXY
    unset HTTPS_PROXY
    ;;
  *)
    echo "Fatal Error, REGRESSION_PHASE = \"${REGRESSION_PHASE}\" does not match \"c\", \"b\", \"t\" or \"s\"."
    exit 1
    ;;
esac

# Host based variables
# ----------------------------------------
machine=`uname -n`
export host=`uname -n | sed -e 's/[.].*//g'`
platform_extra_params=`echo $platform_extra_params | sed -e 's/ / | /g'`
source $rscriptdir/cts1-options.sh

# Header
# ----------------------------------------
echo "==========================================================================="
echo "${machine_name_long} regression: ${ctestparts} from ${machine}."
echo "                      ${subproj}-${build_type}${epdash}${extra_params_sort_safe}${prdash}${featurebranch}"
echo "==========================================================================="
if [[ ${SLURM_JOB_PARTITION} ]]; then
  echo " "
  echo "Allocation configuration:"
  echo $SLURM_JOB_PARTITION
  echo " "
fi
run "ulimit -a"

# Modules
# ----------------------------------------
if [[ `fn_exists module` == 0 ]]; then
    echo 'module function does not exist. defining a local function ...'
    run "source /usr/share/Modules/init/bash"
fi

# Clear any loaded modules as these are invalid when staring a new shell.
run "module purge &> /dev/null"
unset _LMFILES_
run "module list"
#export ucmf=$HOME/modulefiles
#run "module use --append $ucmf/`/usr/projects/hpcsoft/utilities/bin/sys_name`"

run "module load friendly-testing"
run "module load user_contrib"
run "module load intel/18.0.2 openmpi/2.1.2"
run "unset MPI_ROOT"
run "module load trilinos/12.10.1 superlu-dist metis parmetis"
run "module load cmake ndi numdiff git"
run "module load mkl random123 eospac/6.3.0"
run "module use --append ${VENDOR_DIR}-ec/modulefiles"
run "module load csk"

export OMP_NUM_THREADS=18
comp=`basename $CXX`
if [[ "${comp}" == "icpc" ]]; then
  comp="intel"
fi

# sanity checks
compiler_set=no

# Extra parameters
for ep in $extra_params; do
  case $ep in
    "")
      # no-op
      ;;
    fulldiagnostics)
      # no-op
      ;;
    gcc640)
      if [[ $compiler_set == yes ]]; then
        die "You cannot select multiple compilers with the '-e' argument."
      fi
      compiler_set=yes
      run "module purge &> /dev/null"
      run "module list"
      run "module load user_contrib friendly-testing"
      run "module load gcc/6.4.0 openmpi/2.1.2 mkl"
      run "unset MPI_ROOT"
      run "module load trilinos/12.10.1 superlu-dist metis parmetis"
      run "module load cmake ndi numdiff git"
      run "module load random123 eospac/6.3.0"
      comp="${LCOMPILER}"
      echo "comp = $comp"
      ;;
    gcc740)
      if [[ $compiler_set == yes ]]; then
        die "You cannot select multiple compilers with the '-e' argument."
      fi
      compiler_set=yes
      run "module purge &> /dev/null"
      run "module list"
      run "module load user_contrib friendly-testing"
      run "module load gcc/7.4.0 openmpi/2.1.2 mkl"
      run "unset MPI_ROOT"
      run "module load trilinos/12.10.1 superlu-dist metis parmetis"
      run "module load cmake ndi numdiff git"
      run "module load random123 eospac/6.3.1"
      comp="${LCOMPILER}"
      echo "comp = $comp"
      ;;
    newtools)
      if [[ $compiler_set == yes ]]; then
        die "You cannot select multiple compilers with the '-e' argument."
      fi
      compiler_set=yes
      run "module purge &> /dev/null"
      run "module list"
      run "module load user_contrib friendly-testing"
      run "module load intel/19.0.1 openmpi/3.1.2 mkl"
      run "unset MPI_ROOT"
      run "module load superlu-dist metis parmetis"
      run "module load trilinos/12.10.1"
      run "module load cmake ndi numdiff git"
      run "module load mkl random123 eospac csk"
      ;;
    nr)
      # no-op
      ;;
    perfbench)
      # no-op
      ;;
    vtest)
      # no-op
      ;;
    @($pem_match) )
    # found in tt-options.sh but no rule found here
    echo "FATAL ERROR"
    echo "Extra parameter = ${ep} requested and known by ${machine_name_short}-options.sh,"
    echo "but ${0##*/} doesn't know about this option."
    exit 1
    ;;
    *)
      echo "FATAL ERROR"
      echo "Extra parameter = ${ep} requested but is unknown to"
      echo "the regression system (edit ${0##*/})."
      exit 1
      ;;
  esac
done
run "module list"
unset MPI_ROOT

# Use a unique regression folder for each github branch
if [[ $extra_params_sort_safe ]]; then
  comp=$comp-$extra_params_sort_safe
fi
comp=$comp-$featurebranch

# When run by crontab, use a special ssh-key to allow authentication to gitlab
if [[ ${regress_mode} == "on" ]]; then
  run "module load git"
  target=`uname -n | sed -e 's/[.].*//g'`
  keychain=keychain-2.8.5
  run "$VENDOR_DIR/$keychain/keychain --agents ssh regress_rsa"
  if [[ `$VENDOR_DIR/$keychain/keychain -l 2>&1 | grep -c Error` != 0 ||
        `$VENDOR_DIR/$keychain/keychain -l 2>&1 | grep -c authentication` != 0 ]]; then
    run "source ~/.keychain/${target}-sh"
  fi
  # run "$VENDOR_DIR/$keychain/keychain -l"
  # run "ssh-add -L"
fi

# ----------------------------------------
# Run the CTest script:
# ----------------------------------------
# This script will take the following build steps:
# 1. cvs update
# 2. run cmake to build Makefiles
# 3. run make to build libraries and tests
# 4. Run the unit tests
# 5. Post the results to rtt.lanl.gov/cdash
#
# Options are:
# Regression type: Experimental (default), Nightly, Continuous
# Build type     : Release, Debug

if [[ ! ${dashboard_type} ]]; then
   dashboard_type=Experimental
fi
if [[ ! ${base_dir} ]]; then
   if ! [[ -d ${scratchdir} ]]; then
      echo "FATAL ERROR, scratchdir=${scratchdir} not found."
      echo "  Have the names/locations of scratch space changed?"
      exit 1
   fi
   scratchdir=$scratchdir/$LOGNAME/cdash/${machine_name_short}
   base_dir=${regdir}/cdash/${machine_name_short}
fi

echo " "
echo "${0##*/}: dashboard_type = $dashboard_type"
echo "${0##*/}: base_dir       = $base_dir"
echo "${0##*/}: build_type     = $build_type"
echo "${0##*/}: comp           = $comp"
echo "${0##*/}: machine        = $machine"
echo "${0##*/}: subproj        = $subproj"
echo "${0##*/}: regdir         = $regdir"
echo "${0##*/}: extra_params_sort_safe = $extra_params_sort_safe"

#----------------------------------------------------------------------#
# CTest
#----------------------------------------------------------------------#

if test "${subproj}" == draco; then
    script_dir=${rscriptdir}
    script_name=Draco_Linux64.cmake
elif test "${subproj}" == jayenne; then
    script_dir=`echo ${rscriptdir} | sed -e 's/draco/jayenne/'`
    script_name=Jayenne_Linux64.cmake
elif test "${subproj}" == core; then
    script_dir=`echo ${rscriptdir} | sed -e 's%draco/regression%core/scripts%'`
    script_name=Core_Linux64.cmake
elif test "${subproj}" == trt; then
    script_dir=`echo ${rscriptdir} | sed -e 's%draco/regression%trt/scripts%'`
    script_name=Trt_Linux64.cmake
elif test "${subproj}" == npt; then
    script_dir=`echo ${rscriptdir} | sed -e 's%draco/regression%npt/scripts%'`
    script_name=Npt_Linux64.cmake
fi

if ! [[ "${regress_mode}" == "on" ]]; then
  export buildname_append="-${USER}"
fi

# work_dir and scratch_dir are not the same for regress_mode == on.
export work_dir=${base_dir}/${subproj}/${dashboard_type}_${comp}/${build_type}
export scratch_dir=${scratchdir}/${subproj}/${dashboard_type}_${comp}/${build_type}

echo "${0##*/}: work_dir       = ${work_dir}"
echo "${0##*/}: scratch_dir    = ${scratch_dir}"
echo " "
setup_dirs=`echo $ctestparts | grep Configure`
if [[ ${setup_dirs} ]]; then
   if ! test -d ${work_dir}/source; then
      run "mkdir -p ${work_dir}/source"
   fi
   # See notes above where scratch_dir is set concerning why these are soft
   # links.
   if test "${regress_mode}" = "on"; then
     if ! test -d ${scratch_dir}/build; then
       run "mkdir -p ${scratch_dir}/build"
     fi
     # remove symlinks
     rm ${work_dir}/build ${work_dir}/target
     if ! test -d ${work_dir}/build; then
       run "ln -s ${scratch_dir}/build ${work_dir}/build"
     fi
     if ! test -d ${scratch_dir}/target; then
       run "mkdir -p ${scratch_dir}/target"
     fi
     if ! test -d ${work_dir}/target; then
       run "ln -s ${scratch_dir}/target ${work_dir}/target"
     fi
   else
     # $work_dir is $scratchdir/$USER/cdash/$machine/$build_name
     if ! test -d ${work_dir}/build; then
       run "mkdir -p ${work_dir}/build"
     fi
     if ! test -d ${work_dir}/target; then
       run "mkdir -p ${work_dir}/target"
     fi
   fi

   # clean the installation directory to remove any files that might no longer
   # be generated.
   if test -d ${work_dir}/target/lib; then
       run "rm -rf ${work_dir}/target/*"
   fi
   if test -f ${work_dir}/build/CMakeCache.txt; then
       run "rm -rf ${work_dir}/build/*"
   fi
fi

# Environment
# echo " "
# echo "--------------------(environment)------------------------------"
# set
# echo "--------------------(end environment)--------------------------"

date
echo " "
echo ctest -VV -S ${script_dir}/${script_name},${dashboard_type},${build_type},${ctestparts}
echo " "
ctest -VV -S ${script_dir}/${script_name},${dashboard_type},${build_type},${ctestparts}

if [[ ${regress_mode} == "on" ]]; then
  echo " "
  run "chgrp -R ccsrad ${work_dir}"
  run "chmod -R g+rX,o-rwX ${work_dir}"
#  run "find ${work_dir} -type d -exec chmod g+s {} \;"
fi

echo "All done."

##---------------------------------------------------------------------------##
## End of script
##---------------------------------------------------------------------------##
